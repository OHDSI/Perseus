services:
  web:
    build: ./nginx
    image: perseushub.azurecr.io/web
    container_name:
      web
    ports:
      - "80:80"
    restart: always
  shareddb:
    build: ./shared-db
    image: perseushub.azurecr.io/shareddb
    container_name: shareddb
    volumes:
      - shareddb:/data/postgres
    ports:
      - "5432:5432"
  files-manager:
    build: ./files-manager
    image: perseushub.azurecr.io/files-manager
    container_name: files-manager
    ports:
      - "10500:10500"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - shareddb
  white-rabbit:
    build: ../WhiteRabbit
    image: perseushub.azurecr.io/white-rabbit
    container_name:
      white-rabbit
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - shareddb
      - files-manager
  cdm-builder:
    build: 
       context: ../ETL-CDMBuilder
       dockerfile: ../ETL-CDMBuilder/source/org.ohdsi.cdm.presentation.builderwebapi/Dockerfile
    image: perseushub.azurecr.io/cdm-builder
    container_name:
      cdm-builder
    ports:
      - "9000:9000"
    depends_on:
      - shareddb
      - files-manager
      - vocabularydb
  r-serve:
    build:
      context: ../DataQualityDashboard/R
      args:
        prop: docker
    image: perseushub.azurecr.io/r-serve
    container_name:
      r-serve
    ports:
      - "6311:6311"
    depends_on:
      - shareddb
  data-quality-dashboard:
    build:
      context: ../DataQualityDashboard
    image: perseushub.azurecr.io/data-quality-dashboard
    container_name:
      data-quality-dashboard
    ports:
      - "8001:8001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - shareddb
      - files-manager
      - r-serve
  user:
    build: ./user
    image: perseushub.azurecr.io/user
    command: python /app/main.py
    container_name: user
    environment:
      USER_ENV: Docker
      TOKEN_SECRET_KEY: Perseus-Arcadia
    env_file:
      - user/user-envs.txt
    ports:
      - "5001:5001"
    depends_on:
      - shareddb
  backend:
    build: ./perseus-api
    image: perseushub.azurecr.io/backend
    command: python /app/main.py
    container_name: backend
    environment:
      PERSEUS_ENV: Docker
    ports:
      - "5000:5000"
    depends_on:
      - shareddb
      - files-manager
  vocabularydb:
    build: ./vocabulary-db
    image: perseushub.azurecr.io/vocabularydb
    container_name: vocabularydb
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "vocabulary", "-U", "perseus" ]
      timeout: 60s
      interval: 30s
      retries: 10
    volumes:
      - vocabularydb:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
  frontend:
    build:
      context: ./UI
      args:
        env: prod
    image: perseushub.azurecr.io/frontend
    container_name:
      frontend
    ports:
      - "4200:4200"
  solr:
    build: ./solr
    image: perseushub.azurecr.io/solr
    container_name: solr
    command:
      - solr-precreate
      - athena
      - /opt/solr/server/solr/configsets/athena/conf
    ports:
      - "8983:8983"
    volumes:
      - solr:/var/solr
  athena:
    build: ./athena-api
    image: perseushub.azurecr.io/athena
    command: python /app/main.py
    container_name: athena
    environment:
      ATHENA_ENV: Docker
    ports:
      - "5002:5002"
    depends_on:
      - solr
#  usagi:
#    build: ./usagi-api
#    command: python /app/main.py
#    container_name: usagi
#    environment:
#      USAGI_ENV: Docker
#    ports:
#      - "5003:5003"
#    depends_on:
#      - shareddb
#      - vocabularydb
#      - solr

volumes:
  shareddb:
    driver: azure_file
    driver_opts:
      share_name: shareddb
      storage_account_name: shareddb
  vocabularydb:
    driver: azure_file
    driver_opts:
      share_name: vocabularydb
      storage_account_name: vocabularydb
  solr:
    driver: azure_file
    driver_opts:
      share_name: solr
      storage_account_name: solr
