{
  "openapi": "3.0.0",
  "info": {
    "title": "data-connection",
    "version": "0.0.1",
    "description": "Back end implementation of the data connection api",
    "contact": {
      "name": "Nate Buesgens",
      "email": "nathan@natb1.com"
    }
  },
  "paths": {
    "/care_site/count": {
      "get": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "count",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "200": {
            "description": "care_site count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "care_site.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<care_site>"
                }
              }
            }
          }
        ],
        "operationId": "care_siteController.count"
      }
    },
    "/care_site/{id}": {
      "put": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "replaceById",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "204": {
            "description": "care_site was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/care_site"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "care_siteController.replaceById"
      },
      "patch": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "updateById",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "204": {
            "description": "care_site was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/care_sitePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "care_siteController.updateById"
      },
      "get": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "findById",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "200": {
            "description": "care_site instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/care_siteWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/care_site.Filter"
                }
              }
            }
          }
        ],
        "operationId": "care_siteController.findById"
      },
      "delete": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "deleteById",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "204": {
            "description": "care_site was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "care_siteController.deleteById"
      }
    },
    "/care_site": {
      "post": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "create",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "200": {
            "description": "care_site instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/care_site"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcare_site"
              }
            }
          }
        },
        "operationId": "care_siteController.create"
      },
      "patch": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "updateAll",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "200": {
            "description": "Count of care_site models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "care_site.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<care_site>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/care_sitePartial"
              }
            }
          }
        },
        "operationId": "care_siteController.updateAll"
      },
      "get": {
        "x-controller-name": "care_siteController",
        "x-operation-name": "find",
        "tags": [
          "care_siteController"
        ],
        "responses": {
          "200": {
            "description": "Array of care_site instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/care_siteWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/care_site.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "care_siteController.find"
      }
    },
    "/cdm_source/count": {
      "get": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "count",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "200": {
            "description": "cdm_source count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cdm_source.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cdm_source>"
                }
              }
            }
          }
        ],
        "operationId": "cdm_sourceController.count"
      }
    },
    "/cdm_source/{id}": {
      "put": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "replaceById",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "204": {
            "description": "cdm_source was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cdm_source"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cdm_sourceController.replaceById"
      },
      "patch": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "updateById",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "204": {
            "description": "cdm_source was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cdm_sourcePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cdm_sourceController.updateById"
      },
      "get": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "findById",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "200": {
            "description": "cdm_source instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdm_sourceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdm_source.Filter"
                }
              }
            }
          }
        ],
        "operationId": "cdm_sourceController.findById"
      },
      "delete": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "deleteById",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "204": {
            "description": "cdm_source was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "cdm_sourceController.deleteById"
      }
    },
    "/cdm_source": {
      "post": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "create",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "200": {
            "description": "cdm_source instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdm_source"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcdm_source"
              }
            }
          }
        },
        "operationId": "cdm_sourceController.create"
      },
      "patch": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "updateAll",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "200": {
            "description": "Count of cdm_source models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cdm_source.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cdm_source>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cdm_sourcePartial"
              }
            }
          }
        },
        "operationId": "cdm_sourceController.updateAll"
      },
      "get": {
        "x-controller-name": "cdm_sourceController",
        "x-operation-name": "find",
        "tags": [
          "cdm_sourceController"
        ],
        "responses": {
          "200": {
            "description": "Array of cdm_source instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdm_sourceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdm_source.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "cdm_sourceController.find"
      }
    },
    "/cohort/count": {
      "get": {
        "x-controller-name": "cohortController",
        "x-operation-name": "count",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "200": {
            "description": "cohort count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cohort.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cohort>"
                }
              }
            }
          }
        ],
        "operationId": "cohortController.count"
      }
    },
    "/cohort/{id}": {
      "put": {
        "x-controller-name": "cohortController",
        "x-operation-name": "replaceById",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "204": {
            "description": "cohort was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cohortController.replaceById"
      },
      "patch": {
        "x-controller-name": "cohortController",
        "x-operation-name": "updateById",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "204": {
            "description": "cohort was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohortPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cohortController.updateById"
      },
      "get": {
        "x-controller-name": "cohortController",
        "x-operation-name": "findById",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "200": {
            "description": "cohort instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohortWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.Filter"
                }
              }
            }
          }
        ],
        "operationId": "cohortController.findById"
      },
      "delete": {
        "x-controller-name": "cohortController",
        "x-operation-name": "deleteById",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "204": {
            "description": "cohort was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "cohortController.deleteById"
      }
    },
    "/cohort": {
      "post": {
        "x-controller-name": "cohortController",
        "x-operation-name": "create",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "200": {
            "description": "cohort instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcohort"
              }
            }
          }
        },
        "operationId": "cohortController.create"
      },
      "patch": {
        "x-controller-name": "cohortController",
        "x-operation-name": "updateAll",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "200": {
            "description": "Count of cohort models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cohort.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cohort>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohortPartial"
              }
            }
          }
        },
        "operationId": "cohortController.updateAll"
      },
      "get": {
        "x-controller-name": "cohortController",
        "x-operation-name": "find",
        "tags": [
          "cohortController"
        ],
        "responses": {
          "200": {
            "description": "Array of cohort instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cohortWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "cohortController.find"
      }
    },
    "/cohort_definition/count": {
      "get": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "count",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "200": {
            "description": "cohort_definition count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cohort_definition.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cohort_definition>"
                }
              }
            }
          }
        ],
        "operationId": "cohort_definitionController.count"
      }
    },
    "/cohort_definition/{id}": {
      "put": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "replaceById",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "204": {
            "description": "cohort_definition was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort_definition"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cohort_definitionController.replaceById"
      },
      "patch": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "updateById",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "204": {
            "description": "cohort_definition was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort_definitionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "cohort_definitionController.updateById"
      },
      "get": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "findById",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "200": {
            "description": "cohort_definition instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort_definitionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort_definition.Filter"
                }
              }
            }
          }
        ],
        "operationId": "cohort_definitionController.findById"
      },
      "delete": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "deleteById",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "204": {
            "description": "cohort_definition was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "cohort_definitionController.deleteById"
      }
    },
    "/cohort_definition": {
      "post": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "create",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "200": {
            "description": "cohort_definition instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort_definition"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcohort_definition"
              }
            }
          }
        },
        "operationId": "cohort_definitionController.create"
      },
      "patch": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "updateAll",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "200": {
            "description": "Count of cohort_definition models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cohort_definition.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cohort_definition>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort_definitionPartial"
              }
            }
          }
        },
        "operationId": "cohort_definitionController.updateAll"
      },
      "get": {
        "x-controller-name": "cohort_definitionController",
        "x-operation-name": "find",
        "tags": [
          "cohort_definitionController"
        ],
        "responses": {
          "200": {
            "description": "Array of cohort_definition instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cohort_definitionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort_definition.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "cohort_definitionController.find"
      }
    },
    "/concept/count": {
      "get": {
        "x-controller-name": "conceptController",
        "x-operation-name": "count",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "200": {
            "description": "concept count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept>"
                }
              }
            }
          }
        ],
        "operationId": "conceptController.count"
      }
    },
    "/concept/{id}": {
      "put": {
        "x-controller-name": "conceptController",
        "x-operation-name": "replaceById",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "204": {
            "description": "concept was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "conceptController.replaceById"
      },
      "patch": {
        "x-controller-name": "conceptController",
        "x-operation-name": "updateById",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "204": {
            "description": "concept was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/conceptPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "conceptController.updateById"
      },
      "get": {
        "x-controller-name": "conceptController",
        "x-operation-name": "findById",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "200": {
            "description": "concept instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conceptWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept.Filter"
                }
              }
            }
          }
        ],
        "operationId": "conceptController.findById"
      },
      "delete": {
        "x-controller-name": "conceptController",
        "x-operation-name": "deleteById",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "204": {
            "description": "concept was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "conceptController.deleteById"
      }
    },
    "/concept": {
      "post": {
        "x-controller-name": "conceptController",
        "x-operation-name": "create",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "200": {
            "description": "concept instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newconcept"
              }
            }
          }
        },
        "operationId": "conceptController.create"
      },
      "patch": {
        "x-controller-name": "conceptController",
        "x-operation-name": "updateAll",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "200": {
            "description": "Count of concept models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/conceptPartial"
              }
            }
          }
        },
        "operationId": "conceptController.updateAll"
      },
      "get": {
        "x-controller-name": "conceptController",
        "x-operation-name": "find",
        "tags": [
          "conceptController"
        ],
        "responses": {
          "200": {
            "description": "Array of concept instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/conceptWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "conceptController.find"
      }
    },
    "/concept_ancestor/count": {
      "get": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "count",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "200": {
            "description": "concept_ancestor count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_ancestor.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_ancestor>"
                }
              }
            }
          }
        ],
        "operationId": "concept_ancestorController.count"
      }
    },
    "/concept_ancestor/{id}": {
      "put": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "replaceById",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "204": {
            "description": "concept_ancestor was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_ancestor"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_ancestorController.replaceById"
      },
      "patch": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "updateById",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "204": {
            "description": "concept_ancestor was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_ancestorPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_ancestorController.updateById"
      },
      "get": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "findById",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "200": {
            "description": "concept_ancestor instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_ancestorWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_ancestor.Filter"
                }
              }
            }
          }
        ],
        "operationId": "concept_ancestorController.findById"
      },
      "delete": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "deleteById",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "204": {
            "description": "concept_ancestor was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "concept_ancestorController.deleteById"
      }
    },
    "/concept_ancestor": {
      "post": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "create",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "200": {
            "description": "concept_ancestor instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_ancestor"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newconcept_ancestor"
              }
            }
          }
        },
        "operationId": "concept_ancestorController.create"
      },
      "patch": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "updateAll",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "200": {
            "description": "Count of concept_ancestor models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_ancestor.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_ancestor>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_ancestorPartial"
              }
            }
          }
        },
        "operationId": "concept_ancestorController.updateAll"
      },
      "get": {
        "x-controller-name": "concept_ancestorController",
        "x-operation-name": "find",
        "tags": [
          "concept_ancestorController"
        ],
        "responses": {
          "200": {
            "description": "Array of concept_ancestor instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/concept_ancestorWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_ancestor.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "concept_ancestorController.find"
      }
    },
    "/concept_class/count": {
      "get": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "count",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "200": {
            "description": "concept_class count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_class.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_class>"
                }
              }
            }
          }
        ],
        "operationId": "concept_classController.count"
      }
    },
    "/concept_class/{id}": {
      "put": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "replaceById",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "204": {
            "description": "concept_class was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_class"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_classController.replaceById"
      },
      "patch": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "updateById",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "204": {
            "description": "concept_class was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_classPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_classController.updateById"
      },
      "get": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "findById",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "200": {
            "description": "concept_class instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_classWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_class.Filter"
                }
              }
            }
          }
        ],
        "operationId": "concept_classController.findById"
      },
      "delete": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "deleteById",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "204": {
            "description": "concept_class was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "concept_classController.deleteById"
      }
    },
    "/concept_class": {
      "post": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "create",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "200": {
            "description": "concept_class instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_class"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newconcept_class"
              }
            }
          }
        },
        "operationId": "concept_classController.create"
      },
      "patch": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "updateAll",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "200": {
            "description": "Count of concept_class models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_class.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_class>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_classPartial"
              }
            }
          }
        },
        "operationId": "concept_classController.updateAll"
      },
      "get": {
        "x-controller-name": "concept_classController",
        "x-operation-name": "find",
        "tags": [
          "concept_classController"
        ],
        "responses": {
          "200": {
            "description": "Array of concept_class instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/concept_classWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_class.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "concept_classController.find"
      }
    },
    "/concept_relationship/count": {
      "get": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "count",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "concept_relationship count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_relationship>"
                }
              }
            }
          }
        ],
        "operationId": "concept_relationshipController.count"
      }
    },
    "/concept_relationship/{id}": {
      "put": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "replaceById",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "concept_relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_relationship"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_relationshipController.replaceById"
      },
      "patch": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "updateById",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "concept_relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_relationshipPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_relationshipController.updateById"
      },
      "get": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "findById",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "concept_relationship instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_relationshipWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_relationship.Filter"
                }
              }
            }
          }
        ],
        "operationId": "concept_relationshipController.findById"
      },
      "delete": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "deleteById",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "concept_relationship was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "concept_relationshipController.deleteById"
      }
    },
    "/concept_relationship": {
      "post": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "create",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "concept_relationship instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_relationship"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newconcept_relationship"
              }
            }
          }
        },
        "operationId": "concept_relationshipController.create"
      },
      "patch": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "updateAll",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Count of concept_relationship models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_relationship>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_relationshipPartial"
              }
            }
          }
        },
        "operationId": "concept_relationshipController.updateAll"
      },
      "get": {
        "x-controller-name": "concept_relationshipController",
        "x-operation-name": "find",
        "tags": [
          "concept_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Array of concept_relationship instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/concept_relationshipWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_relationship.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "concept_relationshipController.find"
      }
    },
    "/concept_synonym/count": {
      "get": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "count",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "200": {
            "description": "concept_synonym count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_synonym.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_synonym>"
                }
              }
            }
          }
        ],
        "operationId": "concept_synonymController.count"
      }
    },
    "/concept_synonym/{id}": {
      "put": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "replaceById",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "204": {
            "description": "concept_synonym was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_synonym"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_synonymController.replaceById"
      },
      "patch": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "updateById",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "204": {
            "description": "concept_synonym was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_synonymPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "concept_synonymController.updateById"
      },
      "get": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "findById",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "200": {
            "description": "concept_synonym instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_synonymWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_synonym.Filter"
                }
              }
            }
          }
        ],
        "operationId": "concept_synonymController.findById"
      },
      "delete": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "deleteById",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "204": {
            "description": "concept_synonym was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "concept_synonymController.deleteById"
      }
    },
    "/concept_synonym": {
      "post": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "create",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "200": {
            "description": "concept_synonym instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_synonym"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newconcept_synonym"
              }
            }
          }
        },
        "operationId": "concept_synonymController.create"
      },
      "patch": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "updateAll",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "200": {
            "description": "Count of concept_synonym models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "concept_synonym.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<concept_synonym>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/concept_synonymPartial"
              }
            }
          }
        },
        "operationId": "concept_synonymController.updateAll"
      },
      "get": {
        "x-controller-name": "concept_synonymController",
        "x-operation-name": "find",
        "tags": [
          "concept_synonymController"
        ],
        "responses": {
          "200": {
            "description": "Array of concept_synonym instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/concept_synonymWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/concept_synonym.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "concept_synonymController.find"
      }
    },
    "/condition_era/count": {
      "get": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "count",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "200": {
            "description": "condition_era count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "condition_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<condition_era>"
                }
              }
            }
          }
        ],
        "operationId": "condition_eraController.count"
      }
    },
    "/condition_era/{id}": {
      "put": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "replaceById",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "204": {
            "description": "condition_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_era"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "condition_eraController.replaceById"
      },
      "patch": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "updateById",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "204": {
            "description": "condition_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_eraPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "condition_eraController.updateById"
      },
      "get": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "findById",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "200": {
            "description": "condition_era instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_eraWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_era.Filter"
                }
              }
            }
          }
        ],
        "operationId": "condition_eraController.findById"
      },
      "delete": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "deleteById",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "204": {
            "description": "condition_era was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "condition_eraController.deleteById"
      }
    },
    "/condition_era": {
      "post": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "create",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "200": {
            "description": "condition_era instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_era"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcondition_era"
              }
            }
          }
        },
        "operationId": "condition_eraController.create"
      },
      "patch": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "updateAll",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "200": {
            "description": "Count of condition_era models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "condition_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<condition_era>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_eraPartial"
              }
            }
          }
        },
        "operationId": "condition_eraController.updateAll"
      },
      "get": {
        "x-controller-name": "condition_eraController",
        "x-operation-name": "find",
        "tags": [
          "condition_eraController"
        ],
        "responses": {
          "200": {
            "description": "Array of condition_era instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/condition_eraWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_era.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "condition_eraController.find"
      }
    },
    "/condition_occurrence/count": {
      "get": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "count",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "condition_occurrence count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "condition_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<condition_occurrence>"
                }
              }
            }
          }
        ],
        "operationId": "condition_occurrenceController.count"
      }
    },
    "/condition_occurrence/{id}": {
      "put": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "replaceById",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "condition_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_occurrence"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "condition_occurrenceController.replaceById"
      },
      "patch": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "updateById",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "condition_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_occurrencePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "condition_occurrenceController.updateById"
      },
      "get": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "findById",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "condition_occurrence instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_occurrenceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_occurrence.Filter"
                }
              }
            }
          }
        ],
        "operationId": "condition_occurrenceController.findById"
      },
      "delete": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "deleteById",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "condition_occurrence was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "condition_occurrenceController.deleteById"
      }
    },
    "/condition_occurrence": {
      "post": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "create",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "condition_occurrence instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_occurrence"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcondition_occurrence"
              }
            }
          }
        },
        "operationId": "condition_occurrenceController.create"
      },
      "patch": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "updateAll",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Count of condition_occurrence models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "condition_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<condition_occurrence>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/condition_occurrencePartial"
              }
            }
          }
        },
        "operationId": "condition_occurrenceController.updateAll"
      },
      "get": {
        "x-controller-name": "condition_occurrenceController",
        "x-operation-name": "find",
        "tags": [
          "condition_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Array of condition_occurrence instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/condition_occurrenceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/condition_occurrence.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "condition_occurrenceController.find"
      }
    },
    "/cost/count": {
      "get": {
        "x-controller-name": "costController",
        "x-operation-name": "count",
        "tags": [
          "costController"
        ],
        "responses": {
          "200": {
            "description": "cost count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cost.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cost>"
                }
              }
            }
          }
        ],
        "operationId": "costController.count"
      }
    },
    "/cost/{id}": {
      "put": {
        "x-controller-name": "costController",
        "x-operation-name": "replaceById",
        "tags": [
          "costController"
        ],
        "responses": {
          "204": {
            "description": "cost was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cost"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "costController.replaceById"
      },
      "patch": {
        "x-controller-name": "costController",
        "x-operation-name": "updateById",
        "tags": [
          "costController"
        ],
        "responses": {
          "204": {
            "description": "cost was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/costPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "costController.updateById"
      },
      "get": {
        "x-controller-name": "costController",
        "x-operation-name": "findById",
        "tags": [
          "costController"
        ],
        "responses": {
          "200": {
            "description": "cost instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/costWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cost.Filter"
                }
              }
            }
          }
        ],
        "operationId": "costController.findById"
      },
      "delete": {
        "x-controller-name": "costController",
        "x-operation-name": "deleteById",
        "tags": [
          "costController"
        ],
        "responses": {
          "204": {
            "description": "cost was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "costController.deleteById"
      }
    },
    "/cost": {
      "post": {
        "x-controller-name": "costController",
        "x-operation-name": "create",
        "tags": [
          "costController"
        ],
        "responses": {
          "200": {
            "description": "cost instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cost"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newcost"
              }
            }
          }
        },
        "operationId": "costController.create"
      },
      "patch": {
        "x-controller-name": "costController",
        "x-operation-name": "updateAll",
        "tags": [
          "costController"
        ],
        "responses": {
          "200": {
            "description": "Count of cost models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "cost.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<cost>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/costPartial"
              }
            }
          }
        },
        "operationId": "costController.updateAll"
      },
      "get": {
        "x-controller-name": "costController",
        "x-operation-name": "find",
        "tags": [
          "costController"
        ],
        "responses": {
          "200": {
            "description": "Array of cost instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/costWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cost.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "costController.find"
      }
    },
    "/death/count": {
      "get": {
        "x-controller-name": "deathController",
        "x-operation-name": "count",
        "tags": [
          "deathController"
        ],
        "responses": {
          "200": {
            "description": "death count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "death.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<death>"
                }
              }
            }
          }
        ],
        "operationId": "deathController.count"
      }
    },
    "/death/{id}": {
      "put": {
        "x-controller-name": "deathController",
        "x-operation-name": "replaceById",
        "tags": [
          "deathController"
        ],
        "responses": {
          "204": {
            "description": "death was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/death"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "deathController.replaceById"
      },
      "patch": {
        "x-controller-name": "deathController",
        "x-operation-name": "updateById",
        "tags": [
          "deathController"
        ],
        "responses": {
          "204": {
            "description": "death was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deathPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "deathController.updateById"
      },
      "get": {
        "x-controller-name": "deathController",
        "x-operation-name": "findById",
        "tags": [
          "deathController"
        ],
        "responses": {
          "200": {
            "description": "death instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deathWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/death.Filter"
                }
              }
            }
          }
        ],
        "operationId": "deathController.findById"
      },
      "delete": {
        "x-controller-name": "deathController",
        "x-operation-name": "deleteById",
        "tags": [
          "deathController"
        ],
        "responses": {
          "204": {
            "description": "death was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "deathController.deleteById"
      }
    },
    "/death": {
      "post": {
        "x-controller-name": "deathController",
        "x-operation-name": "create",
        "tags": [
          "deathController"
        ],
        "responses": {
          "200": {
            "description": "death instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/death"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdeath"
              }
            }
          }
        },
        "operationId": "deathController.create"
      },
      "patch": {
        "x-controller-name": "deathController",
        "x-operation-name": "updateAll",
        "tags": [
          "deathController"
        ],
        "responses": {
          "200": {
            "description": "Count of death models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "death.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<death>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deathPartial"
              }
            }
          }
        },
        "operationId": "deathController.updateAll"
      },
      "get": {
        "x-controller-name": "deathController",
        "x-operation-name": "find",
        "tags": [
          "deathController"
        ],
        "responses": {
          "200": {
            "description": "Array of death instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/deathWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/death.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "deathController.find"
      }
    },
    "/device_exposure/count": {
      "get": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "count",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "200": {
            "description": "device_exposure count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "device_exposure.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<device_exposure>"
                }
              }
            }
          }
        ],
        "operationId": "device_exposureController.count"
      }
    },
    "/device_exposure/{id}": {
      "put": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "replaceById",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "204": {
            "description": "device_exposure was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_exposure"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "device_exposureController.replaceById"
      },
      "patch": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "updateById",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "204": {
            "description": "device_exposure was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_exposurePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "device_exposureController.updateById"
      },
      "get": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "findById",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "200": {
            "description": "device_exposure instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device_exposureWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device_exposure.Filter"
                }
              }
            }
          }
        ],
        "operationId": "device_exposureController.findById"
      },
      "delete": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "deleteById",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "204": {
            "description": "device_exposure was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "device_exposureController.deleteById"
      }
    },
    "/device_exposure": {
      "post": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "create",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "200": {
            "description": "device_exposure instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device_exposure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdevice_exposure"
              }
            }
          }
        },
        "operationId": "device_exposureController.create"
      },
      "patch": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "updateAll",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "200": {
            "description": "Count of device_exposure models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "device_exposure.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<device_exposure>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_exposurePartial"
              }
            }
          }
        },
        "operationId": "device_exposureController.updateAll"
      },
      "get": {
        "x-controller-name": "device_exposureController",
        "x-operation-name": "find",
        "tags": [
          "device_exposureController"
        ],
        "responses": {
          "200": {
            "description": "Array of device_exposure instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/device_exposureWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/device_exposure.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "device_exposureController.find"
      }
    },
    "/domain/count": {
      "get": {
        "x-controller-name": "domainController",
        "x-operation-name": "count",
        "tags": [
          "domainController"
        ],
        "responses": {
          "200": {
            "description": "domain count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "domain.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<domain>"
                }
              }
            }
          }
        ],
        "operationId": "domainController.count"
      }
    },
    "/domain/{id}": {
      "put": {
        "x-controller-name": "domainController",
        "x-operation-name": "replaceById",
        "tags": [
          "domainController"
        ],
        "responses": {
          "204": {
            "description": "domain was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/domain"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "domainController.replaceById"
      },
      "patch": {
        "x-controller-name": "domainController",
        "x-operation-name": "updateById",
        "tags": [
          "domainController"
        ],
        "responses": {
          "204": {
            "description": "domain was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/domainPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "domainController.updateById"
      },
      "get": {
        "x-controller-name": "domainController",
        "x-operation-name": "findById",
        "tags": [
          "domainController"
        ],
        "responses": {
          "200": {
            "description": "domain instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domainWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain.Filter"
                }
              }
            }
          }
        ],
        "operationId": "domainController.findById"
      },
      "delete": {
        "x-controller-name": "domainController",
        "x-operation-name": "deleteById",
        "tags": [
          "domainController"
        ],
        "responses": {
          "204": {
            "description": "domain was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "domainController.deleteById"
      }
    },
    "/domain": {
      "post": {
        "x-controller-name": "domainController",
        "x-operation-name": "create",
        "tags": [
          "domainController"
        ],
        "responses": {
          "200": {
            "description": "domain instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdomain"
              }
            }
          }
        },
        "operationId": "domainController.create"
      },
      "patch": {
        "x-controller-name": "domainController",
        "x-operation-name": "updateAll",
        "tags": [
          "domainController"
        ],
        "responses": {
          "200": {
            "description": "Count of domain models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "domain.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<domain>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/domainPartial"
              }
            }
          }
        },
        "operationId": "domainController.updateAll"
      },
      "get": {
        "x-controller-name": "domainController",
        "x-operation-name": "find",
        "tags": [
          "domainController"
        ],
        "responses": {
          "200": {
            "description": "Array of domain instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/domainWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/domain.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "domainController.find"
      }
    },
    "/dose_era/count": {
      "get": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "count",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "200": {
            "description": "dose_era count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "dose_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<dose_era>"
                }
              }
            }
          }
        ],
        "operationId": "dose_eraController.count"
      }
    },
    "/dose_era/{id}": {
      "put": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "replaceById",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "204": {
            "description": "dose_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dose_era"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "dose_eraController.replaceById"
      },
      "patch": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "updateById",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "204": {
            "description": "dose_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dose_eraPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "dose_eraController.updateById"
      },
      "get": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "findById",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "200": {
            "description": "dose_era instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dose_eraWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dose_era.Filter"
                }
              }
            }
          }
        ],
        "operationId": "dose_eraController.findById"
      },
      "delete": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "deleteById",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "204": {
            "description": "dose_era was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "dose_eraController.deleteById"
      }
    },
    "/dose_era": {
      "post": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "create",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "200": {
            "description": "dose_era instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dose_era"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdose_era"
              }
            }
          }
        },
        "operationId": "dose_eraController.create"
      },
      "patch": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "updateAll",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "200": {
            "description": "Count of dose_era models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "dose_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<dose_era>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dose_eraPartial"
              }
            }
          }
        },
        "operationId": "dose_eraController.updateAll"
      },
      "get": {
        "x-controller-name": "dose_eraController",
        "x-operation-name": "find",
        "tags": [
          "dose_eraController"
        ],
        "responses": {
          "200": {
            "description": "Array of dose_era instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dose_eraWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dose_era.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "dose_eraController.find"
      }
    },
    "/drug_era/count": {
      "get": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "count",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "200": {
            "description": "drug_era count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_era>"
                }
              }
            }
          }
        ],
        "operationId": "drug_eraController.count"
      }
    },
    "/drug_era/{id}": {
      "put": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "replaceById",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "204": {
            "description": "drug_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_era"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_eraController.replaceById"
      },
      "patch": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "updateById",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "204": {
            "description": "drug_era was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_eraPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_eraController.updateById"
      },
      "get": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "findById",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "200": {
            "description": "drug_era instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_eraWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_era.Filter"
                }
              }
            }
          }
        ],
        "operationId": "drug_eraController.findById"
      },
      "delete": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "deleteById",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "204": {
            "description": "drug_era was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "drug_eraController.deleteById"
      }
    },
    "/drug_era": {
      "post": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "create",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "200": {
            "description": "drug_era instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_era"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdrug_era"
              }
            }
          }
        },
        "operationId": "drug_eraController.create"
      },
      "patch": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "updateAll",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "200": {
            "description": "Count of drug_era models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_era.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_era>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_eraPartial"
              }
            }
          }
        },
        "operationId": "drug_eraController.updateAll"
      },
      "get": {
        "x-controller-name": "drug_eraController",
        "x-operation-name": "find",
        "tags": [
          "drug_eraController"
        ],
        "responses": {
          "200": {
            "description": "Array of drug_era instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/drug_eraWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_era.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "drug_eraController.find"
      }
    },
    "/drug_exposure/count": {
      "get": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "count",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "200": {
            "description": "drug_exposure count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_exposure.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_exposure>"
                }
              }
            }
          }
        ],
        "operationId": "drug_exposureController.count"
      }
    },
    "/drug_exposure/{id}": {
      "put": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "replaceById",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "204": {
            "description": "drug_exposure was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_exposure"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_exposureController.replaceById"
      },
      "patch": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "updateById",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "204": {
            "description": "drug_exposure was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_exposurePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_exposureController.updateById"
      },
      "get": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "findById",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "200": {
            "description": "drug_exposure instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_exposureWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_exposure.Filter"
                }
              }
            }
          }
        ],
        "operationId": "drug_exposureController.findById"
      },
      "delete": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "deleteById",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "204": {
            "description": "drug_exposure was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "drug_exposureController.deleteById"
      }
    },
    "/drug_exposure": {
      "post": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "create",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "200": {
            "description": "drug_exposure instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_exposure"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdrug_exposure"
              }
            }
          }
        },
        "operationId": "drug_exposureController.create"
      },
      "patch": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "updateAll",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "200": {
            "description": "Count of drug_exposure models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_exposure.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_exposure>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_exposurePartial"
              }
            }
          }
        },
        "operationId": "drug_exposureController.updateAll"
      },
      "get": {
        "x-controller-name": "drug_exposureController",
        "x-operation-name": "find",
        "tags": [
          "drug_exposureController"
        ],
        "responses": {
          "200": {
            "description": "Array of drug_exposure instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/drug_exposureWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_exposure.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "drug_exposureController.find"
      }
    },
    "/drug_strength/count": {
      "get": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "count",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "200": {
            "description": "drug_strength count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_strength.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_strength>"
                }
              }
            }
          }
        ],
        "operationId": "drug_strengthController.count"
      }
    },
    "/drug_strength/{id}": {
      "put": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "replaceById",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "204": {
            "description": "drug_strength was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_strength"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_strengthController.replaceById"
      },
      "patch": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "updateById",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "204": {
            "description": "drug_strength was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_strengthPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "drug_strengthController.updateById"
      },
      "get": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "findById",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "200": {
            "description": "drug_strength instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_strengthWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_strength.Filter"
                }
              }
            }
          }
        ],
        "operationId": "drug_strengthController.findById"
      },
      "delete": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "deleteById",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "204": {
            "description": "drug_strength was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "drug_strengthController.deleteById"
      }
    },
    "/drug_strength": {
      "post": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "create",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "200": {
            "description": "drug_strength instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_strength"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newdrug_strength"
              }
            }
          }
        },
        "operationId": "drug_strengthController.create"
      },
      "patch": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "updateAll",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "200": {
            "description": "Count of drug_strength models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "drug_strength.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<drug_strength>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug_strengthPartial"
              }
            }
          }
        },
        "operationId": "drug_strengthController.updateAll"
      },
      "get": {
        "x-controller-name": "drug_strengthController",
        "x-operation-name": "find",
        "tags": [
          "drug_strengthController"
        ],
        "responses": {
          "200": {
            "description": "Array of drug_strength instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/drug_strengthWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drug_strength.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "drug_strengthController.find"
      }
    },
    "/episode/count": {
      "get": {
        "x-controller-name": "episodeController",
        "x-operation-name": "count",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "200": {
            "description": "episode count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "episode.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<episode>"
                }
              }
            }
          }
        ],
        "operationId": "episodeController.count"
      }
    },
    "/episode/{id}": {
      "put": {
        "x-controller-name": "episodeController",
        "x-operation-name": "replaceById",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "204": {
            "description": "episode was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episode"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "episodeController.replaceById"
      },
      "patch": {
        "x-controller-name": "episodeController",
        "x-operation-name": "updateById",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "204": {
            "description": "episode was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episodePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "episodeController.updateById"
      },
      "get": {
        "x-controller-name": "episodeController",
        "x-operation-name": "findById",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "200": {
            "description": "episode instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episodeWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode.Filter"
                }
              }
            }
          }
        ],
        "operationId": "episodeController.findById"
      },
      "delete": {
        "x-controller-name": "episodeController",
        "x-operation-name": "deleteById",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "204": {
            "description": "episode was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "episodeController.deleteById"
      }
    },
    "/episode": {
      "post": {
        "x-controller-name": "episodeController",
        "x-operation-name": "create",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "200": {
            "description": "episode instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newepisode"
              }
            }
          }
        },
        "operationId": "episodeController.create"
      },
      "patch": {
        "x-controller-name": "episodeController",
        "x-operation-name": "updateAll",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "200": {
            "description": "Count of episode models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "episode.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<episode>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episodePartial"
              }
            }
          }
        },
        "operationId": "episodeController.updateAll"
      },
      "get": {
        "x-controller-name": "episodeController",
        "x-operation-name": "find",
        "tags": [
          "episodeController"
        ],
        "responses": {
          "200": {
            "description": "Array of episode instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/episodeWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "episodeController.find"
      }
    },
    "/episode_event/count": {
      "get": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "count",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "200": {
            "description": "episode_event count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "episode_event.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<episode_event>"
                }
              }
            }
          }
        ],
        "operationId": "episode_eventController.count"
      }
    },
    "/episode_event/{id}": {
      "put": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "replaceById",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "204": {
            "description": "episode_event was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episode_event"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "episode_eventController.replaceById"
      },
      "patch": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "updateById",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "204": {
            "description": "episode_event was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episode_eventPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "episode_eventController.updateById"
      },
      "get": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "findById",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "200": {
            "description": "episode_event instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode_eventWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode_event.Filter"
                }
              }
            }
          }
        ],
        "operationId": "episode_eventController.findById"
      },
      "delete": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "deleteById",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "204": {
            "description": "episode_event was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "episode_eventController.deleteById"
      }
    },
    "/episode_event": {
      "post": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "create",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "200": {
            "description": "episode_event instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode_event"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newepisode_event"
              }
            }
          }
        },
        "operationId": "episode_eventController.create"
      },
      "patch": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "updateAll",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "200": {
            "description": "Count of episode_event models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "episode_event.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<episode_event>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/episode_eventPartial"
              }
            }
          }
        },
        "operationId": "episode_eventController.updateAll"
      },
      "get": {
        "x-controller-name": "episode_eventController",
        "x-operation-name": "find",
        "tags": [
          "episode_eventController"
        ],
        "responses": {
          "200": {
            "description": "Array of episode_event instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/episode_eventWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/episode_event.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "episode_eventController.find"
      }
    },
    "/fact_relationship/count": {
      "get": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "count",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "fact_relationship count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "fact_relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<fact_relationship>"
                }
              }
            }
          }
        ],
        "operationId": "fact_relationshipController.count"
      }
    },
    "/fact_relationship/{id}": {
      "put": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "replaceById",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "fact_relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fact_relationship"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "fact_relationshipController.replaceById"
      },
      "patch": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "updateById",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "fact_relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fact_relationshipPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "fact_relationshipController.updateById"
      },
      "get": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "findById",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "fact_relationship instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fact_relationshipWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fact_relationship.Filter"
                }
              }
            }
          }
        ],
        "operationId": "fact_relationshipController.findById"
      },
      "delete": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "deleteById",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "204": {
            "description": "fact_relationship was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "fact_relationshipController.deleteById"
      }
    },
    "/fact_relationship": {
      "post": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "create",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "fact_relationship instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fact_relationship"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newfact_relationship"
              }
            }
          }
        },
        "operationId": "fact_relationshipController.create"
      },
      "patch": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "updateAll",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Count of fact_relationship models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "fact_relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<fact_relationship>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fact_relationshipPartial"
              }
            }
          }
        },
        "operationId": "fact_relationshipController.updateAll"
      },
      "get": {
        "x-controller-name": "fact_relationshipController",
        "x-operation-name": "find",
        "tags": [
          "fact_relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Array of fact_relationship instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fact_relationshipWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fact_relationship.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "fact_relationshipController.find"
      }
    },
    "/location/count": {
      "get": {
        "x-controller-name": "locationController",
        "x-operation-name": "count",
        "tags": [
          "locationController"
        ],
        "responses": {
          "200": {
            "description": "location count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "location.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<location>"
                }
              }
            }
          }
        ],
        "operationId": "locationController.count"
      }
    },
    "/location/{id}": {
      "put": {
        "x-controller-name": "locationController",
        "x-operation-name": "replaceById",
        "tags": [
          "locationController"
        ],
        "responses": {
          "204": {
            "description": "location was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/location"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "locationController.replaceById"
      },
      "patch": {
        "x-controller-name": "locationController",
        "x-operation-name": "updateById",
        "tags": [
          "locationController"
        ],
        "responses": {
          "204": {
            "description": "location was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/locationPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "locationController.updateById"
      },
      "get": {
        "x-controller-name": "locationController",
        "x-operation-name": "findById",
        "tags": [
          "locationController"
        ],
        "responses": {
          "200": {
            "description": "location instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locationWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/location.Filter"
                }
              }
            }
          }
        ],
        "operationId": "locationController.findById"
      },
      "delete": {
        "x-controller-name": "locationController",
        "x-operation-name": "deleteById",
        "tags": [
          "locationController"
        ],
        "responses": {
          "204": {
            "description": "location was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "locationController.deleteById"
      }
    },
    "/location": {
      "post": {
        "x-controller-name": "locationController",
        "x-operation-name": "create",
        "tags": [
          "locationController"
        ],
        "responses": {
          "200": {
            "description": "location instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/location"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newlocation"
              }
            }
          }
        },
        "operationId": "locationController.create"
      },
      "patch": {
        "x-controller-name": "locationController",
        "x-operation-name": "updateAll",
        "tags": [
          "locationController"
        ],
        "responses": {
          "200": {
            "description": "Count of location models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "location.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<location>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/locationPartial"
              }
            }
          }
        },
        "operationId": "locationController.updateAll"
      },
      "get": {
        "x-controller-name": "locationController",
        "x-operation-name": "find",
        "tags": [
          "locationController"
        ],
        "responses": {
          "200": {
            "description": "Array of location instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/locationWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/location.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "locationController.find"
      }
    },
    "/measurement/count": {
      "get": {
        "x-controller-name": "measurementController",
        "x-operation-name": "count",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "200": {
            "description": "measurement count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "measurement.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<measurement>"
                }
              }
            }
          }
        ],
        "operationId": "measurementController.count"
      }
    },
    "/measurement/{id}": {
      "put": {
        "x-controller-name": "measurementController",
        "x-operation-name": "replaceById",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "204": {
            "description": "measurement was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/measurement"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "measurementController.replaceById"
      },
      "patch": {
        "x-controller-name": "measurementController",
        "x-operation-name": "updateById",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "204": {
            "description": "measurement was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/measurementPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "measurementController.updateById"
      },
      "get": {
        "x-controller-name": "measurementController",
        "x-operation-name": "findById",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "200": {
            "description": "measurement instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/measurementWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/measurement.Filter"
                }
              }
            }
          }
        ],
        "operationId": "measurementController.findById"
      },
      "delete": {
        "x-controller-name": "measurementController",
        "x-operation-name": "deleteById",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "204": {
            "description": "measurement was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "measurementController.deleteById"
      }
    },
    "/measurement": {
      "post": {
        "x-controller-name": "measurementController",
        "x-operation-name": "create",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "200": {
            "description": "measurement instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/measurement"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newmeasurement"
              }
            }
          }
        },
        "operationId": "measurementController.create"
      },
      "patch": {
        "x-controller-name": "measurementController",
        "x-operation-name": "updateAll",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "200": {
            "description": "Count of measurement models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "measurement.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<measurement>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/measurementPartial"
              }
            }
          }
        },
        "operationId": "measurementController.updateAll"
      },
      "get": {
        "x-controller-name": "measurementController",
        "x-operation-name": "find",
        "tags": [
          "measurementController"
        ],
        "responses": {
          "200": {
            "description": "Array of measurement instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/measurementWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/measurement.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "measurementController.find"
      }
    },
    "/metadata/count": {
      "get": {
        "x-controller-name": "metadataController",
        "x-operation-name": "count",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "200": {
            "description": "metadata count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "metadata.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<metadata>"
                }
              }
            }
          }
        ],
        "operationId": "metadataController.count"
      }
    },
    "/metadata/{id}": {
      "put": {
        "x-controller-name": "metadataController",
        "x-operation-name": "replaceById",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "204": {
            "description": "metadata was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metadata"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "metadataController.replaceById"
      },
      "patch": {
        "x-controller-name": "metadataController",
        "x-operation-name": "updateById",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "204": {
            "description": "metadata was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metadataPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "metadataController.updateById"
      },
      "get": {
        "x-controller-name": "metadataController",
        "x-operation-name": "findById",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "200": {
            "description": "metadata instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadataWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadata.Filter"
                }
              }
            }
          }
        ],
        "operationId": "metadataController.findById"
      },
      "delete": {
        "x-controller-name": "metadataController",
        "x-operation-name": "deleteById",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "204": {
            "description": "metadata was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "metadataController.deleteById"
      }
    },
    "/metadata": {
      "post": {
        "x-controller-name": "metadataController",
        "x-operation-name": "create",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "200": {
            "description": "metadata instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadata"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newmetadata"
              }
            }
          }
        },
        "operationId": "metadataController.create"
      },
      "patch": {
        "x-controller-name": "metadataController",
        "x-operation-name": "updateAll",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "200": {
            "description": "Count of metadata models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "metadata.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<metadata>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metadataPartial"
              }
            }
          }
        },
        "operationId": "metadataController.updateAll"
      },
      "get": {
        "x-controller-name": "metadataController",
        "x-operation-name": "find",
        "tags": [
          "metadataController"
        ],
        "responses": {
          "200": {
            "description": "Array of metadata instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/metadataWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadata.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "metadataController.find"
      }
    },
    "/note/count": {
      "get": {
        "x-controller-name": "noteController",
        "x-operation-name": "count",
        "tags": [
          "noteController"
        ],
        "responses": {
          "200": {
            "description": "note count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "note.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<note>"
                }
              }
            }
          }
        ],
        "operationId": "noteController.count"
      }
    },
    "/note/{id}": {
      "put": {
        "x-controller-name": "noteController",
        "x-operation-name": "replaceById",
        "tags": [
          "noteController"
        ],
        "responses": {
          "204": {
            "description": "note was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "noteController.replaceById"
      },
      "patch": {
        "x-controller-name": "noteController",
        "x-operation-name": "updateById",
        "tags": [
          "noteController"
        ],
        "responses": {
          "204": {
            "description": "note was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "noteController.updateById"
      },
      "get": {
        "x-controller-name": "noteController",
        "x-operation-name": "findById",
        "tags": [
          "noteController"
        ],
        "responses": {
          "200": {
            "description": "note instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noteWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note.Filter"
                }
              }
            }
          }
        ],
        "operationId": "noteController.findById"
      },
      "delete": {
        "x-controller-name": "noteController",
        "x-operation-name": "deleteById",
        "tags": [
          "noteController"
        ],
        "responses": {
          "204": {
            "description": "note was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "noteController.deleteById"
      }
    },
    "/note": {
      "post": {
        "x-controller-name": "noteController",
        "x-operation-name": "create",
        "tags": [
          "noteController"
        ],
        "responses": {
          "200": {
            "description": "note instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newnote"
              }
            }
          }
        },
        "operationId": "noteController.create"
      },
      "patch": {
        "x-controller-name": "noteController",
        "x-operation-name": "updateAll",
        "tags": [
          "noteController"
        ],
        "responses": {
          "200": {
            "description": "Count of note models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "note.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<note>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notePartial"
              }
            }
          }
        },
        "operationId": "noteController.updateAll"
      },
      "get": {
        "x-controller-name": "noteController",
        "x-operation-name": "find",
        "tags": [
          "noteController"
        ],
        "responses": {
          "200": {
            "description": "Array of note instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/noteWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "noteController.find"
      }
    },
    "/note_nlp/count": {
      "get": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "count",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "200": {
            "description": "note_nlp count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "note_nlp.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<note_nlp>"
                }
              }
            }
          }
        ],
        "operationId": "note_nlpController.count"
      }
    },
    "/note_nlp/{id}": {
      "put": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "replaceById",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "204": {
            "description": "note_nlp was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note_nlp"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "note_nlpController.replaceById"
      },
      "patch": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "updateById",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "204": {
            "description": "note_nlp was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note_nlpPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "note_nlpController.updateById"
      },
      "get": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "findById",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "200": {
            "description": "note_nlp instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note_nlpWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note_nlp.Filter"
                }
              }
            }
          }
        ],
        "operationId": "note_nlpController.findById"
      },
      "delete": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "deleteById",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "204": {
            "description": "note_nlp was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "note_nlpController.deleteById"
      }
    },
    "/note_nlp": {
      "post": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "create",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "200": {
            "description": "note_nlp instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note_nlp"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newnote_nlp"
              }
            }
          }
        },
        "operationId": "note_nlpController.create"
      },
      "patch": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "updateAll",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "200": {
            "description": "Count of note_nlp models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "note_nlp.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<note_nlp>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note_nlpPartial"
              }
            }
          }
        },
        "operationId": "note_nlpController.updateAll"
      },
      "get": {
        "x-controller-name": "note_nlpController",
        "x-operation-name": "find",
        "tags": [
          "note_nlpController"
        ],
        "responses": {
          "200": {
            "description": "Array of note_nlp instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/note_nlpWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note_nlp.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "note_nlpController.find"
      }
    },
    "/observation/count": {
      "get": {
        "x-controller-name": "observationController",
        "x-operation-name": "count",
        "tags": [
          "observationController"
        ],
        "responses": {
          "200": {
            "description": "observation count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "observation.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<observation>"
                }
              }
            }
          }
        ],
        "operationId": "observationController.count"
      }
    },
    "/observation/{id}": {
      "put": {
        "x-controller-name": "observationController",
        "x-operation-name": "replaceById",
        "tags": [
          "observationController"
        ],
        "responses": {
          "204": {
            "description": "observation was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observation"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "observationController.replaceById"
      },
      "patch": {
        "x-controller-name": "observationController",
        "x-operation-name": "updateById",
        "tags": [
          "observationController"
        ],
        "responses": {
          "204": {
            "description": "observation was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observationPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "observationController.updateById"
      },
      "get": {
        "x-controller-name": "observationController",
        "x-operation-name": "findById",
        "tags": [
          "observationController"
        ],
        "responses": {
          "200": {
            "description": "observation instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observationWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation.Filter"
                }
              }
            }
          }
        ],
        "operationId": "observationController.findById"
      },
      "delete": {
        "x-controller-name": "observationController",
        "x-operation-name": "deleteById",
        "tags": [
          "observationController"
        ],
        "responses": {
          "204": {
            "description": "observation was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "observationController.deleteById"
      }
    },
    "/observation": {
      "post": {
        "x-controller-name": "observationController",
        "x-operation-name": "create",
        "tags": [
          "observationController"
        ],
        "responses": {
          "200": {
            "description": "observation instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newobservation"
              }
            }
          }
        },
        "operationId": "observationController.create"
      },
      "patch": {
        "x-controller-name": "observationController",
        "x-operation-name": "updateAll",
        "tags": [
          "observationController"
        ],
        "responses": {
          "200": {
            "description": "Count of observation models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "observation.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<observation>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observationPartial"
              }
            }
          }
        },
        "operationId": "observationController.updateAll"
      },
      "get": {
        "x-controller-name": "observationController",
        "x-operation-name": "find",
        "tags": [
          "observationController"
        ],
        "responses": {
          "200": {
            "description": "Array of observation instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/observationWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "observationController.find"
      }
    },
    "/observation_period/count": {
      "get": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "count",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "200": {
            "description": "observation_period count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "observation_period.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<observation_period>"
                }
              }
            }
          }
        ],
        "operationId": "observation_periodController.count"
      }
    },
    "/observation_period/{id}": {
      "put": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "replaceById",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "204": {
            "description": "observation_period was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observation_period"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "observation_periodController.replaceById"
      },
      "patch": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "updateById",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "204": {
            "description": "observation_period was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observation_periodPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "observation_periodController.updateById"
      },
      "get": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "findById",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "200": {
            "description": "observation_period instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation_periodWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation_period.Filter"
                }
              }
            }
          }
        ],
        "operationId": "observation_periodController.findById"
      },
      "delete": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "deleteById",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "204": {
            "description": "observation_period was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "observation_periodController.deleteById"
      }
    },
    "/observation_period": {
      "post": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "create",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "200": {
            "description": "observation_period instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation_period"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newobservation_period"
              }
            }
          }
        },
        "operationId": "observation_periodController.create"
      },
      "patch": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "updateAll",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "200": {
            "description": "Count of observation_period models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "observation_period.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<observation_period>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/observation_periodPartial"
              }
            }
          }
        },
        "operationId": "observation_periodController.updateAll"
      },
      "get": {
        "x-controller-name": "observation_periodController",
        "x-operation-name": "find",
        "tags": [
          "observation_periodController"
        ],
        "responses": {
          "200": {
            "description": "Array of observation_period instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/observation_periodWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/observation_period.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "observation_periodController.find"
      }
    },
    "/payer_plan_period/count": {
      "get": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "count",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "200": {
            "description": "payer_plan_period count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "payer_plan_period.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<payer_plan_period>"
                }
              }
            }
          }
        ],
        "operationId": "payer_plan_periodController.count"
      }
    },
    "/payer_plan_period/{id}": {
      "put": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "replaceById",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "204": {
            "description": "payer_plan_period was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payer_plan_period"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "payer_plan_periodController.replaceById"
      },
      "patch": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "updateById",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "204": {
            "description": "payer_plan_period was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payer_plan_periodPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "payer_plan_periodController.updateById"
      },
      "get": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "findById",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "200": {
            "description": "payer_plan_period instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payer_plan_periodWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payer_plan_period.Filter"
                }
              }
            }
          }
        ],
        "operationId": "payer_plan_periodController.findById"
      },
      "delete": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "deleteById",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "204": {
            "description": "payer_plan_period was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "payer_plan_periodController.deleteById"
      }
    },
    "/payer_plan_period": {
      "post": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "create",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "200": {
            "description": "payer_plan_period instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payer_plan_period"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newpayer_plan_period"
              }
            }
          }
        },
        "operationId": "payer_plan_periodController.create"
      },
      "patch": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "updateAll",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "200": {
            "description": "Count of payer_plan_period models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "payer_plan_period.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<payer_plan_period>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payer_plan_periodPartial"
              }
            }
          }
        },
        "operationId": "payer_plan_periodController.updateAll"
      },
      "get": {
        "x-controller-name": "payer_plan_periodController",
        "x-operation-name": "find",
        "tags": [
          "payer_plan_periodController"
        ],
        "responses": {
          "200": {
            "description": "Array of payer_plan_period instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payer_plan_periodWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payer_plan_period.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "payer_plan_periodController.find"
      }
    },
    "/person/count": {
      "get": {
        "x-controller-name": "personController",
        "x-operation-name": "count",
        "tags": [
          "personController"
        ],
        "responses": {
          "200": {
            "description": "person count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "person.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<person>"
                }
              }
            }
          }
        ],
        "operationId": "personController.count"
      }
    },
    "/person/{id}": {
      "put": {
        "x-controller-name": "personController",
        "x-operation-name": "replaceById",
        "tags": [
          "personController"
        ],
        "responses": {
          "204": {
            "description": "person was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/person"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "personController.replaceById"
      },
      "patch": {
        "x-controller-name": "personController",
        "x-operation-name": "updateById",
        "tags": [
          "personController"
        ],
        "responses": {
          "204": {
            "description": "person was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/personPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "personController.updateById"
      },
      "get": {
        "x-controller-name": "personController",
        "x-operation-name": "findById",
        "tags": [
          "personController"
        ],
        "responses": {
          "200": {
            "description": "person instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/personWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person.Filter"
                }
              }
            }
          }
        ],
        "operationId": "personController.findById"
      },
      "delete": {
        "x-controller-name": "personController",
        "x-operation-name": "deleteById",
        "tags": [
          "personController"
        ],
        "responses": {
          "204": {
            "description": "person was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "personController.deleteById"
      }
    },
    "/person": {
      "post": {
        "x-controller-name": "personController",
        "x-operation-name": "create",
        "tags": [
          "personController"
        ],
        "responses": {
          "200": {
            "description": "person instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newperson"
              }
            }
          }
        },
        "operationId": "personController.create"
      },
      "patch": {
        "x-controller-name": "personController",
        "x-operation-name": "updateAll",
        "tags": [
          "personController"
        ],
        "responses": {
          "200": {
            "description": "Count of person models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "person.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<person>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/personPartial"
              }
            }
          }
        },
        "operationId": "personController.updateAll"
      },
      "get": {
        "x-controller-name": "personController",
        "x-operation-name": "find",
        "tags": [
          "personController"
        ],
        "responses": {
          "200": {
            "description": "Array of person instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/personWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "personController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/procedure_occurrence/count": {
      "get": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "count",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "procedure_occurrence count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "procedure_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<procedure_occurrence>"
                }
              }
            }
          }
        ],
        "operationId": "procedure_occurrenceController.count"
      }
    },
    "/procedure_occurrence/{id}": {
      "put": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "replaceById",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "procedure_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/procedure_occurrence"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "procedure_occurrenceController.replaceById"
      },
      "patch": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "updateById",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "procedure_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/procedure_occurrencePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "procedure_occurrenceController.updateById"
      },
      "get": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "findById",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "procedure_occurrence instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/procedure_occurrenceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/procedure_occurrence.Filter"
                }
              }
            }
          }
        ],
        "operationId": "procedure_occurrenceController.findById"
      },
      "delete": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "deleteById",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "procedure_occurrence was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "procedure_occurrenceController.deleteById"
      }
    },
    "/procedure_occurrence": {
      "post": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "create",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "procedure_occurrence instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/procedure_occurrence"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newprocedure_occurrence"
              }
            }
          }
        },
        "operationId": "procedure_occurrenceController.create"
      },
      "patch": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "updateAll",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Count of procedure_occurrence models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "procedure_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<procedure_occurrence>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/procedure_occurrencePartial"
              }
            }
          }
        },
        "operationId": "procedure_occurrenceController.updateAll"
      },
      "get": {
        "x-controller-name": "procedure_occurrenceController",
        "x-operation-name": "find",
        "tags": [
          "procedure_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Array of procedure_occurrence instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/procedure_occurrenceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/procedure_occurrence.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "procedure_occurrenceController.find"
      }
    },
    "/provider/count": {
      "get": {
        "x-controller-name": "providerController",
        "x-operation-name": "count",
        "tags": [
          "providerController"
        ],
        "responses": {
          "200": {
            "description": "provider count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "provider.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<provider>"
                }
              }
            }
          }
        ],
        "operationId": "providerController.count"
      }
    },
    "/provider/{id}": {
      "put": {
        "x-controller-name": "providerController",
        "x-operation-name": "replaceById",
        "tags": [
          "providerController"
        ],
        "responses": {
          "204": {
            "description": "provider was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/provider"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "providerController.replaceById"
      },
      "patch": {
        "x-controller-name": "providerController",
        "x-operation-name": "updateById",
        "tags": [
          "providerController"
        ],
        "responses": {
          "204": {
            "description": "provider was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/providerPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "providerController.updateById"
      },
      "get": {
        "x-controller-name": "providerController",
        "x-operation-name": "findById",
        "tags": [
          "providerController"
        ],
        "responses": {
          "200": {
            "description": "provider instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/providerWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/provider.Filter"
                }
              }
            }
          }
        ],
        "operationId": "providerController.findById"
      },
      "delete": {
        "x-controller-name": "providerController",
        "x-operation-name": "deleteById",
        "tags": [
          "providerController"
        ],
        "responses": {
          "204": {
            "description": "provider was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "providerController.deleteById"
      }
    },
    "/provider": {
      "post": {
        "x-controller-name": "providerController",
        "x-operation-name": "create",
        "tags": [
          "providerController"
        ],
        "responses": {
          "200": {
            "description": "provider instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/provider"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newprovider"
              }
            }
          }
        },
        "operationId": "providerController.create"
      },
      "patch": {
        "x-controller-name": "providerController",
        "x-operation-name": "updateAll",
        "tags": [
          "providerController"
        ],
        "responses": {
          "200": {
            "description": "Count of provider models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "provider.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<provider>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/providerPartial"
              }
            }
          }
        },
        "operationId": "providerController.updateAll"
      },
      "get": {
        "x-controller-name": "providerController",
        "x-operation-name": "find",
        "tags": [
          "providerController"
        ],
        "responses": {
          "200": {
            "description": "Array of provider instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/providerWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/provider.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "providerController.find"
      }
    },
    "/relationship/count": {
      "get": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "count",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "200": {
            "description": "relationship count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<relationship>"
                }
              }
            }
          }
        ],
        "operationId": "relationshipController.count"
      }
    },
    "/relationship/{id}": {
      "put": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "replaceById",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "204": {
            "description": "relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationship"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "relationshipController.replaceById"
      },
      "patch": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "updateById",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "204": {
            "description": "relationship was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "relationshipController.updateById"
      },
      "get": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "findById",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "200": {
            "description": "relationship instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/relationshipWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/relationship.Filter"
                }
              }
            }
          }
        ],
        "operationId": "relationshipController.findById"
      },
      "delete": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "deleteById",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "204": {
            "description": "relationship was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "relationshipController.deleteById"
      }
    },
    "/relationship": {
      "post": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "create",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "200": {
            "description": "relationship instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/relationship"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newrelationship"
              }
            }
          }
        },
        "operationId": "relationshipController.create"
      },
      "patch": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "updateAll",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Count of relationship models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "relationship.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<relationship>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipPartial"
              }
            }
          }
        },
        "operationId": "relationshipController.updateAll"
      },
      "get": {
        "x-controller-name": "relationshipController",
        "x-operation-name": "find",
        "tags": [
          "relationshipController"
        ],
        "responses": {
          "200": {
            "description": "Array of relationship instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/relationshipWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/relationship.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "relationshipController.find"
      }
    },
    "/scan-requests/count": {
      "get": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "count",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ScanRequest.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ScanRequest>"
                }
              }
            }
          }
        ],
        "operationId": "ScanRequestController.count"
      }
    },
    "/scan-requests/{id}/scan-request-logs": {
      "post": {
        "x-controller-name": "ScanRequestLogController",
        "x-operation-name": "create",
        "tags": [
          "ScanRequestLogController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanRequestLog"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewScanRequestLogInScanRequest"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ScanRequestLogController.create"
      },
      "patch": {
        "x-controller-name": "ScanRequestLogController",
        "x-operation-name": "patch",
        "tags": [
          "ScanRequestLogController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest.ScanRequestLog PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ScanRequestLog.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ScanRequestLog>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanRequestLogPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ScanRequestLogController.patch"
      },
      "get": {
        "x-controller-name": "ScanRequestLogController",
        "x-operation-name": "find",
        "tags": [
          "ScanRequestLogController"
        ],
        "responses": {
          "200": {
            "description": "Array of ScanRequest has many ScanRequestLog",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanRequestLog"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "ScanRequestLogController.find"
      },
      "delete": {
        "x-controller-name": "ScanRequestLogController",
        "x-operation-name": "delete",
        "tags": [
          "ScanRequestLogController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest.ScanRequestLog DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ScanRequestLog.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ScanRequestLog>"
                }
              }
            }
          }
        ],
        "operationId": "ScanRequestLogController.delete"
      }
    },
    "/scan-requests/{id}": {
      "put": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "replaceById",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ScanRequest PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanRequest"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ScanRequestController.replaceById"
      },
      "patch": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "updateById",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ScanRequest PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanRequestPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ScanRequestController.updateById"
      },
      "get": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "findById",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanRequestWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanRequest.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ScanRequestController.findById"
      },
      "delete": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "deleteById",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ScanRequest DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "ScanRequestController.deleteById"
      }
    },
    "/scan-requests": {
      "post": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "create",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanRequest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewScanRequest"
              }
            }
          }
        },
        "operationId": "ScanRequestController.create"
      },
      "patch": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "updateAll",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "200": {
            "description": "ScanRequest PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ScanRequest.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ScanRequest>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanRequestPartial"
              }
            }
          }
        },
        "operationId": "ScanRequestController.updateAll"
      },
      "get": {
        "x-controller-name": "ScanRequestController",
        "x-operation-name": "find",
        "tags": [
          "ScanRequestController"
        ],
        "responses": {
          "200": {
            "description": "Array of ScanRequest model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanRequestWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanRequest.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ScanRequestController.find"
      }
    },
    "/source_to_concept_map/count": {
      "get": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "count",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "200": {
            "description": "source_to_concept_map count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "source_to_concept_map.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<source_to_concept_map>"
                }
              }
            }
          }
        ],
        "operationId": "source_to_concept_mapController.count"
      }
    },
    "/source_to_concept_map/{id}": {
      "put": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "replaceById",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "204": {
            "description": "source_to_concept_map was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source_to_concept_map"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "source_to_concept_mapController.replaceById"
      },
      "patch": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "updateById",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "204": {
            "description": "source_to_concept_map was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source_to_concept_mapPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "source_to_concept_mapController.updateById"
      },
      "get": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "findById",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "200": {
            "description": "source_to_concept_map instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source_to_concept_mapWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source_to_concept_map.Filter"
                }
              }
            }
          }
        ],
        "operationId": "source_to_concept_mapController.findById"
      },
      "delete": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "deleteById",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "204": {
            "description": "source_to_concept_map was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "source_to_concept_mapController.deleteById"
      }
    },
    "/source_to_concept_map": {
      "post": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "create",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "200": {
            "description": "source_to_concept_map instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source_to_concept_map"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newsource_to_concept_map"
              }
            }
          }
        },
        "operationId": "source_to_concept_mapController.create"
      },
      "patch": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "updateAll",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "200": {
            "description": "Count of source_to_concept_map models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "source_to_concept_map.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<source_to_concept_map>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/source_to_concept_mapPartial"
              }
            }
          }
        },
        "operationId": "source_to_concept_mapController.updateAll"
      },
      "get": {
        "x-controller-name": "source_to_concept_mapController",
        "x-operation-name": "find",
        "tags": [
          "source_to_concept_mapController"
        ],
        "responses": {
          "200": {
            "description": "Array of source_to_concept_map instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/source_to_concept_mapWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/source_to_concept_map.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "source_to_concept_mapController.find"
      }
    },
    "/specimen/count": {
      "get": {
        "x-controller-name": "specimenController",
        "x-operation-name": "count",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "200": {
            "description": "specimen count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "specimen.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<specimen>"
                }
              }
            }
          }
        ],
        "operationId": "specimenController.count"
      }
    },
    "/specimen/{id}": {
      "put": {
        "x-controller-name": "specimenController",
        "x-operation-name": "replaceById",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "204": {
            "description": "specimen was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/specimen"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "specimenController.replaceById"
      },
      "patch": {
        "x-controller-name": "specimenController",
        "x-operation-name": "updateById",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "204": {
            "description": "specimen was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/specimenPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "specimenController.updateById"
      },
      "get": {
        "x-controller-name": "specimenController",
        "x-operation-name": "findById",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "200": {
            "description": "specimen instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/specimenWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/specimen.Filter"
                }
              }
            }
          }
        ],
        "operationId": "specimenController.findById"
      },
      "delete": {
        "x-controller-name": "specimenController",
        "x-operation-name": "deleteById",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "204": {
            "description": "specimen was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "specimenController.deleteById"
      }
    },
    "/specimen": {
      "post": {
        "x-controller-name": "specimenController",
        "x-operation-name": "create",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "200": {
            "description": "specimen instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/specimen"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newspecimen"
              }
            }
          }
        },
        "operationId": "specimenController.create"
      },
      "patch": {
        "x-controller-name": "specimenController",
        "x-operation-name": "updateAll",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "200": {
            "description": "Count of specimen models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "specimen.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<specimen>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/specimenPartial"
              }
            }
          }
        },
        "operationId": "specimenController.updateAll"
      },
      "get": {
        "x-controller-name": "specimenController",
        "x-operation-name": "find",
        "tags": [
          "specimenController"
        ],
        "responses": {
          "200": {
            "description": "Array of specimen instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/specimenWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/specimen.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "specimenController.find"
      }
    },
    "/trips/count": {
      "get": {
        "x-controller-name": "tripsController",
        "x-operation-name": "count",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "200": {
            "description": "trips count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "trips.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<trips>"
                }
              }
            }
          }
        ],
        "operationId": "tripsController.count"
      }
    },
    "/trips/{id}": {
      "put": {
        "x-controller-name": "tripsController",
        "x-operation-name": "replaceById",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "204": {
            "description": "trips was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trips"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "tripsController.replaceById"
      },
      "patch": {
        "x-controller-name": "tripsController",
        "x-operation-name": "updateById",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "204": {
            "description": "trips was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tripsPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "tripsController.updateById"
      },
      "get": {
        "x-controller-name": "tripsController",
        "x-operation-name": "findById",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "200": {
            "description": "trips instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tripsWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trips.Filter"
                }
              }
            }
          }
        ],
        "operationId": "tripsController.findById"
      },
      "delete": {
        "x-controller-name": "tripsController",
        "x-operation-name": "deleteById",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "204": {
            "description": "trips was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "tripsController.deleteById"
      }
    },
    "/trips": {
      "post": {
        "x-controller-name": "tripsController",
        "x-operation-name": "create",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "200": {
            "description": "trips instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trips"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newtrips"
              }
            }
          }
        },
        "operationId": "tripsController.create"
      },
      "patch": {
        "x-controller-name": "tripsController",
        "x-operation-name": "updateAll",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "200": {
            "description": "Count of trips models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "trips.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<trips>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tripsPartial"
              }
            }
          }
        },
        "operationId": "tripsController.updateAll"
      },
      "get": {
        "x-controller-name": "tripsController",
        "x-operation-name": "find",
        "tags": [
          "tripsController"
        ],
        "responses": {
          "200": {
            "description": "Array of trips instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tripsWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trips.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "tripsController.find"
      }
    },
    "/visit_detail/count": {
      "get": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "count",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "200": {
            "description": "visit_detail count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "visit_detail.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<visit_detail>"
                }
              }
            }
          }
        ],
        "operationId": "visit_detailController.count"
      }
    },
    "/visit_detail/{id}": {
      "put": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "replaceById",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "204": {
            "description": "visit_detail was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_detail"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "visit_detailController.replaceById"
      },
      "patch": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "updateById",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "204": {
            "description": "visit_detail was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_detailPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "visit_detailController.updateById"
      },
      "get": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "findById",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "200": {
            "description": "visit_detail instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_detailWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_detail.Filter"
                }
              }
            }
          }
        ],
        "operationId": "visit_detailController.findById"
      },
      "delete": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "deleteById",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "204": {
            "description": "visit_detail was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "visit_detailController.deleteById"
      }
    },
    "/visit_detail": {
      "post": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "create",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "200": {
            "description": "visit_detail instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_detail"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newvisit_detail"
              }
            }
          }
        },
        "operationId": "visit_detailController.create"
      },
      "patch": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "updateAll",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "200": {
            "description": "Count of visit_detail models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "visit_detail.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<visit_detail>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_detailPartial"
              }
            }
          }
        },
        "operationId": "visit_detailController.updateAll"
      },
      "get": {
        "x-controller-name": "visit_detailController",
        "x-operation-name": "find",
        "tags": [
          "visit_detailController"
        ],
        "responses": {
          "200": {
            "description": "Array of visit_detail instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/visit_detailWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_detail.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "visit_detailController.find"
      }
    },
    "/visit_occurrence/count": {
      "get": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "count",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "visit_occurrence count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "visit_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<visit_occurrence>"
                }
              }
            }
          }
        ],
        "operationId": "visit_occurrenceController.count"
      }
    },
    "/visit_occurrence/{id}": {
      "put": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "replaceById",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "visit_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_occurrence"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "visit_occurrenceController.replaceById"
      },
      "patch": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "updateById",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "visit_occurrence was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_occurrencePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "visit_occurrenceController.updateById"
      },
      "get": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "findById",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "visit_occurrence instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_occurrenceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_occurrence.Filter"
                }
              }
            }
          }
        ],
        "operationId": "visit_occurrenceController.findById"
      },
      "delete": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "deleteById",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "204": {
            "description": "visit_occurrence was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "visit_occurrenceController.deleteById"
      }
    },
    "/visit_occurrence": {
      "post": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "create",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "visit_occurrence instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_occurrence"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newvisit_occurrence"
              }
            }
          }
        },
        "operationId": "visit_occurrenceController.create"
      },
      "patch": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "updateAll",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Count of visit_occurrence models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "visit_occurrence.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<visit_occurrence>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/visit_occurrencePartial"
              }
            }
          }
        },
        "operationId": "visit_occurrenceController.updateAll"
      },
      "get": {
        "x-controller-name": "visit_occurrenceController",
        "x-operation-name": "find",
        "tags": [
          "visit_occurrenceController"
        ],
        "responses": {
          "200": {
            "description": "Array of visit_occurrence instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/visit_occurrenceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visit_occurrence.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "visit_occurrenceController.find"
      }
    },
    "/vocabulary/count": {
      "get": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "count",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "200": {
            "description": "vocabulary count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "vocabulary.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<vocabulary>"
                }
              }
            }
          }
        ],
        "operationId": "vocabularyController.count"
      }
    },
    "/vocabulary/{id}": {
      "put": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "replaceById",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "204": {
            "description": "vocabulary was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vocabulary"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "vocabularyController.replaceById"
      },
      "patch": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "updateById",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "204": {
            "description": "vocabulary was updated"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vocabularyPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "vocabularyController.updateById"
      },
      "get": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "findById",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "200": {
            "description": "vocabulary instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vocabularyWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vocabulary.Filter"
                }
              }
            }
          }
        ],
        "operationId": "vocabularyController.findById"
      },
      "delete": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "deleteById",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "204": {
            "description": "vocabulary was deleted"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "object"
            },
            "required": true
          }
        ],
        "operationId": "vocabularyController.deleteById"
      }
    },
    "/vocabulary": {
      "post": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "create",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "200": {
            "description": "vocabulary instance created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vocabulary"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newvocabulary"
              }
            }
          }
        },
        "operationId": "vocabularyController.create"
      },
      "patch": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "updateAll",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "200": {
            "description": "Count of vocabulary models updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "vocabulary.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<vocabulary>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vocabularyPartial"
              }
            }
          }
        },
        "operationId": "vocabularyController.updateAll"
      },
      "get": {
        "x-controller-name": "vocabularyController",
        "x-operation-name": "find",
        "tags": [
          "vocabularyController"
        ],
        "responses": {
          "200": {
            "description": "Array of vocabulary instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vocabularyWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vocabulary.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "vocabularyController.find"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/data-connection"
    }
  ],
  "components": {
    "schemas": {
      "ScanRequestLog": {
        "title": "ScanRequestLog",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "scanRequestId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "in progress"
            ]
          },
          "modelDefinition": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  }
                }
              },
              "settings": {
                "type": "object",
                "properties": {
                  "databricks": {
                    "type": "object",
                    "properties": {
                      "catalog": {
                        "type": "string"
                      },
                      "database": {
                        "type": "string"
                      },
                      "tableName": {
                        "type": "string"
                      },
                      "isTemporary": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "modelProfile": {
            "type": "object",
            "title": "ModelProfile",
            "properties": {
              "rowCount": {
                "type": "number"
              },
              "PropertyProfiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "PropertyProfile",
                  "properties": {
                    "frequencyDistribution": {
                      "type": "object",
                      "title": "FrequencyDistribution",
                      "properties": {
                        "bucketName": {
                          "type": "string"
                        },
                        "bucketCount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "bucketName",
                        "bucketCount"
                      ],
                      "additionalProperties": false
                    },
                    "distinctValues": {
                      "type": "number"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  },
                  "required": [
                    "frequencyDistribution",
                    "distinctValues"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "rowCount"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "scanRequestId",
          "status"
        ],
        "additionalProperties": false
      },
      "NewScanRequestLogInScanRequest": {
        "title": "NewScanRequestLogInScanRequest",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<ScanRequestLog, 'id'>, 'scanRequestId'>, schemaOptions: { title: 'NewScanRequestLogInScanRequest', exclude: [ 'id' ], optional: [ 'scanRequestId' ] })",
        "properties": {
          "scanRequestId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "in progress"
            ]
          },
          "modelDefinition": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  }
                }
              },
              "settings": {
                "type": "object",
                "properties": {
                  "databricks": {
                    "type": "object",
                    "properties": {
                      "catalog": {
                        "type": "string"
                      },
                      "database": {
                        "type": "string"
                      },
                      "tableName": {
                        "type": "string"
                      },
                      "isTemporary": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "modelProfile": {
            "type": "object",
            "title": "ModelProfile",
            "properties": {
              "rowCount": {
                "type": "number"
              },
              "PropertyProfiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "PropertyProfile",
                  "properties": {
                    "frequencyDistribution": {
                      "type": "object",
                      "title": "FrequencyDistribution",
                      "properties": {
                        "bucketName": {
                          "type": "string"
                        },
                        "bucketCount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "bucketName",
                        "bucketCount"
                      ],
                      "additionalProperties": false
                    },
                    "distinctValues": {
                      "type": "number"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  },
                  "required": [
                    "frequencyDistribution",
                    "distinctValues"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "rowCount"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<ScanRequestLog, 'id'>, 'scanRequestId'>"
      },
      "ScanRequestLogPartial": {
        "title": "ScanRequestLogPartial",
        "type": "object",
        "description": "(tsType: Partial<ScanRequestLog>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "scanRequestId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "in progress"
            ]
          },
          "modelDefinition": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  }
                }
              },
              "settings": {
                "type": "object",
                "properties": {
                  "databricks": {
                    "type": "object",
                    "properties": {
                      "catalog": {
                        "type": "string"
                      },
                      "database": {
                        "type": "string"
                      },
                      "tableName": {
                        "type": "string"
                      },
                      "isTemporary": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "modelProfile": {
            "type": "object",
            "title": "ModelProfile",
            "properties": {
              "rowCount": {
                "type": "number"
              },
              "PropertyProfiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "PropertyProfile",
                  "properties": {
                    "frequencyDistribution": {
                      "type": "object",
                      "title": "FrequencyDistribution",
                      "properties": {
                        "bucketName": {
                          "type": "string"
                        },
                        "bucketCount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "bucketName",
                        "bucketCount"
                      ],
                      "additionalProperties": false
                    },
                    "distinctValues": {
                      "type": "number"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  },
                  "required": [
                    "frequencyDistribution",
                    "distinctValues"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "rowCount"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<ScanRequestLog>"
      },
      "ScanRequest": {
        "title": "ScanRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "dataSourceConfig": {
            "type": "object",
            "anyOf": [
              {
                "title": "DatabricksConfig",
                "type": "object",
                "properties": {
                  "connector": {
                    "type": "string",
                    "enum": [
                      "databricks",
                      "postgresql"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "profileNotebook": {
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "host",
                  "path"
                ],
                "additionalProperties": false
              }
            ]
          },
          "scanParameters": {
            "type": "object",
            "title": "ScanParameters",
            "properties": {
              "profile": {
                "type": "boolean"
              },
              "modelDefinitions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "databricks": {
                            "type": "object",
                            "properties": {
                              "col_name": {
                                "type": "string"
                              },
                              "data_type": {
                                "type": "string"
                              },
                              "comment": {}
                            }
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "databricks": {
                          "type": "object",
                          "properties": {
                            "catalog": {
                              "type": "string"
                            },
                            "database": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "isTemporary": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "profile"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "dataSourceConfig"
        ],
        "additionalProperties": false
      },
      "NewScanRequest": {
        "title": "NewScanRequest",
        "type": "object",
        "description": "(tsType: Omit<ScanRequest, 'id'>, schemaOptions: { title: 'NewScanRequest', exclude: [ 'id' ] })",
        "properties": {
          "dataSourceConfig": {
            "type": "object",
            "anyOf": [
              {
                "title": "DatabricksConfig",
                "type": "object",
                "properties": {
                  "connector": {
                    "type": "string",
                    "enum": [
                      "databricks",
                      "postgresql"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "profileNotebook": {
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "host",
                  "path"
                ],
                "additionalProperties": false
              }
            ]
          },
          "scanParameters": {
            "type": "object",
            "title": "ScanParameters",
            "properties": {
              "profile": {
                "type": "boolean"
              },
              "modelDefinitions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "databricks": {
                            "type": "object",
                            "properties": {
                              "col_name": {
                                "type": "string"
                              },
                              "data_type": {
                                "type": "string"
                              },
                              "comment": {}
                            }
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "databricks": {
                          "type": "object",
                          "properties": {
                            "catalog": {
                              "type": "string"
                            },
                            "database": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "isTemporary": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "profile"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "dataSourceConfig"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<ScanRequest, 'id'>"
      },
      "ScanRequestLogWithRelations": {
        "title": "ScanRequestLogWithRelations",
        "type": "object",
        "description": "(tsType: ScanRequestLogWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "scanRequestId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "in progress"
            ]
          },
          "modelDefinition": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  }
                }
              },
              "settings": {
                "type": "object",
                "properties": {
                  "databricks": {
                    "type": "object",
                    "properties": {
                      "catalog": {
                        "type": "string"
                      },
                      "database": {
                        "type": "string"
                      },
                      "tableName": {
                        "type": "string"
                      },
                      "isTemporary": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "modelProfile": {
            "type": "object",
            "title": "ModelProfile",
            "properties": {
              "rowCount": {
                "type": "number"
              },
              "PropertyProfiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "PropertyProfile",
                  "properties": {
                    "frequencyDistribution": {
                      "type": "object",
                      "title": "FrequencyDistribution",
                      "properties": {
                        "bucketName": {
                          "type": "string"
                        },
                        "bucketCount": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "bucketName",
                        "bucketCount"
                      ],
                      "additionalProperties": false
                    },
                    "distinctValues": {
                      "type": "number"
                    },
                    "databricks": {
                      "type": "object",
                      "properties": {
                        "col_name": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "comment": {}
                      }
                    }
                  },
                  "required": [
                    "frequencyDistribution",
                    "distinctValues"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "rowCount"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "scanRequestId",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ScanRequestLogWithRelations"
      },
      "ScanRequestWithRelations": {
        "title": "ScanRequestWithRelations",
        "type": "object",
        "description": "(tsType: ScanRequestWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "dataSourceConfig": {
            "type": "object",
            "anyOf": [
              {
                "title": "DatabricksConfig",
                "type": "object",
                "properties": {
                  "connector": {
                    "type": "string",
                    "enum": [
                      "databricks",
                      "postgresql"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "profileNotebook": {
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "host",
                  "path"
                ],
                "additionalProperties": false
              }
            ]
          },
          "scanParameters": {
            "type": "object",
            "title": "ScanParameters",
            "properties": {
              "profile": {
                "type": "boolean"
              },
              "modelDefinitions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "databricks": {
                            "type": "object",
                            "properties": {
                              "col_name": {
                                "type": "string"
                              },
                              "data_type": {
                                "type": "string"
                              },
                              "comment": {}
                            }
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "databricks": {
                          "type": "object",
                          "properties": {
                            "catalog": {
                              "type": "string"
                            },
                            "database": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "isTemporary": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "profile"
            ],
            "additionalProperties": false
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanRequestLogWithRelations"
            }
          }
        },
        "required": [
          "dataSourceConfig"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ScanRequestWithRelations"
      },
      "ScanRequestPartial": {
        "title": "ScanRequestPartial",
        "type": "object",
        "description": "(tsType: Partial<ScanRequest>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "dataSourceConfig": {
            "type": "object",
            "anyOf": [
              {
                "title": "DatabricksConfig",
                "type": "object",
                "properties": {
                  "connector": {
                    "type": "string",
                    "enum": [
                      "databricks",
                      "postgresql"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "profileNotebook": {
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "host",
                  "path"
                ],
                "additionalProperties": false
              }
            ]
          },
          "scanParameters": {
            "type": "object",
            "title": "ScanParameters",
            "properties": {
              "profile": {
                "type": "boolean"
              },
              "modelDefinitions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "databricks": {
                            "type": "object",
                            "properties": {
                              "col_name": {
                                "type": "string"
                              },
                              "data_type": {
                                "type": "string"
                              },
                              "comment": {}
                            }
                          }
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "databricks": {
                          "type": "object",
                          "properties": {
                            "catalog": {
                              "type": "string"
                            },
                            "database": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "isTemporary": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "profile"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<ScanRequest>"
      },
      "care_siteWithRelations": {
        "title": "care_siteWithRelations",
        "type": "object",
        "description": "(tsType: care_siteWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "care_site_id": {
            "type": "number"
          },
          "care_site_name": {
            "type": "string"
          },
          "place_of_service_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "care_site_source_value": {
            "type": "string"
          },
          "place_of_service_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "care_siteWithRelations"
      },
      "care_site": {
        "title": "care_site",
        "type": "object",
        "properties": {
          "care_site_id": {
            "type": "number"
          },
          "care_site_name": {
            "type": "string"
          },
          "place_of_service_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "care_site_source_value": {
            "type": "string"
          },
          "place_of_service_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newcare_site": {
        "title": "Newcare_site",
        "type": "object",
        "description": "(tsType: Omit<care_site, >, schemaOptions: { title: 'Newcare_site', exclude: [] })",
        "properties": {
          "care_site_id": {
            "type": "number"
          },
          "care_site_name": {
            "type": "string"
          },
          "place_of_service_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "care_site_source_value": {
            "type": "string"
          },
          "place_of_service_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<care_site, >"
      },
      "care_sitePartial": {
        "title": "care_sitePartial",
        "type": "object",
        "description": "(tsType: Partial<care_site>, schemaOptions: { partial: true })",
        "properties": {
          "care_site_id": {
            "type": "number"
          },
          "care_site_name": {
            "type": "string"
          },
          "place_of_service_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "care_site_source_value": {
            "type": "string"
          },
          "place_of_service_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<care_site>"
      },
      "cdm_sourceWithRelations": {
        "title": "cdm_sourceWithRelations",
        "type": "object",
        "description": "(tsType: cdm_sourceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "cdm_source_name": {
            "type": "string"
          },
          "cdm_source_abbreviation": {
            "type": "string"
          },
          "cdm_holder": {
            "type": "string"
          },
          "source_description": {
            "type": "string"
          },
          "source_documentation_reference": {
            "type": "string"
          },
          "cdm_etl_reference": {
            "type": "string"
          },
          "source_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_version": {
            "type": "string"
          },
          "cdm_version_concept_id": {
            "type": "number"
          },
          "vocabulary_version": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "cdm_sourceWithRelations"
      },
      "cdm_source": {
        "title": "cdm_source",
        "type": "object",
        "properties": {
          "cdm_source_name": {
            "type": "string"
          },
          "cdm_source_abbreviation": {
            "type": "string"
          },
          "cdm_holder": {
            "type": "string"
          },
          "source_description": {
            "type": "string"
          },
          "source_documentation_reference": {
            "type": "string"
          },
          "cdm_etl_reference": {
            "type": "string"
          },
          "source_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_version": {
            "type": "string"
          },
          "cdm_version_concept_id": {
            "type": "number"
          },
          "vocabulary_version": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newcdm_source": {
        "title": "Newcdm_source",
        "type": "object",
        "description": "(tsType: Omit<cdm_source, >, schemaOptions: { title: 'Newcdm_source', exclude: [] })",
        "properties": {
          "cdm_source_name": {
            "type": "string"
          },
          "cdm_source_abbreviation": {
            "type": "string"
          },
          "cdm_holder": {
            "type": "string"
          },
          "source_description": {
            "type": "string"
          },
          "source_documentation_reference": {
            "type": "string"
          },
          "cdm_etl_reference": {
            "type": "string"
          },
          "source_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_version": {
            "type": "string"
          },
          "cdm_version_concept_id": {
            "type": "number"
          },
          "vocabulary_version": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<cdm_source, >"
      },
      "cdm_sourcePartial": {
        "title": "cdm_sourcePartial",
        "type": "object",
        "description": "(tsType: Partial<cdm_source>, schemaOptions: { partial: true })",
        "properties": {
          "cdm_source_name": {
            "type": "string"
          },
          "cdm_source_abbreviation": {
            "type": "string"
          },
          "cdm_holder": {
            "type": "string"
          },
          "source_description": {
            "type": "string"
          },
          "source_documentation_reference": {
            "type": "string"
          },
          "cdm_etl_reference": {
            "type": "string"
          },
          "source_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_release_date": {
            "type": "string",
            "format": "date-time"
          },
          "cdm_version": {
            "type": "string"
          },
          "cdm_version_concept_id": {
            "type": "number"
          },
          "vocabulary_version": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<cdm_source>"
      },
      "cohortWithRelations": {
        "title": "cohortWithRelations",
        "type": "object",
        "description": "(tsType: cohortWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "subject_id": {
            "type": "number"
          },
          "cohort_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "cohort_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "cohortWithRelations"
      },
      "cohort": {
        "title": "cohort",
        "type": "object",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "subject_id": {
            "type": "number"
          },
          "cohort_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "cohort_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Newcohort": {
        "title": "Newcohort",
        "type": "object",
        "description": "(tsType: Omit<cohort, >, schemaOptions: { title: 'Newcohort', exclude: [] })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "subject_id": {
            "type": "number"
          },
          "cohort_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "cohort_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<cohort, >"
      },
      "cohortPartial": {
        "title": "cohortPartial",
        "type": "object",
        "description": "(tsType: Partial<cohort>, schemaOptions: { partial: true })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "subject_id": {
            "type": "number"
          },
          "cohort_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "cohort_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<cohort>"
      },
      "cohort_definitionWithRelations": {
        "title": "cohort_definitionWithRelations",
        "type": "object",
        "description": "(tsType: cohort_definitionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "cohort_definition_name": {
            "type": "string"
          },
          "cohort_definition_description": {
            "type": "string"
          },
          "definition_type_concept_id": {
            "type": "number"
          },
          "cohort_definition_syntax": {
            "type": "string"
          },
          "subject_concept_id": {
            "type": "number"
          },
          "cohort_initiation_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "cohort_definitionWithRelations"
      },
      "cohort_definition": {
        "title": "cohort_definition",
        "type": "object",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "cohort_definition_name": {
            "type": "string"
          },
          "cohort_definition_description": {
            "type": "string"
          },
          "definition_type_concept_id": {
            "type": "number"
          },
          "cohort_definition_syntax": {
            "type": "string"
          },
          "subject_concept_id": {
            "type": "number"
          },
          "cohort_initiation_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Newcohort_definition": {
        "title": "Newcohort_definition",
        "type": "object",
        "description": "(tsType: Omit<cohort_definition, >, schemaOptions: { title: 'Newcohort_definition', exclude: [] })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "cohort_definition_name": {
            "type": "string"
          },
          "cohort_definition_description": {
            "type": "string"
          },
          "definition_type_concept_id": {
            "type": "number"
          },
          "cohort_definition_syntax": {
            "type": "string"
          },
          "subject_concept_id": {
            "type": "number"
          },
          "cohort_initiation_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<cohort_definition, >"
      },
      "cohort_definitionPartial": {
        "title": "cohort_definitionPartial",
        "type": "object",
        "description": "(tsType: Partial<cohort_definition>, schemaOptions: { partial: true })",
        "properties": {
          "cohort_definition_id": {
            "type": "number"
          },
          "cohort_definition_name": {
            "type": "string"
          },
          "cohort_definition_description": {
            "type": "string"
          },
          "definition_type_concept_id": {
            "type": "number"
          },
          "cohort_definition_syntax": {
            "type": "string"
          },
          "subject_concept_id": {
            "type": "number"
          },
          "cohort_initiation_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<cohort_definition>"
      },
      "conceptWithRelations": {
        "title": "conceptWithRelations",
        "type": "object",
        "description": "(tsType: conceptWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_name": {
            "type": "string"
          },
          "domain_id": {
            "type": "string"
          },
          "vocabulary_id": {
            "type": "string"
          },
          "concept_class_id": {
            "type": "string"
          },
          "standard_concept": {
            "type": "string"
          },
          "concept_code": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "conceptWithRelations"
      },
      "concept": {
        "title": "concept",
        "type": "object",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_name": {
            "type": "string"
          },
          "domain_id": {
            "type": "string"
          },
          "vocabulary_id": {
            "type": "string"
          },
          "concept_class_id": {
            "type": "string"
          },
          "standard_concept": {
            "type": "string"
          },
          "concept_code": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newconcept": {
        "title": "Newconcept",
        "type": "object",
        "description": "(tsType: Omit<concept, >, schemaOptions: { title: 'Newconcept', exclude: [] })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_name": {
            "type": "string"
          },
          "domain_id": {
            "type": "string"
          },
          "vocabulary_id": {
            "type": "string"
          },
          "concept_class_id": {
            "type": "string"
          },
          "standard_concept": {
            "type": "string"
          },
          "concept_code": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<concept, >"
      },
      "conceptPartial": {
        "title": "conceptPartial",
        "type": "object",
        "description": "(tsType: Partial<concept>, schemaOptions: { partial: true })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_name": {
            "type": "string"
          },
          "domain_id": {
            "type": "string"
          },
          "vocabulary_id": {
            "type": "string"
          },
          "concept_class_id": {
            "type": "string"
          },
          "standard_concept": {
            "type": "string"
          },
          "concept_code": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<concept>"
      },
      "concept_ancestorWithRelations": {
        "title": "concept_ancestorWithRelations",
        "type": "object",
        "description": "(tsType: concept_ancestorWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "ancestor_concept_id": {
            "type": "number"
          },
          "descendant_concept_id": {
            "type": "number"
          },
          "min_levels_of_separation": {
            "type": "number"
          },
          "max_levels_of_separation": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "concept_ancestorWithRelations"
      },
      "concept_ancestor": {
        "title": "concept_ancestor",
        "type": "object",
        "properties": {
          "ancestor_concept_id": {
            "type": "number"
          },
          "descendant_concept_id": {
            "type": "number"
          },
          "min_levels_of_separation": {
            "type": "number"
          },
          "max_levels_of_separation": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newconcept_ancestor": {
        "title": "Newconcept_ancestor",
        "type": "object",
        "description": "(tsType: Omit<concept_ancestor, >, schemaOptions: { title: 'Newconcept_ancestor', exclude: [] })",
        "properties": {
          "ancestor_concept_id": {
            "type": "number"
          },
          "descendant_concept_id": {
            "type": "number"
          },
          "min_levels_of_separation": {
            "type": "number"
          },
          "max_levels_of_separation": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<concept_ancestor, >"
      },
      "concept_ancestorPartial": {
        "title": "concept_ancestorPartial",
        "type": "object",
        "description": "(tsType: Partial<concept_ancestor>, schemaOptions: { partial: true })",
        "properties": {
          "ancestor_concept_id": {
            "type": "number"
          },
          "descendant_concept_id": {
            "type": "number"
          },
          "min_levels_of_separation": {
            "type": "number"
          },
          "max_levels_of_separation": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<concept_ancestor>"
      },
      "concept_classWithRelations": {
        "title": "concept_classWithRelations",
        "type": "object",
        "description": "(tsType: concept_classWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "concept_class_id": {
            "type": "string"
          },
          "concept_class_name": {
            "type": "string"
          },
          "concept_class_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "concept_classWithRelations"
      },
      "concept_class": {
        "title": "concept_class",
        "type": "object",
        "properties": {
          "concept_class_id": {
            "type": "string"
          },
          "concept_class_name": {
            "type": "string"
          },
          "concept_class_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newconcept_class": {
        "title": "Newconcept_class",
        "type": "object",
        "description": "(tsType: Omit<concept_class, >, schemaOptions: { title: 'Newconcept_class', exclude: [] })",
        "properties": {
          "concept_class_id": {
            "type": "string"
          },
          "concept_class_name": {
            "type": "string"
          },
          "concept_class_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<concept_class, >"
      },
      "concept_classPartial": {
        "title": "concept_classPartial",
        "type": "object",
        "description": "(tsType: Partial<concept_class>, schemaOptions: { partial: true })",
        "properties": {
          "concept_class_id": {
            "type": "string"
          },
          "concept_class_name": {
            "type": "string"
          },
          "concept_class_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<concept_class>"
      },
      "concept_relationshipWithRelations": {
        "title": "concept_relationshipWithRelations",
        "type": "object",
        "description": "(tsType: concept_relationshipWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "concept_id_1": {
            "type": "number"
          },
          "concept_id_2": {
            "type": "number"
          },
          "relationship_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "concept_relationshipWithRelations"
      },
      "concept_relationship": {
        "title": "concept_relationship",
        "type": "object",
        "properties": {
          "concept_id_1": {
            "type": "number"
          },
          "concept_id_2": {
            "type": "number"
          },
          "relationship_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newconcept_relationship": {
        "title": "Newconcept_relationship",
        "type": "object",
        "description": "(tsType: Omit<concept_relationship, >, schemaOptions: { title: 'Newconcept_relationship', exclude: [] })",
        "properties": {
          "concept_id_1": {
            "type": "number"
          },
          "concept_id_2": {
            "type": "number"
          },
          "relationship_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<concept_relationship, >"
      },
      "concept_relationshipPartial": {
        "title": "concept_relationshipPartial",
        "type": "object",
        "description": "(tsType: Partial<concept_relationship>, schemaOptions: { partial: true })",
        "properties": {
          "concept_id_1": {
            "type": "number"
          },
          "concept_id_2": {
            "type": "number"
          },
          "relationship_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<concept_relationship>"
      },
      "concept_synonymWithRelations": {
        "title": "concept_synonymWithRelations",
        "type": "object",
        "description": "(tsType: concept_synonymWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_synonym_name": {
            "type": "string"
          },
          "language_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "concept_synonymWithRelations"
      },
      "concept_synonym": {
        "title": "concept_synonym",
        "type": "object",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_synonym_name": {
            "type": "string"
          },
          "language_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newconcept_synonym": {
        "title": "Newconcept_synonym",
        "type": "object",
        "description": "(tsType: Omit<concept_synonym, >, schemaOptions: { title: 'Newconcept_synonym', exclude: [] })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_synonym_name": {
            "type": "string"
          },
          "language_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<concept_synonym, >"
      },
      "concept_synonymPartial": {
        "title": "concept_synonymPartial",
        "type": "object",
        "description": "(tsType: Partial<concept_synonym>, schemaOptions: { partial: true })",
        "properties": {
          "concept_id": {
            "type": "number"
          },
          "concept_synonym_name": {
            "type": "string"
          },
          "language_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<concept_synonym>"
      },
      "condition_eraWithRelations": {
        "title": "condition_eraWithRelations",
        "type": "object",
        "description": "(tsType: condition_eraWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "condition_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_occurrence_count": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "condition_eraWithRelations"
      },
      "condition_era": {
        "title": "condition_era",
        "type": "object",
        "properties": {
          "condition_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_occurrence_count": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newcondition_era": {
        "title": "Newcondition_era",
        "type": "object",
        "description": "(tsType: Omit<condition_era, >, schemaOptions: { title: 'Newcondition_era', exclude: [] })",
        "properties": {
          "condition_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_occurrence_count": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<condition_era, >"
      },
      "condition_eraPartial": {
        "title": "condition_eraPartial",
        "type": "object",
        "description": "(tsType: Partial<condition_era>, schemaOptions: { partial: true })",
        "properties": {
          "condition_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_occurrence_count": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<condition_era>"
      },
      "condition_occurrenceWithRelations": {
        "title": "condition_occurrenceWithRelations",
        "type": "object",
        "description": "(tsType: condition_occurrenceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "condition_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_type_concept_id": {
            "type": "number"
          },
          "condition_status_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "condition_source_value": {
            "type": "string"
          },
          "condition_source_concept_id": {
            "type": "number"
          },
          "condition_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "condition_occurrenceWithRelations"
      },
      "condition_occurrence": {
        "title": "condition_occurrence",
        "type": "object",
        "properties": {
          "condition_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_type_concept_id": {
            "type": "number"
          },
          "condition_status_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "condition_source_value": {
            "type": "string"
          },
          "condition_source_concept_id": {
            "type": "number"
          },
          "condition_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newcondition_occurrence": {
        "title": "Newcondition_occurrence",
        "type": "object",
        "description": "(tsType: Omit<condition_occurrence, >, schemaOptions: { title: 'Newcondition_occurrence', exclude: [] })",
        "properties": {
          "condition_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_type_concept_id": {
            "type": "number"
          },
          "condition_status_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "condition_source_value": {
            "type": "string"
          },
          "condition_source_concept_id": {
            "type": "number"
          },
          "condition_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<condition_occurrence, >"
      },
      "condition_occurrencePartial": {
        "title": "condition_occurrencePartial",
        "type": "object",
        "description": "(tsType: Partial<condition_occurrence>, schemaOptions: { partial: true })",
        "properties": {
          "condition_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "condition_concept_id": {
            "type": "number"
          },
          "condition_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "condition_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "condition_type_concept_id": {
            "type": "number"
          },
          "condition_status_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "condition_source_value": {
            "type": "string"
          },
          "condition_source_concept_id": {
            "type": "number"
          },
          "condition_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<condition_occurrence>"
      },
      "costWithRelations": {
        "title": "costWithRelations",
        "type": "object",
        "description": "(tsType: costWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "cost_id": {
            "type": "number"
          },
          "cost_event_id": {
            "type": "number"
          },
          "cost_domain_id": {
            "type": "string"
          },
          "cost_type_concept_id": {
            "type": "number"
          },
          "currency_concept_id": {
            "type": "number"
          },
          "total_charge": {
            "type": "number"
          },
          "total_cost": {
            "type": "number"
          },
          "total_paid": {
            "type": "number"
          },
          "paid_by_payer": {
            "type": "number"
          },
          "paid_by_patient": {
            "type": "number"
          },
          "paid_patient_copay": {
            "type": "number"
          },
          "paid_patient_coinsurance": {
            "type": "number"
          },
          "paid_patient_deductible": {
            "type": "number"
          },
          "paid_by_primary": {
            "type": "number"
          },
          "paid_ingredient_cost": {
            "type": "number"
          },
          "paid_dispensing_fee": {
            "type": "number"
          },
          "payer_plan_period_id": {
            "type": "number"
          },
          "amount_allowed": {
            "type": "number"
          },
          "revenue_code_concept_id": {
            "type": "number"
          },
          "revenue_code_source_value": {
            "type": "string"
          },
          "drg_concept_id": {
            "type": "number"
          },
          "drg_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "costWithRelations"
      },
      "cost": {
        "title": "cost",
        "type": "object",
        "properties": {
          "cost_id": {
            "type": "number"
          },
          "cost_event_id": {
            "type": "number"
          },
          "cost_domain_id": {
            "type": "string"
          },
          "cost_type_concept_id": {
            "type": "number"
          },
          "currency_concept_id": {
            "type": "number"
          },
          "total_charge": {
            "type": "number"
          },
          "total_cost": {
            "type": "number"
          },
          "total_paid": {
            "type": "number"
          },
          "paid_by_payer": {
            "type": "number"
          },
          "paid_by_patient": {
            "type": "number"
          },
          "paid_patient_copay": {
            "type": "number"
          },
          "paid_patient_coinsurance": {
            "type": "number"
          },
          "paid_patient_deductible": {
            "type": "number"
          },
          "paid_by_primary": {
            "type": "number"
          },
          "paid_ingredient_cost": {
            "type": "number"
          },
          "paid_dispensing_fee": {
            "type": "number"
          },
          "payer_plan_period_id": {
            "type": "number"
          },
          "amount_allowed": {
            "type": "number"
          },
          "revenue_code_concept_id": {
            "type": "number"
          },
          "revenue_code_source_value": {
            "type": "string"
          },
          "drg_concept_id": {
            "type": "number"
          },
          "drg_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newcost": {
        "title": "Newcost",
        "type": "object",
        "description": "(tsType: Omit<cost, >, schemaOptions: { title: 'Newcost', exclude: [] })",
        "properties": {
          "cost_id": {
            "type": "number"
          },
          "cost_event_id": {
            "type": "number"
          },
          "cost_domain_id": {
            "type": "string"
          },
          "cost_type_concept_id": {
            "type": "number"
          },
          "currency_concept_id": {
            "type": "number"
          },
          "total_charge": {
            "type": "number"
          },
          "total_cost": {
            "type": "number"
          },
          "total_paid": {
            "type": "number"
          },
          "paid_by_payer": {
            "type": "number"
          },
          "paid_by_patient": {
            "type": "number"
          },
          "paid_patient_copay": {
            "type": "number"
          },
          "paid_patient_coinsurance": {
            "type": "number"
          },
          "paid_patient_deductible": {
            "type": "number"
          },
          "paid_by_primary": {
            "type": "number"
          },
          "paid_ingredient_cost": {
            "type": "number"
          },
          "paid_dispensing_fee": {
            "type": "number"
          },
          "payer_plan_period_id": {
            "type": "number"
          },
          "amount_allowed": {
            "type": "number"
          },
          "revenue_code_concept_id": {
            "type": "number"
          },
          "revenue_code_source_value": {
            "type": "string"
          },
          "drg_concept_id": {
            "type": "number"
          },
          "drg_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<cost, >"
      },
      "costPartial": {
        "title": "costPartial",
        "type": "object",
        "description": "(tsType: Partial<cost>, schemaOptions: { partial: true })",
        "properties": {
          "cost_id": {
            "type": "number"
          },
          "cost_event_id": {
            "type": "number"
          },
          "cost_domain_id": {
            "type": "string"
          },
          "cost_type_concept_id": {
            "type": "number"
          },
          "currency_concept_id": {
            "type": "number"
          },
          "total_charge": {
            "type": "number"
          },
          "total_cost": {
            "type": "number"
          },
          "total_paid": {
            "type": "number"
          },
          "paid_by_payer": {
            "type": "number"
          },
          "paid_by_patient": {
            "type": "number"
          },
          "paid_patient_copay": {
            "type": "number"
          },
          "paid_patient_coinsurance": {
            "type": "number"
          },
          "paid_patient_deductible": {
            "type": "number"
          },
          "paid_by_primary": {
            "type": "number"
          },
          "paid_ingredient_cost": {
            "type": "number"
          },
          "paid_dispensing_fee": {
            "type": "number"
          },
          "payer_plan_period_id": {
            "type": "number"
          },
          "amount_allowed": {
            "type": "number"
          },
          "revenue_code_concept_id": {
            "type": "number"
          },
          "revenue_code_source_value": {
            "type": "string"
          },
          "drg_concept_id": {
            "type": "number"
          },
          "drg_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<cost>"
      },
      "deathWithRelations": {
        "title": "deathWithRelations",
        "type": "object",
        "description": "(tsType: deathWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "death_date": {
            "type": "string",
            "format": "date-time"
          },
          "death_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "death_type_concept_id": {
            "type": "number"
          },
          "cause_concept_id": {
            "type": "number"
          },
          "cause_source_value": {
            "type": "string"
          },
          "cause_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "deathWithRelations"
      },
      "death": {
        "title": "death",
        "type": "object",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "death_date": {
            "type": "string",
            "format": "date-time"
          },
          "death_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "death_type_concept_id": {
            "type": "number"
          },
          "cause_concept_id": {
            "type": "number"
          },
          "cause_source_value": {
            "type": "string"
          },
          "cause_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newdeath": {
        "title": "Newdeath",
        "type": "object",
        "description": "(tsType: Omit<death, >, schemaOptions: { title: 'Newdeath', exclude: [] })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "death_date": {
            "type": "string",
            "format": "date-time"
          },
          "death_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "death_type_concept_id": {
            "type": "number"
          },
          "cause_concept_id": {
            "type": "number"
          },
          "cause_source_value": {
            "type": "string"
          },
          "cause_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<death, >"
      },
      "deathPartial": {
        "title": "deathPartial",
        "type": "object",
        "description": "(tsType: Partial<death>, schemaOptions: { partial: true })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "death_date": {
            "type": "string",
            "format": "date-time"
          },
          "death_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "death_type_concept_id": {
            "type": "number"
          },
          "cause_concept_id": {
            "type": "number"
          },
          "cause_source_value": {
            "type": "string"
          },
          "cause_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<death>"
      },
      "device_exposureWithRelations": {
        "title": "device_exposureWithRelations",
        "type": "object",
        "description": "(tsType: device_exposureWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "device_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "device_concept_id": {
            "type": "number"
          },
          "device_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_type_concept_id": {
            "type": "number"
          },
          "unique_device_id": {
            "type": "string"
          },
          "production_id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "device_source_value": {
            "type": "string"
          },
          "device_source_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "device_exposureWithRelations"
      },
      "device_exposure": {
        "title": "device_exposure",
        "type": "object",
        "properties": {
          "device_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "device_concept_id": {
            "type": "number"
          },
          "device_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_type_concept_id": {
            "type": "number"
          },
          "unique_device_id": {
            "type": "string"
          },
          "production_id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "device_source_value": {
            "type": "string"
          },
          "device_source_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newdevice_exposure": {
        "title": "Newdevice_exposure",
        "type": "object",
        "description": "(tsType: Omit<device_exposure, >, schemaOptions: { title: 'Newdevice_exposure', exclude: [] })",
        "properties": {
          "device_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "device_concept_id": {
            "type": "number"
          },
          "device_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_type_concept_id": {
            "type": "number"
          },
          "unique_device_id": {
            "type": "string"
          },
          "production_id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "device_source_value": {
            "type": "string"
          },
          "device_source_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<device_exposure, >"
      },
      "device_exposurePartial": {
        "title": "device_exposurePartial",
        "type": "object",
        "description": "(tsType: Partial<device_exposure>, schemaOptions: { partial: true })",
        "properties": {
          "device_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "device_concept_id": {
            "type": "number"
          },
          "device_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "device_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "device_type_concept_id": {
            "type": "number"
          },
          "unique_device_id": {
            "type": "string"
          },
          "production_id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "device_source_value": {
            "type": "string"
          },
          "device_source_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<device_exposure>"
      },
      "domainWithRelations": {
        "title": "domainWithRelations",
        "type": "object",
        "description": "(tsType: domainWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "domain_id": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "domain_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "domainWithRelations"
      },
      "domain": {
        "title": "domain",
        "type": "object",
        "properties": {
          "domain_id": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "domain_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newdomain": {
        "title": "Newdomain",
        "type": "object",
        "description": "(tsType: Omit<domain, >, schemaOptions: { title: 'Newdomain', exclude: [] })",
        "properties": {
          "domain_id": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "domain_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<domain, >"
      },
      "domainPartial": {
        "title": "domainPartial",
        "type": "object",
        "description": "(tsType: Partial<domain>, schemaOptions: { partial: true })",
        "properties": {
          "domain_id": {
            "type": "string"
          },
          "domain_name": {
            "type": "string"
          },
          "domain_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<domain>"
      },
      "dose_eraWithRelations": {
        "title": "dose_eraWithRelations",
        "type": "object",
        "description": "(tsType: dose_eraWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "dose_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "dose_value": {
            "type": "number"
          },
          "dose_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "dose_era_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "dose_eraWithRelations"
      },
      "dose_era": {
        "title": "dose_era",
        "type": "object",
        "properties": {
          "dose_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "dose_value": {
            "type": "number"
          },
          "dose_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "dose_era_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Newdose_era": {
        "title": "Newdose_era",
        "type": "object",
        "description": "(tsType: Omit<dose_era, >, schemaOptions: { title: 'Newdose_era', exclude: [] })",
        "properties": {
          "dose_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "dose_value": {
            "type": "number"
          },
          "dose_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "dose_era_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<dose_era, >"
      },
      "dose_eraPartial": {
        "title": "dose_eraPartial",
        "type": "object",
        "description": "(tsType: Partial<dose_era>, schemaOptions: { partial: true })",
        "properties": {
          "dose_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "dose_value": {
            "type": "number"
          },
          "dose_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "dose_era_end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<dose_era>"
      },
      "drug_eraWithRelations": {
        "title": "drug_eraWithRelations",
        "type": "object",
        "description": "(tsType: drug_eraWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "drug_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_count": {
            "type": "number"
          },
          "gap_days": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "drug_eraWithRelations"
      },
      "drug_era": {
        "title": "drug_era",
        "type": "object",
        "properties": {
          "drug_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_count": {
            "type": "number"
          },
          "gap_days": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newdrug_era": {
        "title": "Newdrug_era",
        "type": "object",
        "description": "(tsType: Omit<drug_era, >, schemaOptions: { title: 'Newdrug_era', exclude: [] })",
        "properties": {
          "drug_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_count": {
            "type": "number"
          },
          "gap_days": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<drug_era, >"
      },
      "drug_eraPartial": {
        "title": "drug_eraPartial",
        "type": "object",
        "description": "(tsType: Partial<drug_era>, schemaOptions: { partial: true })",
        "properties": {
          "drug_era_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_era_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_era_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_count": {
            "type": "number"
          },
          "gap_days": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<drug_era>"
      },
      "drug_exposureWithRelations": {
        "title": "drug_exposureWithRelations",
        "type": "object",
        "description": "(tsType: drug_exposureWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "drug_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "verbatim_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_type_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "refills": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "days_supply": {
            "type": "number"
          },
          "sig": {
            "type": "string"
          },
          "route_concept_id": {
            "type": "number"
          },
          "lot_number": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "drug_source_value": {
            "type": "string"
          },
          "drug_source_concept_id": {
            "type": "number"
          },
          "route_source_value": {
            "type": "string"
          },
          "dose_unit_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "drug_exposureWithRelations"
      },
      "drug_exposure": {
        "title": "drug_exposure",
        "type": "object",
        "properties": {
          "drug_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "verbatim_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_type_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "refills": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "days_supply": {
            "type": "number"
          },
          "sig": {
            "type": "string"
          },
          "route_concept_id": {
            "type": "number"
          },
          "lot_number": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "drug_source_value": {
            "type": "string"
          },
          "drug_source_concept_id": {
            "type": "number"
          },
          "route_source_value": {
            "type": "string"
          },
          "dose_unit_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newdrug_exposure": {
        "title": "Newdrug_exposure",
        "type": "object",
        "description": "(tsType: Omit<drug_exposure, >, schemaOptions: { title: 'Newdrug_exposure', exclude: [] })",
        "properties": {
          "drug_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "verbatim_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_type_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "refills": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "days_supply": {
            "type": "number"
          },
          "sig": {
            "type": "string"
          },
          "route_concept_id": {
            "type": "number"
          },
          "lot_number": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "drug_source_value": {
            "type": "string"
          },
          "drug_source_concept_id": {
            "type": "number"
          },
          "route_source_value": {
            "type": "string"
          },
          "dose_unit_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<drug_exposure, >"
      },
      "drug_exposurePartial": {
        "title": "drug_exposurePartial",
        "type": "object",
        "description": "(tsType: Partial<drug_exposure>, schemaOptions: { partial: true })",
        "properties": {
          "drug_exposure_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "drug_concept_id": {
            "type": "number"
          },
          "drug_exposure_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_exposure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "verbatim_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "drug_type_concept_id": {
            "type": "number"
          },
          "stop_reason": {
            "type": "string"
          },
          "refills": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "days_supply": {
            "type": "number"
          },
          "sig": {
            "type": "string"
          },
          "route_concept_id": {
            "type": "number"
          },
          "lot_number": {
            "type": "string"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "drug_source_value": {
            "type": "string"
          },
          "drug_source_concept_id": {
            "type": "number"
          },
          "route_source_value": {
            "type": "string"
          },
          "dose_unit_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<drug_exposure>"
      },
      "drug_strengthWithRelations": {
        "title": "drug_strengthWithRelations",
        "type": "object",
        "description": "(tsType: drug_strengthWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "drug_concept_id": {
            "type": "number"
          },
          "ingredient_concept_id": {
            "type": "number"
          },
          "amount_value": {
            "type": "number"
          },
          "amount_unit_concept_id": {
            "type": "number"
          },
          "numerator_value": {
            "type": "number"
          },
          "numerator_unit_concept_id": {
            "type": "number"
          },
          "denominator_value": {
            "type": "number"
          },
          "denominator_unit_concept_id": {
            "type": "number"
          },
          "box_size": {
            "type": "number"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "drug_strengthWithRelations"
      },
      "drug_strength": {
        "title": "drug_strength",
        "type": "object",
        "properties": {
          "drug_concept_id": {
            "type": "number"
          },
          "ingredient_concept_id": {
            "type": "number"
          },
          "amount_value": {
            "type": "number"
          },
          "amount_unit_concept_id": {
            "type": "number"
          },
          "numerator_value": {
            "type": "number"
          },
          "numerator_unit_concept_id": {
            "type": "number"
          },
          "denominator_value": {
            "type": "number"
          },
          "denominator_unit_concept_id": {
            "type": "number"
          },
          "box_size": {
            "type": "number"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newdrug_strength": {
        "title": "Newdrug_strength",
        "type": "object",
        "description": "(tsType: Omit<drug_strength, >, schemaOptions: { title: 'Newdrug_strength', exclude: [] })",
        "properties": {
          "drug_concept_id": {
            "type": "number"
          },
          "ingredient_concept_id": {
            "type": "number"
          },
          "amount_value": {
            "type": "number"
          },
          "amount_unit_concept_id": {
            "type": "number"
          },
          "numerator_value": {
            "type": "number"
          },
          "numerator_unit_concept_id": {
            "type": "number"
          },
          "denominator_value": {
            "type": "number"
          },
          "denominator_unit_concept_id": {
            "type": "number"
          },
          "box_size": {
            "type": "number"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<drug_strength, >"
      },
      "drug_strengthPartial": {
        "title": "drug_strengthPartial",
        "type": "object",
        "description": "(tsType: Partial<drug_strength>, schemaOptions: { partial: true })",
        "properties": {
          "drug_concept_id": {
            "type": "number"
          },
          "ingredient_concept_id": {
            "type": "number"
          },
          "amount_value": {
            "type": "number"
          },
          "amount_unit_concept_id": {
            "type": "number"
          },
          "numerator_value": {
            "type": "number"
          },
          "numerator_unit_concept_id": {
            "type": "number"
          },
          "denominator_value": {
            "type": "number"
          },
          "denominator_unit_concept_id": {
            "type": "number"
          },
          "box_size": {
            "type": "number"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<drug_strength>"
      },
      "episodeWithRelations": {
        "title": "episodeWithRelations",
        "type": "object",
        "description": "(tsType: episodeWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "episode_concept_id": {
            "type": "number"
          },
          "episode_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_parent_id": {
            "type": "number"
          },
          "episode_number": {
            "type": "number"
          },
          "episode_object_concept_id": {
            "type": "number"
          },
          "episode_type_concept_id": {
            "type": "number"
          },
          "episode_source_value": {
            "type": "string"
          },
          "episode_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "episodeWithRelations"
      },
      "episode": {
        "title": "episode",
        "type": "object",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "episode_concept_id": {
            "type": "number"
          },
          "episode_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_parent_id": {
            "type": "number"
          },
          "episode_number": {
            "type": "number"
          },
          "episode_object_concept_id": {
            "type": "number"
          },
          "episode_type_concept_id": {
            "type": "number"
          },
          "episode_source_value": {
            "type": "string"
          },
          "episode_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newepisode": {
        "title": "Newepisode",
        "type": "object",
        "description": "(tsType: Omit<episode, >, schemaOptions: { title: 'Newepisode', exclude: [] })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "episode_concept_id": {
            "type": "number"
          },
          "episode_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_parent_id": {
            "type": "number"
          },
          "episode_number": {
            "type": "number"
          },
          "episode_object_concept_id": {
            "type": "number"
          },
          "episode_type_concept_id": {
            "type": "number"
          },
          "episode_source_value": {
            "type": "string"
          },
          "episode_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<episode, >"
      },
      "episodePartial": {
        "title": "episodePartial",
        "type": "object",
        "description": "(tsType: Partial<episode>, schemaOptions: { partial: true })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "episode_concept_id": {
            "type": "number"
          },
          "episode_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "episode_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "episode_parent_id": {
            "type": "number"
          },
          "episode_number": {
            "type": "number"
          },
          "episode_object_concept_id": {
            "type": "number"
          },
          "episode_type_concept_id": {
            "type": "number"
          },
          "episode_source_value": {
            "type": "string"
          },
          "episode_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<episode>"
      },
      "episode_eventWithRelations": {
        "title": "episode_eventWithRelations",
        "type": "object",
        "description": "(tsType: episode_eventWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "event_id": {
            "type": "number"
          },
          "episode_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "episode_eventWithRelations"
      },
      "episode_event": {
        "title": "episode_event",
        "type": "object",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "event_id": {
            "type": "number"
          },
          "episode_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newepisode_event": {
        "title": "Newepisode_event",
        "type": "object",
        "description": "(tsType: Omit<episode_event, >, schemaOptions: { title: 'Newepisode_event', exclude: [] })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "event_id": {
            "type": "number"
          },
          "episode_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<episode_event, >"
      },
      "episode_eventPartial": {
        "title": "episode_eventPartial",
        "type": "object",
        "description": "(tsType: Partial<episode_event>, schemaOptions: { partial: true })",
        "properties": {
          "episode_id": {
            "type": "number"
          },
          "event_id": {
            "type": "number"
          },
          "episode_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<episode_event>"
      },
      "fact_relationshipWithRelations": {
        "title": "fact_relationshipWithRelations",
        "type": "object",
        "description": "(tsType: fact_relationshipWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "domain_concept_id_1": {
            "type": "number"
          },
          "fact_id_1": {
            "type": "number"
          },
          "domain_concept_id_2": {
            "type": "number"
          },
          "fact_id_2": {
            "type": "number"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "fact_relationshipWithRelations"
      },
      "fact_relationship": {
        "title": "fact_relationship",
        "type": "object",
        "properties": {
          "domain_concept_id_1": {
            "type": "number"
          },
          "fact_id_1": {
            "type": "number"
          },
          "domain_concept_id_2": {
            "type": "number"
          },
          "fact_id_2": {
            "type": "number"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newfact_relationship": {
        "title": "Newfact_relationship",
        "type": "object",
        "description": "(tsType: Omit<fact_relationship, >, schemaOptions: { title: 'Newfact_relationship', exclude: [] })",
        "properties": {
          "domain_concept_id_1": {
            "type": "number"
          },
          "fact_id_1": {
            "type": "number"
          },
          "domain_concept_id_2": {
            "type": "number"
          },
          "fact_id_2": {
            "type": "number"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<fact_relationship, >"
      },
      "fact_relationshipPartial": {
        "title": "fact_relationshipPartial",
        "type": "object",
        "description": "(tsType: Partial<fact_relationship>, schemaOptions: { partial: true })",
        "properties": {
          "domain_concept_id_1": {
            "type": "number"
          },
          "fact_id_1": {
            "type": "number"
          },
          "domain_concept_id_2": {
            "type": "number"
          },
          "fact_id_2": {
            "type": "number"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<fact_relationship>"
      },
      "locationWithRelations": {
        "title": "locationWithRelations",
        "type": "object",
        "description": "(tsType: locationWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "location_id": {
            "type": "number"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "location_source_value": {
            "type": "string"
          },
          "country_concept_id": {
            "type": "number"
          },
          "country_source_value": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "locationWithRelations"
      },
      "location": {
        "title": "location",
        "type": "object",
        "properties": {
          "location_id": {
            "type": "number"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "location_source_value": {
            "type": "string"
          },
          "country_concept_id": {
            "type": "number"
          },
          "country_source_value": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newlocation": {
        "title": "Newlocation",
        "type": "object",
        "description": "(tsType: Omit<location, >, schemaOptions: { title: 'Newlocation', exclude: [] })",
        "properties": {
          "location_id": {
            "type": "number"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "location_source_value": {
            "type": "string"
          },
          "country_concept_id": {
            "type": "number"
          },
          "country_source_value": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<location, >"
      },
      "locationPartial": {
        "title": "locationPartial",
        "type": "object",
        "description": "(tsType: Partial<location>, schemaOptions: { partial: true })",
        "properties": {
          "location_id": {
            "type": "number"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "location_source_value": {
            "type": "string"
          },
          "country_concept_id": {
            "type": "number"
          },
          "country_source_value": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<location>"
      },
      "measurementWithRelations": {
        "title": "measurementWithRelations",
        "type": "object",
        "description": "(tsType: measurementWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "measurement_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "measurement_concept_id": {
            "type": "number"
          },
          "measurement_date": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_time": {
            "type": "string"
          },
          "measurement_type_concept_id": {
            "type": "number"
          },
          "operator_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "range_low": {
            "type": "number"
          },
          "range_high": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "measurement_source_value": {
            "type": "string"
          },
          "measurement_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          },
          "value_source_value": {
            "type": "string"
          },
          "measurement_event_id": {
            "type": "number"
          },
          "meas_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "measurementWithRelations"
      },
      "measurement": {
        "title": "measurement",
        "type": "object",
        "properties": {
          "measurement_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "measurement_concept_id": {
            "type": "number"
          },
          "measurement_date": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_time": {
            "type": "string"
          },
          "measurement_type_concept_id": {
            "type": "number"
          },
          "operator_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "range_low": {
            "type": "number"
          },
          "range_high": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "measurement_source_value": {
            "type": "string"
          },
          "measurement_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          },
          "value_source_value": {
            "type": "string"
          },
          "measurement_event_id": {
            "type": "number"
          },
          "meas_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newmeasurement": {
        "title": "Newmeasurement",
        "type": "object",
        "description": "(tsType: Omit<measurement, >, schemaOptions: { title: 'Newmeasurement', exclude: [] })",
        "properties": {
          "measurement_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "measurement_concept_id": {
            "type": "number"
          },
          "measurement_date": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_time": {
            "type": "string"
          },
          "measurement_type_concept_id": {
            "type": "number"
          },
          "operator_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "range_low": {
            "type": "number"
          },
          "range_high": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "measurement_source_value": {
            "type": "string"
          },
          "measurement_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          },
          "value_source_value": {
            "type": "string"
          },
          "measurement_event_id": {
            "type": "number"
          },
          "meas_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<measurement, >"
      },
      "measurementPartial": {
        "title": "measurementPartial",
        "type": "object",
        "description": "(tsType: Partial<measurement>, schemaOptions: { partial: true })",
        "properties": {
          "measurement_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "measurement_concept_id": {
            "type": "number"
          },
          "measurement_date": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "measurement_time": {
            "type": "string"
          },
          "measurement_type_concept_id": {
            "type": "number"
          },
          "operator_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "range_low": {
            "type": "number"
          },
          "range_high": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "measurement_source_value": {
            "type": "string"
          },
          "measurement_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "unit_source_concept_id": {
            "type": "number"
          },
          "value_source_value": {
            "type": "string"
          },
          "measurement_event_id": {
            "type": "number"
          },
          "meas_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<measurement>"
      },
      "metadataWithRelations": {
        "title": "metadataWithRelations",
        "type": "object",
        "description": "(tsType: metadataWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "metadata_id": {
            "type": "number"
          },
          "metadata_concept_id": {
            "type": "number"
          },
          "metadata_type_concept_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "metadata_date": {
            "type": "string",
            "format": "date-time"
          },
          "metadata_datetime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "metadataWithRelations"
      },
      "metadata": {
        "title": "metadata",
        "type": "object",
        "properties": {
          "metadata_id": {
            "type": "number"
          },
          "metadata_concept_id": {
            "type": "number"
          },
          "metadata_type_concept_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "metadata_date": {
            "type": "string",
            "format": "date-time"
          },
          "metadata_datetime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Newmetadata": {
        "title": "Newmetadata",
        "type": "object",
        "description": "(tsType: Omit<metadata, >, schemaOptions: { title: 'Newmetadata', exclude: [] })",
        "properties": {
          "metadata_id": {
            "type": "number"
          },
          "metadata_concept_id": {
            "type": "number"
          },
          "metadata_type_concept_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "metadata_date": {
            "type": "string",
            "format": "date-time"
          },
          "metadata_datetime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<metadata, >"
      },
      "metadataPartial": {
        "title": "metadataPartial",
        "type": "object",
        "description": "(tsType: Partial<metadata>, schemaOptions: { partial: true })",
        "properties": {
          "metadata_id": {
            "type": "number"
          },
          "metadata_concept_id": {
            "type": "number"
          },
          "metadata_type_concept_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "metadata_date": {
            "type": "string",
            "format": "date-time"
          },
          "metadata_datetime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<metadata>"
      },
      "noteWithRelations": {
        "title": "noteWithRelations",
        "type": "object",
        "description": "(tsType: noteWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "note_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "note_date": {
            "type": "string",
            "format": "date-time"
          },
          "note_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "note_type_concept_id": {
            "type": "number"
          },
          "note_class_concept_id": {
            "type": "number"
          },
          "note_title": {
            "type": "string"
          },
          "note_text": {
            "type": "string"
          },
          "encoding_concept_id": {
            "type": "number"
          },
          "language_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "note_source_value": {
            "type": "string"
          },
          "note_event_id": {
            "type": "number"
          },
          "note_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "noteWithRelations"
      },
      "note": {
        "title": "note",
        "type": "object",
        "properties": {
          "note_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "note_date": {
            "type": "string",
            "format": "date-time"
          },
          "note_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "note_type_concept_id": {
            "type": "number"
          },
          "note_class_concept_id": {
            "type": "number"
          },
          "note_title": {
            "type": "string"
          },
          "note_text": {
            "type": "string"
          },
          "encoding_concept_id": {
            "type": "number"
          },
          "language_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "note_source_value": {
            "type": "string"
          },
          "note_event_id": {
            "type": "number"
          },
          "note_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newnote": {
        "title": "Newnote",
        "type": "object",
        "description": "(tsType: Omit<note, >, schemaOptions: { title: 'Newnote', exclude: [] })",
        "properties": {
          "note_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "note_date": {
            "type": "string",
            "format": "date-time"
          },
          "note_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "note_type_concept_id": {
            "type": "number"
          },
          "note_class_concept_id": {
            "type": "number"
          },
          "note_title": {
            "type": "string"
          },
          "note_text": {
            "type": "string"
          },
          "encoding_concept_id": {
            "type": "number"
          },
          "language_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "note_source_value": {
            "type": "string"
          },
          "note_event_id": {
            "type": "number"
          },
          "note_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<note, >"
      },
      "notePartial": {
        "title": "notePartial",
        "type": "object",
        "description": "(tsType: Partial<note>, schemaOptions: { partial: true })",
        "properties": {
          "note_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "note_date": {
            "type": "string",
            "format": "date-time"
          },
          "note_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "note_type_concept_id": {
            "type": "number"
          },
          "note_class_concept_id": {
            "type": "number"
          },
          "note_title": {
            "type": "string"
          },
          "note_text": {
            "type": "string"
          },
          "encoding_concept_id": {
            "type": "number"
          },
          "language_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "note_source_value": {
            "type": "string"
          },
          "note_event_id": {
            "type": "number"
          },
          "note_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<note>"
      },
      "note_nlpWithRelations": {
        "title": "note_nlpWithRelations",
        "type": "object",
        "description": "(tsType: note_nlpWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "note_nlp_id": {
            "type": "number"
          },
          "note_id": {
            "type": "number"
          },
          "section_concept_id": {
            "type": "number"
          },
          "snippet": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "lexical_variant": {
            "type": "string"
          },
          "note_nlp_concept_id": {
            "type": "number"
          },
          "note_nlp_source_concept_id": {
            "type": "number"
          },
          "nlp_system": {
            "type": "string"
          },
          "nlp_date": {
            "type": "string",
            "format": "date-time"
          },
          "nlp_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "term_exists": {
            "type": "string"
          },
          "term_temporal": {
            "type": "string"
          },
          "term_modifiers": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "note_nlpWithRelations"
      },
      "note_nlp": {
        "title": "note_nlp",
        "type": "object",
        "properties": {
          "note_nlp_id": {
            "type": "number"
          },
          "note_id": {
            "type": "number"
          },
          "section_concept_id": {
            "type": "number"
          },
          "snippet": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "lexical_variant": {
            "type": "string"
          },
          "note_nlp_concept_id": {
            "type": "number"
          },
          "note_nlp_source_concept_id": {
            "type": "number"
          },
          "nlp_system": {
            "type": "string"
          },
          "nlp_date": {
            "type": "string",
            "format": "date-time"
          },
          "nlp_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "term_exists": {
            "type": "string"
          },
          "term_temporal": {
            "type": "string"
          },
          "term_modifiers": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newnote_nlp": {
        "title": "Newnote_nlp",
        "type": "object",
        "description": "(tsType: Omit<note_nlp, >, schemaOptions: { title: 'Newnote_nlp', exclude: [] })",
        "properties": {
          "note_nlp_id": {
            "type": "number"
          },
          "note_id": {
            "type": "number"
          },
          "section_concept_id": {
            "type": "number"
          },
          "snippet": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "lexical_variant": {
            "type": "string"
          },
          "note_nlp_concept_id": {
            "type": "number"
          },
          "note_nlp_source_concept_id": {
            "type": "number"
          },
          "nlp_system": {
            "type": "string"
          },
          "nlp_date": {
            "type": "string",
            "format": "date-time"
          },
          "nlp_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "term_exists": {
            "type": "string"
          },
          "term_temporal": {
            "type": "string"
          },
          "term_modifiers": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<note_nlp, >"
      },
      "note_nlpPartial": {
        "title": "note_nlpPartial",
        "type": "object",
        "description": "(tsType: Partial<note_nlp>, schemaOptions: { partial: true })",
        "properties": {
          "note_nlp_id": {
            "type": "number"
          },
          "note_id": {
            "type": "number"
          },
          "section_concept_id": {
            "type": "number"
          },
          "snippet": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "lexical_variant": {
            "type": "string"
          },
          "note_nlp_concept_id": {
            "type": "number"
          },
          "note_nlp_source_concept_id": {
            "type": "number"
          },
          "nlp_system": {
            "type": "string"
          },
          "nlp_date": {
            "type": "string",
            "format": "date-time"
          },
          "nlp_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "term_exists": {
            "type": "string"
          },
          "term_temporal": {
            "type": "string"
          },
          "term_modifiers": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<note_nlp>"
      },
      "observationWithRelations": {
        "title": "observationWithRelations",
        "type": "object",
        "description": "(tsType: observationWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "observation_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_concept_id": {
            "type": "number"
          },
          "observation_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "observation_type_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "qualifier_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "observation_source_value": {
            "type": "string"
          },
          "observation_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "qualifier_source_value": {
            "type": "string"
          },
          "value_source_value": {
            "type": "string"
          },
          "observation_event_id": {
            "type": "number"
          },
          "obs_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "observationWithRelations"
      },
      "observation": {
        "title": "observation",
        "type": "object",
        "properties": {
          "observation_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_concept_id": {
            "type": "number"
          },
          "observation_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "observation_type_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "qualifier_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "observation_source_value": {
            "type": "string"
          },
          "observation_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "qualifier_source_value": {
            "type": "string"
          },
          "value_source_value": {
            "type": "string"
          },
          "observation_event_id": {
            "type": "number"
          },
          "obs_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newobservation": {
        "title": "Newobservation",
        "type": "object",
        "description": "(tsType: Omit<observation, >, schemaOptions: { title: 'Newobservation', exclude: [] })",
        "properties": {
          "observation_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_concept_id": {
            "type": "number"
          },
          "observation_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "observation_type_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "qualifier_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "observation_source_value": {
            "type": "string"
          },
          "observation_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "qualifier_source_value": {
            "type": "string"
          },
          "value_source_value": {
            "type": "string"
          },
          "observation_event_id": {
            "type": "number"
          },
          "obs_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<observation, >"
      },
      "observationPartial": {
        "title": "observationPartial",
        "type": "object",
        "description": "(tsType: Partial<observation>, schemaOptions: { partial: true })",
        "properties": {
          "observation_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_concept_id": {
            "type": "number"
          },
          "observation_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "observation_type_concept_id": {
            "type": "number"
          },
          "value_as_number": {
            "type": "number"
          },
          "value_as_string": {
            "type": "string"
          },
          "value_as_concept_id": {
            "type": "number"
          },
          "qualifier_concept_id": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "observation_source_value": {
            "type": "string"
          },
          "observation_source_concept_id": {
            "type": "number"
          },
          "unit_source_value": {
            "type": "string"
          },
          "qualifier_source_value": {
            "type": "string"
          },
          "value_source_value": {
            "type": "string"
          },
          "observation_event_id": {
            "type": "number"
          },
          "obs_event_field_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<observation>"
      },
      "observation_periodWithRelations": {
        "title": "observation_periodWithRelations",
        "type": "object",
        "description": "(tsType: observation_periodWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "observation_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "period_type_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "observation_periodWithRelations"
      },
      "observation_period": {
        "title": "observation_period",
        "type": "object",
        "properties": {
          "observation_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "period_type_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newobservation_period": {
        "title": "Newobservation_period",
        "type": "object",
        "description": "(tsType: Omit<observation_period, >, schemaOptions: { title: 'Newobservation_period', exclude: [] })",
        "properties": {
          "observation_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "period_type_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<observation_period, >"
      },
      "observation_periodPartial": {
        "title": "observation_periodPartial",
        "type": "object",
        "description": "(tsType: Partial<observation_period>, schemaOptions: { partial: true })",
        "properties": {
          "observation_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "observation_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "observation_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "period_type_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<observation_period>"
      },
      "payer_plan_periodWithRelations": {
        "title": "payer_plan_periodWithRelations",
        "type": "object",
        "description": "(tsType: payer_plan_periodWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "payer_plan_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "payer_plan_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_plan_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_concept_id": {
            "type": "number"
          },
          "payer_source_value": {
            "type": "string"
          },
          "payer_source_concept_id": {
            "type": "number"
          },
          "plan_concept_id": {
            "type": "number"
          },
          "plan_source_value": {
            "type": "string"
          },
          "plan_source_concept_id": {
            "type": "number"
          },
          "sponsor_concept_id": {
            "type": "number"
          },
          "sponsor_source_value": {
            "type": "string"
          },
          "sponsor_source_concept_id": {
            "type": "number"
          },
          "family_source_value": {
            "type": "string"
          },
          "stop_reason_concept_id": {
            "type": "number"
          },
          "stop_reason_source_value": {
            "type": "string"
          },
          "stop_reason_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "payer_plan_periodWithRelations"
      },
      "payer_plan_period": {
        "title": "payer_plan_period",
        "type": "object",
        "properties": {
          "payer_plan_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "payer_plan_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_plan_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_concept_id": {
            "type": "number"
          },
          "payer_source_value": {
            "type": "string"
          },
          "payer_source_concept_id": {
            "type": "number"
          },
          "plan_concept_id": {
            "type": "number"
          },
          "plan_source_value": {
            "type": "string"
          },
          "plan_source_concept_id": {
            "type": "number"
          },
          "sponsor_concept_id": {
            "type": "number"
          },
          "sponsor_source_value": {
            "type": "string"
          },
          "sponsor_source_concept_id": {
            "type": "number"
          },
          "family_source_value": {
            "type": "string"
          },
          "stop_reason_concept_id": {
            "type": "number"
          },
          "stop_reason_source_value": {
            "type": "string"
          },
          "stop_reason_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newpayer_plan_period": {
        "title": "Newpayer_plan_period",
        "type": "object",
        "description": "(tsType: Omit<payer_plan_period, >, schemaOptions: { title: 'Newpayer_plan_period', exclude: [] })",
        "properties": {
          "payer_plan_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "payer_plan_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_plan_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_concept_id": {
            "type": "number"
          },
          "payer_source_value": {
            "type": "string"
          },
          "payer_source_concept_id": {
            "type": "number"
          },
          "plan_concept_id": {
            "type": "number"
          },
          "plan_source_value": {
            "type": "string"
          },
          "plan_source_concept_id": {
            "type": "number"
          },
          "sponsor_concept_id": {
            "type": "number"
          },
          "sponsor_source_value": {
            "type": "string"
          },
          "sponsor_source_concept_id": {
            "type": "number"
          },
          "family_source_value": {
            "type": "string"
          },
          "stop_reason_concept_id": {
            "type": "number"
          },
          "stop_reason_source_value": {
            "type": "string"
          },
          "stop_reason_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<payer_plan_period, >"
      },
      "payer_plan_periodPartial": {
        "title": "payer_plan_periodPartial",
        "type": "object",
        "description": "(tsType: Partial<payer_plan_period>, schemaOptions: { partial: true })",
        "properties": {
          "payer_plan_period_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "payer_plan_period_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_plan_period_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "payer_concept_id": {
            "type": "number"
          },
          "payer_source_value": {
            "type": "string"
          },
          "payer_source_concept_id": {
            "type": "number"
          },
          "plan_concept_id": {
            "type": "number"
          },
          "plan_source_value": {
            "type": "string"
          },
          "plan_source_concept_id": {
            "type": "number"
          },
          "sponsor_concept_id": {
            "type": "number"
          },
          "sponsor_source_value": {
            "type": "string"
          },
          "sponsor_source_concept_id": {
            "type": "number"
          },
          "family_source_value": {
            "type": "string"
          },
          "stop_reason_concept_id": {
            "type": "number"
          },
          "stop_reason_source_value": {
            "type": "string"
          },
          "stop_reason_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<payer_plan_period>"
      },
      "personWithRelations": {
        "title": "personWithRelations",
        "type": "object",
        "description": "(tsType: personWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "month_of_birth": {
            "type": "number"
          },
          "day_of_birth": {
            "type": "number"
          },
          "birth_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "race_concept_id": {
            "type": "number"
          },
          "ethnicity_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "person_source_value": {
            "type": "string"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          },
          "race_source_value": {
            "type": "string"
          },
          "race_source_concept_id": {
            "type": "number"
          },
          "ethnicity_source_value": {
            "type": "string"
          },
          "ethnicity_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "personWithRelations"
      },
      "person": {
        "title": "person",
        "type": "object",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "month_of_birth": {
            "type": "number"
          },
          "day_of_birth": {
            "type": "number"
          },
          "birth_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "race_concept_id": {
            "type": "number"
          },
          "ethnicity_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "person_source_value": {
            "type": "string"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          },
          "race_source_value": {
            "type": "string"
          },
          "race_source_concept_id": {
            "type": "number"
          },
          "ethnicity_source_value": {
            "type": "string"
          },
          "ethnicity_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newperson": {
        "title": "Newperson",
        "type": "object",
        "description": "(tsType: Omit<person, >, schemaOptions: { title: 'Newperson', exclude: [] })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "month_of_birth": {
            "type": "number"
          },
          "day_of_birth": {
            "type": "number"
          },
          "birth_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "race_concept_id": {
            "type": "number"
          },
          "ethnicity_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "person_source_value": {
            "type": "string"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          },
          "race_source_value": {
            "type": "string"
          },
          "race_source_concept_id": {
            "type": "number"
          },
          "ethnicity_source_value": {
            "type": "string"
          },
          "ethnicity_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<person, >"
      },
      "personPartial": {
        "title": "personPartial",
        "type": "object",
        "description": "(tsType: Partial<person>, schemaOptions: { partial: true })",
        "properties": {
          "person_id": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "month_of_birth": {
            "type": "number"
          },
          "day_of_birth": {
            "type": "number"
          },
          "birth_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "race_concept_id": {
            "type": "number"
          },
          "ethnicity_concept_id": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "person_source_value": {
            "type": "string"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          },
          "race_source_value": {
            "type": "string"
          },
          "race_source_concept_id": {
            "type": "number"
          },
          "ethnicity_source_value": {
            "type": "string"
          },
          "ethnicity_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<person>"
      },
      "procedure_occurrenceWithRelations": {
        "title": "procedure_occurrenceWithRelations",
        "type": "object",
        "description": "(tsType: procedure_occurrenceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "procedure_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "procedure_concept_id": {
            "type": "number"
          },
          "procedure_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_type_concept_id": {
            "type": "number"
          },
          "modifier_concept_id": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "procedure_source_value": {
            "type": "string"
          },
          "procedure_source_concept_id": {
            "type": "number"
          },
          "modifier_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "procedure_occurrenceWithRelations"
      },
      "procedure_occurrence": {
        "title": "procedure_occurrence",
        "type": "object",
        "properties": {
          "procedure_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "procedure_concept_id": {
            "type": "number"
          },
          "procedure_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_type_concept_id": {
            "type": "number"
          },
          "modifier_concept_id": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "procedure_source_value": {
            "type": "string"
          },
          "procedure_source_concept_id": {
            "type": "number"
          },
          "modifier_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newprocedure_occurrence": {
        "title": "Newprocedure_occurrence",
        "type": "object",
        "description": "(tsType: Omit<procedure_occurrence, >, schemaOptions: { title: 'Newprocedure_occurrence', exclude: [] })",
        "properties": {
          "procedure_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "procedure_concept_id": {
            "type": "number"
          },
          "procedure_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_type_concept_id": {
            "type": "number"
          },
          "modifier_concept_id": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "procedure_source_value": {
            "type": "string"
          },
          "procedure_source_concept_id": {
            "type": "number"
          },
          "modifier_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<procedure_occurrence, >"
      },
      "procedure_occurrencePartial": {
        "title": "procedure_occurrencePartial",
        "type": "object",
        "description": "(tsType: Partial<procedure_occurrence>, schemaOptions: { partial: true })",
        "properties": {
          "procedure_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "procedure_concept_id": {
            "type": "number"
          },
          "procedure_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "procedure_type_concept_id": {
            "type": "number"
          },
          "modifier_concept_id": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          },
          "visit_detail_id": {
            "type": "number"
          },
          "procedure_source_value": {
            "type": "string"
          },
          "procedure_source_concept_id": {
            "type": "number"
          },
          "modifier_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<procedure_occurrence>"
      },
      "providerWithRelations": {
        "title": "providerWithRelations",
        "type": "object",
        "description": "(tsType: providerWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "provider_id": {
            "type": "number"
          },
          "provider_name": {
            "type": "string"
          },
          "npi": {
            "type": "string"
          },
          "dea": {
            "type": "string"
          },
          "specialty_concept_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "provider_source_value": {
            "type": "string"
          },
          "specialty_source_value": {
            "type": "string"
          },
          "specialty_source_concept_id": {
            "type": "number"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "providerWithRelations"
      },
      "provider": {
        "title": "provider",
        "type": "object",
        "properties": {
          "provider_id": {
            "type": "number"
          },
          "provider_name": {
            "type": "string"
          },
          "npi": {
            "type": "string"
          },
          "dea": {
            "type": "string"
          },
          "specialty_concept_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "provider_source_value": {
            "type": "string"
          },
          "specialty_source_value": {
            "type": "string"
          },
          "specialty_source_concept_id": {
            "type": "number"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newprovider": {
        "title": "Newprovider",
        "type": "object",
        "description": "(tsType: Omit<provider, >, schemaOptions: { title: 'Newprovider', exclude: [] })",
        "properties": {
          "provider_id": {
            "type": "number"
          },
          "provider_name": {
            "type": "string"
          },
          "npi": {
            "type": "string"
          },
          "dea": {
            "type": "string"
          },
          "specialty_concept_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "provider_source_value": {
            "type": "string"
          },
          "specialty_source_value": {
            "type": "string"
          },
          "specialty_source_concept_id": {
            "type": "number"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<provider, >"
      },
      "providerPartial": {
        "title": "providerPartial",
        "type": "object",
        "description": "(tsType: Partial<provider>, schemaOptions: { partial: true })",
        "properties": {
          "provider_id": {
            "type": "number"
          },
          "provider_name": {
            "type": "string"
          },
          "npi": {
            "type": "string"
          },
          "dea": {
            "type": "string"
          },
          "specialty_concept_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "year_of_birth": {
            "type": "number"
          },
          "gender_concept_id": {
            "type": "number"
          },
          "provider_source_value": {
            "type": "string"
          },
          "specialty_source_value": {
            "type": "string"
          },
          "specialty_source_concept_id": {
            "type": "number"
          },
          "gender_source_value": {
            "type": "string"
          },
          "gender_source_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<provider>"
      },
      "relationshipWithRelations": {
        "title": "relationshipWithRelations",
        "type": "object",
        "description": "(tsType: relationshipWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "relationship_id": {
            "type": "string"
          },
          "relationship_name": {
            "type": "string"
          },
          "is_hierarchical": {
            "type": "string"
          },
          "defines_ancestry": {
            "type": "string"
          },
          "reverse_relationship_id": {
            "type": "string"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "relationshipWithRelations"
      },
      "relationship": {
        "title": "relationship",
        "type": "object",
        "properties": {
          "relationship_id": {
            "type": "string"
          },
          "relationship_name": {
            "type": "string"
          },
          "is_hierarchical": {
            "type": "string"
          },
          "defines_ancestry": {
            "type": "string"
          },
          "reverse_relationship_id": {
            "type": "string"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newrelationship": {
        "title": "Newrelationship",
        "type": "object",
        "description": "(tsType: Omit<relationship, >, schemaOptions: { title: 'Newrelationship', exclude: [] })",
        "properties": {
          "relationship_id": {
            "type": "string"
          },
          "relationship_name": {
            "type": "string"
          },
          "is_hierarchical": {
            "type": "string"
          },
          "defines_ancestry": {
            "type": "string"
          },
          "reverse_relationship_id": {
            "type": "string"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<relationship, >"
      },
      "relationshipPartial": {
        "title": "relationshipPartial",
        "type": "object",
        "description": "(tsType: Partial<relationship>, schemaOptions: { partial: true })",
        "properties": {
          "relationship_id": {
            "type": "string"
          },
          "relationship_name": {
            "type": "string"
          },
          "is_hierarchical": {
            "type": "string"
          },
          "defines_ancestry": {
            "type": "string"
          },
          "reverse_relationship_id": {
            "type": "string"
          },
          "relationship_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<relationship>"
      },
      "source_to_concept_mapWithRelations": {
        "title": "source_to_concept_mapWithRelations",
        "type": "object",
        "description": "(tsType: source_to_concept_mapWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "source_code": {
            "type": "string"
          },
          "source_concept_id": {
            "type": "number"
          },
          "source_vocabulary_id": {
            "type": "string"
          },
          "source_code_description": {
            "type": "string"
          },
          "target_concept_id": {
            "type": "number"
          },
          "target_vocabulary_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "source_to_concept_mapWithRelations"
      },
      "source_to_concept_map": {
        "title": "source_to_concept_map",
        "type": "object",
        "properties": {
          "source_code": {
            "type": "string"
          },
          "source_concept_id": {
            "type": "number"
          },
          "source_vocabulary_id": {
            "type": "string"
          },
          "source_code_description": {
            "type": "string"
          },
          "target_concept_id": {
            "type": "number"
          },
          "target_vocabulary_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newsource_to_concept_map": {
        "title": "Newsource_to_concept_map",
        "type": "object",
        "description": "(tsType: Omit<source_to_concept_map, >, schemaOptions: { title: 'Newsource_to_concept_map', exclude: [] })",
        "properties": {
          "source_code": {
            "type": "string"
          },
          "source_concept_id": {
            "type": "number"
          },
          "source_vocabulary_id": {
            "type": "string"
          },
          "source_code_description": {
            "type": "string"
          },
          "target_concept_id": {
            "type": "number"
          },
          "target_vocabulary_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<source_to_concept_map, >"
      },
      "source_to_concept_mapPartial": {
        "title": "source_to_concept_mapPartial",
        "type": "object",
        "description": "(tsType: Partial<source_to_concept_map>, schemaOptions: { partial: true })",
        "properties": {
          "source_code": {
            "type": "string"
          },
          "source_concept_id": {
            "type": "number"
          },
          "source_vocabulary_id": {
            "type": "string"
          },
          "source_code_description": {
            "type": "string"
          },
          "target_concept_id": {
            "type": "number"
          },
          "target_vocabulary_id": {
            "type": "string"
          },
          "valid_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "invalid_reason": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<source_to_concept_map>"
      },
      "specimenWithRelations": {
        "title": "specimenWithRelations",
        "type": "object",
        "description": "(tsType: specimenWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "specimen_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "specimen_concept_id": {
            "type": "number"
          },
          "specimen_type_concept_id": {
            "type": "number"
          },
          "specimen_date": {
            "type": "string",
            "format": "date-time"
          },
          "specimen_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "anatomic_site_concept_id": {
            "type": "number"
          },
          "disease_status_concept_id": {
            "type": "number"
          },
          "specimen_source_id": {
            "type": "string"
          },
          "specimen_source_value": {
            "type": "string"
          },
          "unit_source_value": {
            "type": "string"
          },
          "anatomic_site_source_value": {
            "type": "string"
          },
          "disease_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "specimenWithRelations"
      },
      "specimen": {
        "title": "specimen",
        "type": "object",
        "properties": {
          "specimen_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "specimen_concept_id": {
            "type": "number"
          },
          "specimen_type_concept_id": {
            "type": "number"
          },
          "specimen_date": {
            "type": "string",
            "format": "date-time"
          },
          "specimen_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "anatomic_site_concept_id": {
            "type": "number"
          },
          "disease_status_concept_id": {
            "type": "number"
          },
          "specimen_source_id": {
            "type": "string"
          },
          "specimen_source_value": {
            "type": "string"
          },
          "unit_source_value": {
            "type": "string"
          },
          "anatomic_site_source_value": {
            "type": "string"
          },
          "disease_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Newspecimen": {
        "title": "Newspecimen",
        "type": "object",
        "description": "(tsType: Omit<specimen, >, schemaOptions: { title: 'Newspecimen', exclude: [] })",
        "properties": {
          "specimen_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "specimen_concept_id": {
            "type": "number"
          },
          "specimen_type_concept_id": {
            "type": "number"
          },
          "specimen_date": {
            "type": "string",
            "format": "date-time"
          },
          "specimen_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "anatomic_site_concept_id": {
            "type": "number"
          },
          "disease_status_concept_id": {
            "type": "number"
          },
          "specimen_source_id": {
            "type": "string"
          },
          "specimen_source_value": {
            "type": "string"
          },
          "unit_source_value": {
            "type": "string"
          },
          "anatomic_site_source_value": {
            "type": "string"
          },
          "disease_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<specimen, >"
      },
      "specimenPartial": {
        "title": "specimenPartial",
        "type": "object",
        "description": "(tsType: Partial<specimen>, schemaOptions: { partial: true })",
        "properties": {
          "specimen_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "specimen_concept_id": {
            "type": "number"
          },
          "specimen_type_concept_id": {
            "type": "number"
          },
          "specimen_date": {
            "type": "string",
            "format": "date-time"
          },
          "specimen_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "number"
          },
          "unit_concept_id": {
            "type": "number"
          },
          "anatomic_site_concept_id": {
            "type": "number"
          },
          "disease_status_concept_id": {
            "type": "number"
          },
          "specimen_source_id": {
            "type": "string"
          },
          "specimen_source_value": {
            "type": "string"
          },
          "unit_source_value": {
            "type": "string"
          },
          "anatomic_site_source_value": {
            "type": "string"
          },
          "disease_status_source_value": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<specimen>"
      },
      "tripsWithRelations": {
        "title": "tripsWithRelations",
        "type": "object",
        "description": "(tsType: tripsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "tpep_pickup_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "tpep_dropoff_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "trip_distance": {
            "type": "number"
          },
          "fare_amount": {
            "type": "number"
          },
          "pickup_zip": {
            "type": "number"
          },
          "dropoff_zip": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "tripsWithRelations"
      },
      "trips": {
        "title": "trips",
        "type": "object",
        "properties": {
          "tpep_pickup_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "tpep_dropoff_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "trip_distance": {
            "type": "number"
          },
          "fare_amount": {
            "type": "number"
          },
          "pickup_zip": {
            "type": "number"
          },
          "dropoff_zip": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newtrips": {
        "title": "Newtrips",
        "type": "object",
        "description": "(tsType: Omit<trips, >, schemaOptions: { title: 'Newtrips', exclude: [] })",
        "properties": {
          "tpep_pickup_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "tpep_dropoff_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "trip_distance": {
            "type": "number"
          },
          "fare_amount": {
            "type": "number"
          },
          "pickup_zip": {
            "type": "number"
          },
          "dropoff_zip": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<trips, >"
      },
      "tripsPartial": {
        "title": "tripsPartial",
        "type": "object",
        "description": "(tsType: Partial<trips>, schemaOptions: { partial: true })",
        "properties": {
          "tpep_pickup_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "tpep_dropoff_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "trip_distance": {
            "type": "number"
          },
          "fare_amount": {
            "type": "number"
          },
          "pickup_zip": {
            "type": "number"
          },
          "dropoff_zip": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<trips>"
      },
      "visit_detailWithRelations": {
        "title": "visit_detailWithRelations",
        "type": "object",
        "description": "(tsType: visit_detailWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "visit_detail_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_detail_concept_id": {
            "type": "number"
          },
          "visit_detail_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_detail_source_value": {
            "type": "string"
          },
          "visit_detail_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "preceding_visit_detail_id": {
            "type": "number"
          },
          "parent_visit_detail_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "visit_detailWithRelations"
      },
      "visit_detail": {
        "title": "visit_detail",
        "type": "object",
        "properties": {
          "visit_detail_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_detail_concept_id": {
            "type": "number"
          },
          "visit_detail_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_detail_source_value": {
            "type": "string"
          },
          "visit_detail_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "preceding_visit_detail_id": {
            "type": "number"
          },
          "parent_visit_detail_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newvisit_detail": {
        "title": "Newvisit_detail",
        "type": "object",
        "description": "(tsType: Omit<visit_detail, >, schemaOptions: { title: 'Newvisit_detail', exclude: [] })",
        "properties": {
          "visit_detail_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_detail_concept_id": {
            "type": "number"
          },
          "visit_detail_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_detail_source_value": {
            "type": "string"
          },
          "visit_detail_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "preceding_visit_detail_id": {
            "type": "number"
          },
          "parent_visit_detail_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<visit_detail, >"
      },
      "visit_detailPartial": {
        "title": "visit_detailPartial",
        "type": "object",
        "description": "(tsType: Partial<visit_detail>, schemaOptions: { partial: true })",
        "properties": {
          "visit_detail_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_detail_concept_id": {
            "type": "number"
          },
          "visit_detail_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_detail_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_detail_source_value": {
            "type": "string"
          },
          "visit_detail_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "preceding_visit_detail_id": {
            "type": "number"
          },
          "parent_visit_detail_id": {
            "type": "number"
          },
          "visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<visit_detail>"
      },
      "visit_occurrenceWithRelations": {
        "title": "visit_occurrenceWithRelations",
        "type": "object",
        "description": "(tsType: visit_occurrenceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "visit_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_concept_id": {
            "type": "number"
          },
          "visit_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_source_value": {
            "type": "string"
          },
          "visit_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "preceding_visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "visit_occurrenceWithRelations"
      },
      "visit_occurrence": {
        "title": "visit_occurrence",
        "type": "object",
        "properties": {
          "visit_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_concept_id": {
            "type": "number"
          },
          "visit_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_source_value": {
            "type": "string"
          },
          "visit_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "preceding_visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newvisit_occurrence": {
        "title": "Newvisit_occurrence",
        "type": "object",
        "description": "(tsType: Omit<visit_occurrence, >, schemaOptions: { title: 'Newvisit_occurrence', exclude: [] })",
        "properties": {
          "visit_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_concept_id": {
            "type": "number"
          },
          "visit_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_source_value": {
            "type": "string"
          },
          "visit_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "preceding_visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<visit_occurrence, >"
      },
      "visit_occurrencePartial": {
        "title": "visit_occurrencePartial",
        "type": "object",
        "description": "(tsType: Partial<visit_occurrence>, schemaOptions: { partial: true })",
        "properties": {
          "visit_occurrence_id": {
            "type": "number"
          },
          "person_id": {
            "type": "number"
          },
          "visit_concept_id": {
            "type": "number"
          },
          "visit_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "visit_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "visit_type_concept_id": {
            "type": "number"
          },
          "provider_id": {
            "type": "number"
          },
          "care_site_id": {
            "type": "number"
          },
          "visit_source_value": {
            "type": "string"
          },
          "visit_source_concept_id": {
            "type": "number"
          },
          "admitted_from_concept_id": {
            "type": "number"
          },
          "admitted_from_source_value": {
            "type": "string"
          },
          "discharged_to_concept_id": {
            "type": "number"
          },
          "discharged_to_source_value": {
            "type": "string"
          },
          "preceding_visit_occurrence_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<visit_occurrence>"
      },
      "vocabularyWithRelations": {
        "title": "vocabularyWithRelations",
        "type": "object",
        "description": "(tsType: vocabularyWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "vocabulary_id": {
            "type": "string"
          },
          "vocabulary_name": {
            "type": "string"
          },
          "vocabulary_reference": {
            "type": "string"
          },
          "vocabulary_version": {
            "type": "string"
          },
          "vocabulary_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "vocabularyWithRelations"
      },
      "vocabulary": {
        "title": "vocabulary",
        "type": "object",
        "properties": {
          "vocabulary_id": {
            "type": "string"
          },
          "vocabulary_name": {
            "type": "string"
          },
          "vocabulary_reference": {
            "type": "string"
          },
          "vocabulary_version": {
            "type": "string"
          },
          "vocabulary_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "Newvocabulary": {
        "title": "Newvocabulary",
        "type": "object",
        "description": "(tsType: Omit<vocabulary, >, schemaOptions: { title: 'Newvocabulary', exclude: [] })",
        "properties": {
          "vocabulary_id": {
            "type": "string"
          },
          "vocabulary_name": {
            "type": "string"
          },
          "vocabulary_reference": {
            "type": "string"
          },
          "vocabulary_version": {
            "type": "string"
          },
          "vocabulary_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<vocabulary, >"
      },
      "vocabularyPartial": {
        "title": "vocabularyPartial",
        "type": "object",
        "description": "(tsType: Partial<vocabulary>, schemaOptions: { partial: true })",
        "properties": {
          "vocabulary_id": {
            "type": "string"
          },
          "vocabulary_name": {
            "type": "string"
          },
          "vocabulary_reference": {
            "type": "string"
          },
          "vocabulary_version": {
            "type": "string"
          },
          "vocabulary_concept_id": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<vocabulary>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "care_site.Filter": {
        "type": "object",
        "title": "care_site.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "care_site_name": {
                    "type": "boolean"
                  },
                  "place_of_service_concept_id": {
                    "type": "boolean"
                  },
                  "location_id": {
                    "type": "boolean"
                  },
                  "care_site_source_value": {
                    "type": "boolean"
                  },
                  "place_of_service_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "care_site_id",
                    "care_site_name",
                    "place_of_service_concept_id",
                    "location_id",
                    "care_site_source_value",
                    "place_of_service_source_value"
                  ],
                  "example": "care_site_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "care_site.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<care_site>"
      },
      "care_site.Filter1": {
        "type": "object",
        "title": "care_site.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "care_site.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "care_site_name": {
                    "type": "boolean"
                  },
                  "place_of_service_concept_id": {
                    "type": "boolean"
                  },
                  "location_id": {
                    "type": "boolean"
                  },
                  "care_site_source_value": {
                    "type": "boolean"
                  },
                  "place_of_service_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "care_site_id",
                    "care_site_name",
                    "place_of_service_concept_id",
                    "location_id",
                    "care_site_source_value",
                    "place_of_service_source_value"
                  ],
                  "example": "care_site_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "care_site.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<care_site>"
      },
      "cdm_source.Filter": {
        "type": "object",
        "title": "cdm_source.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cdm_source_name": {
                    "type": "boolean"
                  },
                  "cdm_source_abbreviation": {
                    "type": "boolean"
                  },
                  "cdm_holder": {
                    "type": "boolean"
                  },
                  "source_description": {
                    "type": "boolean"
                  },
                  "source_documentation_reference": {
                    "type": "boolean"
                  },
                  "cdm_etl_reference": {
                    "type": "boolean"
                  },
                  "source_release_date": {
                    "type": "boolean"
                  },
                  "cdm_release_date": {
                    "type": "boolean"
                  },
                  "cdm_version": {
                    "type": "boolean"
                  },
                  "cdm_version_concept_id": {
                    "type": "boolean"
                  },
                  "vocabulary_version": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cdm_source_name",
                    "cdm_source_abbreviation",
                    "cdm_holder",
                    "source_description",
                    "source_documentation_reference",
                    "cdm_etl_reference",
                    "source_release_date",
                    "cdm_release_date",
                    "cdm_version",
                    "cdm_version_concept_id",
                    "vocabulary_version"
                  ],
                  "example": "cdm_source_name"
                },
                "uniqueItems": true
              }
            ],
            "title": "cdm_source.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cdm_source>"
      },
      "cdm_source.Filter1": {
        "type": "object",
        "title": "cdm_source.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "cdm_source.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cdm_source_name": {
                    "type": "boolean"
                  },
                  "cdm_source_abbreviation": {
                    "type": "boolean"
                  },
                  "cdm_holder": {
                    "type": "boolean"
                  },
                  "source_description": {
                    "type": "boolean"
                  },
                  "source_documentation_reference": {
                    "type": "boolean"
                  },
                  "cdm_etl_reference": {
                    "type": "boolean"
                  },
                  "source_release_date": {
                    "type": "boolean"
                  },
                  "cdm_release_date": {
                    "type": "boolean"
                  },
                  "cdm_version": {
                    "type": "boolean"
                  },
                  "cdm_version_concept_id": {
                    "type": "boolean"
                  },
                  "vocabulary_version": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cdm_source_name",
                    "cdm_source_abbreviation",
                    "cdm_holder",
                    "source_description",
                    "source_documentation_reference",
                    "cdm_etl_reference",
                    "source_release_date",
                    "cdm_release_date",
                    "cdm_version",
                    "cdm_version_concept_id",
                    "vocabulary_version"
                  ],
                  "example": "cdm_source_name"
                },
                "uniqueItems": true
              }
            ],
            "title": "cdm_source.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cdm_source>"
      },
      "cohort.Filter": {
        "type": "object",
        "title": "cohort.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cohort_definition_id": {
                    "type": "boolean"
                  },
                  "subject_id": {
                    "type": "boolean"
                  },
                  "cohort_start_date": {
                    "type": "boolean"
                  },
                  "cohort_end_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cohort_definition_id",
                    "subject_id",
                    "cohort_start_date",
                    "cohort_end_date"
                  ],
                  "example": "cohort_definition_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cohort.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cohort>"
      },
      "cohort.Filter1": {
        "type": "object",
        "title": "cohort.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "cohort.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cohort_definition_id": {
                    "type": "boolean"
                  },
                  "subject_id": {
                    "type": "boolean"
                  },
                  "cohort_start_date": {
                    "type": "boolean"
                  },
                  "cohort_end_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cohort_definition_id",
                    "subject_id",
                    "cohort_start_date",
                    "cohort_end_date"
                  ],
                  "example": "cohort_definition_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cohort.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cohort>"
      },
      "cohort_definition.Filter": {
        "type": "object",
        "title": "cohort_definition.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cohort_definition_id": {
                    "type": "boolean"
                  },
                  "cohort_definition_name": {
                    "type": "boolean"
                  },
                  "cohort_definition_description": {
                    "type": "boolean"
                  },
                  "definition_type_concept_id": {
                    "type": "boolean"
                  },
                  "cohort_definition_syntax": {
                    "type": "boolean"
                  },
                  "subject_concept_id": {
                    "type": "boolean"
                  },
                  "cohort_initiation_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cohort_definition_id",
                    "cohort_definition_name",
                    "cohort_definition_description",
                    "definition_type_concept_id",
                    "cohort_definition_syntax",
                    "subject_concept_id",
                    "cohort_initiation_date"
                  ],
                  "example": "cohort_definition_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cohort_definition.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cohort_definition>"
      },
      "cohort_definition.Filter1": {
        "type": "object",
        "title": "cohort_definition.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "cohort_definition.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cohort_definition_id": {
                    "type": "boolean"
                  },
                  "cohort_definition_name": {
                    "type": "boolean"
                  },
                  "cohort_definition_description": {
                    "type": "boolean"
                  },
                  "definition_type_concept_id": {
                    "type": "boolean"
                  },
                  "cohort_definition_syntax": {
                    "type": "boolean"
                  },
                  "subject_concept_id": {
                    "type": "boolean"
                  },
                  "cohort_initiation_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cohort_definition_id",
                    "cohort_definition_name",
                    "cohort_definition_description",
                    "definition_type_concept_id",
                    "cohort_definition_syntax",
                    "subject_concept_id",
                    "cohort_initiation_date"
                  ],
                  "example": "cohort_definition_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cohort_definition.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cohort_definition>"
      },
      "concept.Filter": {
        "type": "object",
        "title": "concept.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id": {
                    "type": "boolean"
                  },
                  "concept_name": {
                    "type": "boolean"
                  },
                  "domain_id": {
                    "type": "boolean"
                  },
                  "vocabulary_id": {
                    "type": "boolean"
                  },
                  "concept_class_id": {
                    "type": "boolean"
                  },
                  "standard_concept": {
                    "type": "boolean"
                  },
                  "concept_code": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id",
                    "concept_name",
                    "domain_id",
                    "vocabulary_id",
                    "concept_class_id",
                    "standard_concept",
                    "concept_code",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept>"
      },
      "concept.Filter1": {
        "type": "object",
        "title": "concept.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "concept.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id": {
                    "type": "boolean"
                  },
                  "concept_name": {
                    "type": "boolean"
                  },
                  "domain_id": {
                    "type": "boolean"
                  },
                  "vocabulary_id": {
                    "type": "boolean"
                  },
                  "concept_class_id": {
                    "type": "boolean"
                  },
                  "standard_concept": {
                    "type": "boolean"
                  },
                  "concept_code": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id",
                    "concept_name",
                    "domain_id",
                    "vocabulary_id",
                    "concept_class_id",
                    "standard_concept",
                    "concept_code",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept>"
      },
      "concept_ancestor.Filter": {
        "type": "object",
        "title": "concept_ancestor.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "ancestor_concept_id": {
                    "type": "boolean"
                  },
                  "descendant_concept_id": {
                    "type": "boolean"
                  },
                  "min_levels_of_separation": {
                    "type": "boolean"
                  },
                  "max_levels_of_separation": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ancestor_concept_id",
                    "descendant_concept_id",
                    "min_levels_of_separation",
                    "max_levels_of_separation"
                  ],
                  "example": "ancestor_concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_ancestor.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_ancestor>"
      },
      "concept_ancestor.Filter1": {
        "type": "object",
        "title": "concept_ancestor.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "concept_ancestor.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "ancestor_concept_id": {
                    "type": "boolean"
                  },
                  "descendant_concept_id": {
                    "type": "boolean"
                  },
                  "min_levels_of_separation": {
                    "type": "boolean"
                  },
                  "max_levels_of_separation": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ancestor_concept_id",
                    "descendant_concept_id",
                    "min_levels_of_separation",
                    "max_levels_of_separation"
                  ],
                  "example": "ancestor_concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_ancestor.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_ancestor>"
      },
      "concept_class.Filter": {
        "type": "object",
        "title": "concept_class.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_class_id": {
                    "type": "boolean"
                  },
                  "concept_class_name": {
                    "type": "boolean"
                  },
                  "concept_class_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_class_id",
                    "concept_class_name",
                    "concept_class_concept_id"
                  ],
                  "example": "concept_class_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_class.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_class>"
      },
      "concept_class.Filter1": {
        "type": "object",
        "title": "concept_class.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "concept_class.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_class_id": {
                    "type": "boolean"
                  },
                  "concept_class_name": {
                    "type": "boolean"
                  },
                  "concept_class_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_class_id",
                    "concept_class_name",
                    "concept_class_concept_id"
                  ],
                  "example": "concept_class_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_class.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_class>"
      },
      "concept_relationship.Filter": {
        "type": "object",
        "title": "concept_relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id_1": {
                    "type": "boolean"
                  },
                  "concept_id_2": {
                    "type": "boolean"
                  },
                  "relationship_id": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id_1",
                    "concept_id_2",
                    "relationship_id",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "concept_id_1"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_relationship>"
      },
      "concept_relationship.Filter1": {
        "type": "object",
        "title": "concept_relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "concept_relationship.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id_1": {
                    "type": "boolean"
                  },
                  "concept_id_2": {
                    "type": "boolean"
                  },
                  "relationship_id": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id_1",
                    "concept_id_2",
                    "relationship_id",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "concept_id_1"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_relationship>"
      },
      "concept_synonym.Filter": {
        "type": "object",
        "title": "concept_synonym.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id": {
                    "type": "boolean"
                  },
                  "concept_synonym_name": {
                    "type": "boolean"
                  },
                  "language_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id",
                    "concept_synonym_name",
                    "language_concept_id"
                  ],
                  "example": "concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_synonym.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_synonym>"
      },
      "concept_synonym.Filter1": {
        "type": "object",
        "title": "concept_synonym.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "concept_synonym.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "concept_id": {
                    "type": "boolean"
                  },
                  "concept_synonym_name": {
                    "type": "boolean"
                  },
                  "language_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "concept_id",
                    "concept_synonym_name",
                    "language_concept_id"
                  ],
                  "example": "concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "concept_synonym.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<concept_synonym>"
      },
      "condition_era.Filter": {
        "type": "object",
        "title": "condition_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "condition_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "condition_concept_id": {
                    "type": "boolean"
                  },
                  "condition_era_start_date": {
                    "type": "boolean"
                  },
                  "condition_era_end_date": {
                    "type": "boolean"
                  },
                  "condition_occurrence_count": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "condition_era_id",
                    "person_id",
                    "condition_concept_id",
                    "condition_era_start_date",
                    "condition_era_end_date",
                    "condition_occurrence_count"
                  ],
                  "example": "condition_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "condition_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<condition_era>"
      },
      "condition_era.Filter1": {
        "type": "object",
        "title": "condition_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "condition_era.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "condition_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "condition_concept_id": {
                    "type": "boolean"
                  },
                  "condition_era_start_date": {
                    "type": "boolean"
                  },
                  "condition_era_end_date": {
                    "type": "boolean"
                  },
                  "condition_occurrence_count": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "condition_era_id",
                    "person_id",
                    "condition_concept_id",
                    "condition_era_start_date",
                    "condition_era_end_date",
                    "condition_occurrence_count"
                  ],
                  "example": "condition_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "condition_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<condition_era>"
      },
      "condition_occurrence.Filter": {
        "type": "object",
        "title": "condition_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "condition_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "condition_concept_id": {
                    "type": "boolean"
                  },
                  "condition_start_date": {
                    "type": "boolean"
                  },
                  "condition_start_datetime": {
                    "type": "boolean"
                  },
                  "condition_end_date": {
                    "type": "boolean"
                  },
                  "condition_end_datetime": {
                    "type": "boolean"
                  },
                  "condition_type_concept_id": {
                    "type": "boolean"
                  },
                  "condition_status_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "condition_source_value": {
                    "type": "boolean"
                  },
                  "condition_source_concept_id": {
                    "type": "boolean"
                  },
                  "condition_status_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "condition_occurrence_id",
                    "person_id",
                    "condition_concept_id",
                    "condition_start_date",
                    "condition_start_datetime",
                    "condition_end_date",
                    "condition_end_datetime",
                    "condition_type_concept_id",
                    "condition_status_concept_id",
                    "stop_reason",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "condition_source_value",
                    "condition_source_concept_id",
                    "condition_status_source_value"
                  ],
                  "example": "condition_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "condition_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<condition_occurrence>"
      },
      "condition_occurrence.Filter1": {
        "type": "object",
        "title": "condition_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "condition_occurrence.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "condition_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "condition_concept_id": {
                    "type": "boolean"
                  },
                  "condition_start_date": {
                    "type": "boolean"
                  },
                  "condition_start_datetime": {
                    "type": "boolean"
                  },
                  "condition_end_date": {
                    "type": "boolean"
                  },
                  "condition_end_datetime": {
                    "type": "boolean"
                  },
                  "condition_type_concept_id": {
                    "type": "boolean"
                  },
                  "condition_status_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "condition_source_value": {
                    "type": "boolean"
                  },
                  "condition_source_concept_id": {
                    "type": "boolean"
                  },
                  "condition_status_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "condition_occurrence_id",
                    "person_id",
                    "condition_concept_id",
                    "condition_start_date",
                    "condition_start_datetime",
                    "condition_end_date",
                    "condition_end_datetime",
                    "condition_type_concept_id",
                    "condition_status_concept_id",
                    "stop_reason",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "condition_source_value",
                    "condition_source_concept_id",
                    "condition_status_source_value"
                  ],
                  "example": "condition_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "condition_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<condition_occurrence>"
      },
      "cost.Filter": {
        "type": "object",
        "title": "cost.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cost_id": {
                    "type": "boolean"
                  },
                  "cost_event_id": {
                    "type": "boolean"
                  },
                  "cost_domain_id": {
                    "type": "boolean"
                  },
                  "cost_type_concept_id": {
                    "type": "boolean"
                  },
                  "currency_concept_id": {
                    "type": "boolean"
                  },
                  "total_charge": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "boolean"
                  },
                  "total_paid": {
                    "type": "boolean"
                  },
                  "paid_by_payer": {
                    "type": "boolean"
                  },
                  "paid_by_patient": {
                    "type": "boolean"
                  },
                  "paid_patient_copay": {
                    "type": "boolean"
                  },
                  "paid_patient_coinsurance": {
                    "type": "boolean"
                  },
                  "paid_patient_deductible": {
                    "type": "boolean"
                  },
                  "paid_by_primary": {
                    "type": "boolean"
                  },
                  "paid_ingredient_cost": {
                    "type": "boolean"
                  },
                  "paid_dispensing_fee": {
                    "type": "boolean"
                  },
                  "payer_plan_period_id": {
                    "type": "boolean"
                  },
                  "amount_allowed": {
                    "type": "boolean"
                  },
                  "revenue_code_concept_id": {
                    "type": "boolean"
                  },
                  "revenue_code_source_value": {
                    "type": "boolean"
                  },
                  "drg_concept_id": {
                    "type": "boolean"
                  },
                  "drg_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cost_id",
                    "cost_event_id",
                    "cost_domain_id",
                    "cost_type_concept_id",
                    "currency_concept_id",
                    "total_charge",
                    "total_cost",
                    "total_paid",
                    "paid_by_payer",
                    "paid_by_patient",
                    "paid_patient_copay",
                    "paid_patient_coinsurance",
                    "paid_patient_deductible",
                    "paid_by_primary",
                    "paid_ingredient_cost",
                    "paid_dispensing_fee",
                    "payer_plan_period_id",
                    "amount_allowed",
                    "revenue_code_concept_id",
                    "revenue_code_source_value",
                    "drg_concept_id",
                    "drg_source_value"
                  ],
                  "example": "cost_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cost.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cost>"
      },
      "cost.Filter1": {
        "type": "object",
        "title": "cost.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "cost.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "cost_id": {
                    "type": "boolean"
                  },
                  "cost_event_id": {
                    "type": "boolean"
                  },
                  "cost_domain_id": {
                    "type": "boolean"
                  },
                  "cost_type_concept_id": {
                    "type": "boolean"
                  },
                  "currency_concept_id": {
                    "type": "boolean"
                  },
                  "total_charge": {
                    "type": "boolean"
                  },
                  "total_cost": {
                    "type": "boolean"
                  },
                  "total_paid": {
                    "type": "boolean"
                  },
                  "paid_by_payer": {
                    "type": "boolean"
                  },
                  "paid_by_patient": {
                    "type": "boolean"
                  },
                  "paid_patient_copay": {
                    "type": "boolean"
                  },
                  "paid_patient_coinsurance": {
                    "type": "boolean"
                  },
                  "paid_patient_deductible": {
                    "type": "boolean"
                  },
                  "paid_by_primary": {
                    "type": "boolean"
                  },
                  "paid_ingredient_cost": {
                    "type": "boolean"
                  },
                  "paid_dispensing_fee": {
                    "type": "boolean"
                  },
                  "payer_plan_period_id": {
                    "type": "boolean"
                  },
                  "amount_allowed": {
                    "type": "boolean"
                  },
                  "revenue_code_concept_id": {
                    "type": "boolean"
                  },
                  "revenue_code_source_value": {
                    "type": "boolean"
                  },
                  "drg_concept_id": {
                    "type": "boolean"
                  },
                  "drg_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "cost_id",
                    "cost_event_id",
                    "cost_domain_id",
                    "cost_type_concept_id",
                    "currency_concept_id",
                    "total_charge",
                    "total_cost",
                    "total_paid",
                    "paid_by_payer",
                    "paid_by_patient",
                    "paid_patient_copay",
                    "paid_patient_coinsurance",
                    "paid_patient_deductible",
                    "paid_by_primary",
                    "paid_ingredient_cost",
                    "paid_dispensing_fee",
                    "payer_plan_period_id",
                    "amount_allowed",
                    "revenue_code_concept_id",
                    "revenue_code_source_value",
                    "drg_concept_id",
                    "drg_source_value"
                  ],
                  "example": "cost_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "cost.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<cost>"
      },
      "death.Filter": {
        "type": "object",
        "title": "death.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "person_id": {
                    "type": "boolean"
                  },
                  "death_date": {
                    "type": "boolean"
                  },
                  "death_datetime": {
                    "type": "boolean"
                  },
                  "death_type_concept_id": {
                    "type": "boolean"
                  },
                  "cause_concept_id": {
                    "type": "boolean"
                  },
                  "cause_source_value": {
                    "type": "boolean"
                  },
                  "cause_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "person_id",
                    "death_date",
                    "death_datetime",
                    "death_type_concept_id",
                    "cause_concept_id",
                    "cause_source_value",
                    "cause_source_concept_id"
                  ],
                  "example": "person_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "death.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<death>"
      },
      "death.Filter1": {
        "type": "object",
        "title": "death.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "death.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "person_id": {
                    "type": "boolean"
                  },
                  "death_date": {
                    "type": "boolean"
                  },
                  "death_datetime": {
                    "type": "boolean"
                  },
                  "death_type_concept_id": {
                    "type": "boolean"
                  },
                  "cause_concept_id": {
                    "type": "boolean"
                  },
                  "cause_source_value": {
                    "type": "boolean"
                  },
                  "cause_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "person_id",
                    "death_date",
                    "death_datetime",
                    "death_type_concept_id",
                    "cause_concept_id",
                    "cause_source_value",
                    "cause_source_concept_id"
                  ],
                  "example": "person_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "death.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<death>"
      },
      "device_exposure.Filter": {
        "type": "object",
        "title": "device_exposure.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "device_exposure_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "device_concept_id": {
                    "type": "boolean"
                  },
                  "device_exposure_start_date": {
                    "type": "boolean"
                  },
                  "device_exposure_start_datetime": {
                    "type": "boolean"
                  },
                  "device_exposure_end_date": {
                    "type": "boolean"
                  },
                  "device_exposure_end_datetime": {
                    "type": "boolean"
                  },
                  "device_type_concept_id": {
                    "type": "boolean"
                  },
                  "unique_device_id": {
                    "type": "boolean"
                  },
                  "production_id": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "device_source_value": {
                    "type": "boolean"
                  },
                  "device_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "device_exposure_id",
                    "person_id",
                    "device_concept_id",
                    "device_exposure_start_date",
                    "device_exposure_start_datetime",
                    "device_exposure_end_date",
                    "device_exposure_end_datetime",
                    "device_type_concept_id",
                    "unique_device_id",
                    "production_id",
                    "quantity",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "device_source_value",
                    "device_source_concept_id",
                    "unit_concept_id",
                    "unit_source_value",
                    "unit_source_concept_id"
                  ],
                  "example": "device_exposure_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "device_exposure.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<device_exposure>"
      },
      "device_exposure.Filter1": {
        "type": "object",
        "title": "device_exposure.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "device_exposure.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "device_exposure_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "device_concept_id": {
                    "type": "boolean"
                  },
                  "device_exposure_start_date": {
                    "type": "boolean"
                  },
                  "device_exposure_start_datetime": {
                    "type": "boolean"
                  },
                  "device_exposure_end_date": {
                    "type": "boolean"
                  },
                  "device_exposure_end_datetime": {
                    "type": "boolean"
                  },
                  "device_type_concept_id": {
                    "type": "boolean"
                  },
                  "unique_device_id": {
                    "type": "boolean"
                  },
                  "production_id": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "device_source_value": {
                    "type": "boolean"
                  },
                  "device_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "device_exposure_id",
                    "person_id",
                    "device_concept_id",
                    "device_exposure_start_date",
                    "device_exposure_start_datetime",
                    "device_exposure_end_date",
                    "device_exposure_end_datetime",
                    "device_type_concept_id",
                    "unique_device_id",
                    "production_id",
                    "quantity",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "device_source_value",
                    "device_source_concept_id",
                    "unit_concept_id",
                    "unit_source_value",
                    "unit_source_concept_id"
                  ],
                  "example": "device_exposure_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "device_exposure.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<device_exposure>"
      },
      "domain.Filter": {
        "type": "object",
        "title": "domain.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "domain_id": {
                    "type": "boolean"
                  },
                  "domain_name": {
                    "type": "boolean"
                  },
                  "domain_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "domain_id",
                    "domain_name",
                    "domain_concept_id"
                  ],
                  "example": "domain_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "domain.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<domain>"
      },
      "domain.Filter1": {
        "type": "object",
        "title": "domain.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "domain.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "domain_id": {
                    "type": "boolean"
                  },
                  "domain_name": {
                    "type": "boolean"
                  },
                  "domain_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "domain_id",
                    "domain_name",
                    "domain_concept_id"
                  ],
                  "example": "domain_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "domain.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<domain>"
      },
      "dose_era.Filter": {
        "type": "object",
        "title": "dose_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dose_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "dose_value": {
                    "type": "boolean"
                  },
                  "dose_era_start_date": {
                    "type": "boolean"
                  },
                  "dose_era_end_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "dose_era_id",
                    "person_id",
                    "drug_concept_id",
                    "unit_concept_id",
                    "dose_value",
                    "dose_era_start_date",
                    "dose_era_end_date"
                  ],
                  "example": "dose_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "dose_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<dose_era>"
      },
      "dose_era.Filter1": {
        "type": "object",
        "title": "dose_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "dose_era.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dose_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "dose_value": {
                    "type": "boolean"
                  },
                  "dose_era_start_date": {
                    "type": "boolean"
                  },
                  "dose_era_end_date": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "dose_era_id",
                    "person_id",
                    "drug_concept_id",
                    "unit_concept_id",
                    "dose_value",
                    "dose_era_start_date",
                    "dose_era_end_date"
                  ],
                  "example": "dose_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "dose_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<dose_era>"
      },
      "drug_era.Filter": {
        "type": "object",
        "title": "drug_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "drug_era_start_date": {
                    "type": "boolean"
                  },
                  "drug_era_end_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_count": {
                    "type": "boolean"
                  },
                  "gap_days": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_era_id",
                    "person_id",
                    "drug_concept_id",
                    "drug_era_start_date",
                    "drug_era_end_date",
                    "drug_exposure_count",
                    "gap_days"
                  ],
                  "example": "drug_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_era>"
      },
      "drug_era.Filter1": {
        "type": "object",
        "title": "drug_era.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "drug_era.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_era_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "drug_era_start_date": {
                    "type": "boolean"
                  },
                  "drug_era_end_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_count": {
                    "type": "boolean"
                  },
                  "gap_days": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_era_id",
                    "person_id",
                    "drug_concept_id",
                    "drug_era_start_date",
                    "drug_era_end_date",
                    "drug_exposure_count",
                    "gap_days"
                  ],
                  "example": "drug_era_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_era.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_era>"
      },
      "drug_exposure.Filter": {
        "type": "object",
        "title": "drug_exposure.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_exposure_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "drug_exposure_start_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_start_datetime": {
                    "type": "boolean"
                  },
                  "drug_exposure_end_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_end_datetime": {
                    "type": "boolean"
                  },
                  "verbatim_end_date": {
                    "type": "boolean"
                  },
                  "drug_type_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason": {
                    "type": "boolean"
                  },
                  "refills": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "days_supply": {
                    "type": "boolean"
                  },
                  "sig": {
                    "type": "boolean"
                  },
                  "route_concept_id": {
                    "type": "boolean"
                  },
                  "lot_number": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "drug_source_value": {
                    "type": "boolean"
                  },
                  "drug_source_concept_id": {
                    "type": "boolean"
                  },
                  "route_source_value": {
                    "type": "boolean"
                  },
                  "dose_unit_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_exposure_id",
                    "person_id",
                    "drug_concept_id",
                    "drug_exposure_start_date",
                    "drug_exposure_start_datetime",
                    "drug_exposure_end_date",
                    "drug_exposure_end_datetime",
                    "verbatim_end_date",
                    "drug_type_concept_id",
                    "stop_reason",
                    "refills",
                    "quantity",
                    "days_supply",
                    "sig",
                    "route_concept_id",
                    "lot_number",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "drug_source_value",
                    "drug_source_concept_id",
                    "route_source_value",
                    "dose_unit_source_value"
                  ],
                  "example": "drug_exposure_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_exposure.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_exposure>"
      },
      "drug_exposure.Filter1": {
        "type": "object",
        "title": "drug_exposure.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "drug_exposure.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_exposure_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "drug_exposure_start_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_start_datetime": {
                    "type": "boolean"
                  },
                  "drug_exposure_end_date": {
                    "type": "boolean"
                  },
                  "drug_exposure_end_datetime": {
                    "type": "boolean"
                  },
                  "verbatim_end_date": {
                    "type": "boolean"
                  },
                  "drug_type_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason": {
                    "type": "boolean"
                  },
                  "refills": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "days_supply": {
                    "type": "boolean"
                  },
                  "sig": {
                    "type": "boolean"
                  },
                  "route_concept_id": {
                    "type": "boolean"
                  },
                  "lot_number": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "drug_source_value": {
                    "type": "boolean"
                  },
                  "drug_source_concept_id": {
                    "type": "boolean"
                  },
                  "route_source_value": {
                    "type": "boolean"
                  },
                  "dose_unit_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_exposure_id",
                    "person_id",
                    "drug_concept_id",
                    "drug_exposure_start_date",
                    "drug_exposure_start_datetime",
                    "drug_exposure_end_date",
                    "drug_exposure_end_datetime",
                    "verbatim_end_date",
                    "drug_type_concept_id",
                    "stop_reason",
                    "refills",
                    "quantity",
                    "days_supply",
                    "sig",
                    "route_concept_id",
                    "lot_number",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "drug_source_value",
                    "drug_source_concept_id",
                    "route_source_value",
                    "dose_unit_source_value"
                  ],
                  "example": "drug_exposure_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_exposure.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_exposure>"
      },
      "drug_strength.Filter": {
        "type": "object",
        "title": "drug_strength.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "ingredient_concept_id": {
                    "type": "boolean"
                  },
                  "amount_value": {
                    "type": "boolean"
                  },
                  "amount_unit_concept_id": {
                    "type": "boolean"
                  },
                  "numerator_value": {
                    "type": "boolean"
                  },
                  "numerator_unit_concept_id": {
                    "type": "boolean"
                  },
                  "denominator_value": {
                    "type": "boolean"
                  },
                  "denominator_unit_concept_id": {
                    "type": "boolean"
                  },
                  "box_size": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_concept_id",
                    "ingredient_concept_id",
                    "amount_value",
                    "amount_unit_concept_id",
                    "numerator_value",
                    "numerator_unit_concept_id",
                    "denominator_value",
                    "denominator_unit_concept_id",
                    "box_size",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "drug_concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_strength.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_strength>"
      },
      "drug_strength.Filter1": {
        "type": "object",
        "title": "drug_strength.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "drug_strength.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "drug_concept_id": {
                    "type": "boolean"
                  },
                  "ingredient_concept_id": {
                    "type": "boolean"
                  },
                  "amount_value": {
                    "type": "boolean"
                  },
                  "amount_unit_concept_id": {
                    "type": "boolean"
                  },
                  "numerator_value": {
                    "type": "boolean"
                  },
                  "numerator_unit_concept_id": {
                    "type": "boolean"
                  },
                  "denominator_value": {
                    "type": "boolean"
                  },
                  "denominator_unit_concept_id": {
                    "type": "boolean"
                  },
                  "box_size": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "drug_concept_id",
                    "ingredient_concept_id",
                    "amount_value",
                    "amount_unit_concept_id",
                    "numerator_value",
                    "numerator_unit_concept_id",
                    "denominator_value",
                    "denominator_unit_concept_id",
                    "box_size",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "drug_concept_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "drug_strength.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<drug_strength>"
      },
      "episode.Filter": {
        "type": "object",
        "title": "episode.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "episode_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "episode_concept_id": {
                    "type": "boolean"
                  },
                  "episode_start_date": {
                    "type": "boolean"
                  },
                  "episode_start_datetime": {
                    "type": "boolean"
                  },
                  "episode_end_date": {
                    "type": "boolean"
                  },
                  "episode_end_datetime": {
                    "type": "boolean"
                  },
                  "episode_parent_id": {
                    "type": "boolean"
                  },
                  "episode_number": {
                    "type": "boolean"
                  },
                  "episode_object_concept_id": {
                    "type": "boolean"
                  },
                  "episode_type_concept_id": {
                    "type": "boolean"
                  },
                  "episode_source_value": {
                    "type": "boolean"
                  },
                  "episode_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "episode_id",
                    "person_id",
                    "episode_concept_id",
                    "episode_start_date",
                    "episode_start_datetime",
                    "episode_end_date",
                    "episode_end_datetime",
                    "episode_parent_id",
                    "episode_number",
                    "episode_object_concept_id",
                    "episode_type_concept_id",
                    "episode_source_value",
                    "episode_source_concept_id"
                  ],
                  "example": "episode_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "episode.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<episode>"
      },
      "episode.Filter1": {
        "type": "object",
        "title": "episode.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "episode.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "episode_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "episode_concept_id": {
                    "type": "boolean"
                  },
                  "episode_start_date": {
                    "type": "boolean"
                  },
                  "episode_start_datetime": {
                    "type": "boolean"
                  },
                  "episode_end_date": {
                    "type": "boolean"
                  },
                  "episode_end_datetime": {
                    "type": "boolean"
                  },
                  "episode_parent_id": {
                    "type": "boolean"
                  },
                  "episode_number": {
                    "type": "boolean"
                  },
                  "episode_object_concept_id": {
                    "type": "boolean"
                  },
                  "episode_type_concept_id": {
                    "type": "boolean"
                  },
                  "episode_source_value": {
                    "type": "boolean"
                  },
                  "episode_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "episode_id",
                    "person_id",
                    "episode_concept_id",
                    "episode_start_date",
                    "episode_start_datetime",
                    "episode_end_date",
                    "episode_end_datetime",
                    "episode_parent_id",
                    "episode_number",
                    "episode_object_concept_id",
                    "episode_type_concept_id",
                    "episode_source_value",
                    "episode_source_concept_id"
                  ],
                  "example": "episode_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "episode.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<episode>"
      },
      "episode_event.Filter": {
        "type": "object",
        "title": "episode_event.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "episode_id": {
                    "type": "boolean"
                  },
                  "event_id": {
                    "type": "boolean"
                  },
                  "episode_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "episode_id",
                    "event_id",
                    "episode_event_field_concept_id"
                  ],
                  "example": "episode_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "episode_event.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<episode_event>"
      },
      "episode_event.Filter1": {
        "type": "object",
        "title": "episode_event.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "episode_event.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "episode_id": {
                    "type": "boolean"
                  },
                  "event_id": {
                    "type": "boolean"
                  },
                  "episode_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "episode_id",
                    "event_id",
                    "episode_event_field_concept_id"
                  ],
                  "example": "episode_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "episode_event.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<episode_event>"
      },
      "fact_relationship.Filter": {
        "type": "object",
        "title": "fact_relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "domain_concept_id_1": {
                    "type": "boolean"
                  },
                  "fact_id_1": {
                    "type": "boolean"
                  },
                  "domain_concept_id_2": {
                    "type": "boolean"
                  },
                  "fact_id_2": {
                    "type": "boolean"
                  },
                  "relationship_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "domain_concept_id_1",
                    "fact_id_1",
                    "domain_concept_id_2",
                    "fact_id_2",
                    "relationship_concept_id"
                  ],
                  "example": "domain_concept_id_1"
                },
                "uniqueItems": true
              }
            ],
            "title": "fact_relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<fact_relationship>"
      },
      "fact_relationship.Filter1": {
        "type": "object",
        "title": "fact_relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "fact_relationship.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "domain_concept_id_1": {
                    "type": "boolean"
                  },
                  "fact_id_1": {
                    "type": "boolean"
                  },
                  "domain_concept_id_2": {
                    "type": "boolean"
                  },
                  "fact_id_2": {
                    "type": "boolean"
                  },
                  "relationship_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "domain_concept_id_1",
                    "fact_id_1",
                    "domain_concept_id_2",
                    "fact_id_2",
                    "relationship_concept_id"
                  ],
                  "example": "domain_concept_id_1"
                },
                "uniqueItems": true
              }
            ],
            "title": "fact_relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<fact_relationship>"
      },
      "location.Filter": {
        "type": "object",
        "title": "location.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "boolean"
                  },
                  "address_1": {
                    "type": "boolean"
                  },
                  "address_2": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "zip": {
                    "type": "boolean"
                  },
                  "county": {
                    "type": "boolean"
                  },
                  "location_source_value": {
                    "type": "boolean"
                  },
                  "country_concept_id": {
                    "type": "boolean"
                  },
                  "country_source_value": {
                    "type": "boolean"
                  },
                  "latitude": {
                    "type": "boolean"
                  },
                  "longitude": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "location_id",
                    "address_1",
                    "address_2",
                    "city",
                    "state",
                    "zip",
                    "county",
                    "location_source_value",
                    "country_concept_id",
                    "country_source_value",
                    "latitude",
                    "longitude"
                  ],
                  "example": "location_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "location.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<location>"
      },
      "location.Filter1": {
        "type": "object",
        "title": "location.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "location.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "boolean"
                  },
                  "address_1": {
                    "type": "boolean"
                  },
                  "address_2": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "zip": {
                    "type": "boolean"
                  },
                  "county": {
                    "type": "boolean"
                  },
                  "location_source_value": {
                    "type": "boolean"
                  },
                  "country_concept_id": {
                    "type": "boolean"
                  },
                  "country_source_value": {
                    "type": "boolean"
                  },
                  "latitude": {
                    "type": "boolean"
                  },
                  "longitude": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "location_id",
                    "address_1",
                    "address_2",
                    "city",
                    "state",
                    "zip",
                    "county",
                    "location_source_value",
                    "country_concept_id",
                    "country_source_value",
                    "latitude",
                    "longitude"
                  ],
                  "example": "location_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "location.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<location>"
      },
      "measurement.Filter": {
        "type": "object",
        "title": "measurement.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "measurement_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "measurement_concept_id": {
                    "type": "boolean"
                  },
                  "measurement_date": {
                    "type": "boolean"
                  },
                  "measurement_datetime": {
                    "type": "boolean"
                  },
                  "measurement_time": {
                    "type": "boolean"
                  },
                  "measurement_type_concept_id": {
                    "type": "boolean"
                  },
                  "operator_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "range_low": {
                    "type": "boolean"
                  },
                  "range_high": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "measurement_source_value": {
                    "type": "boolean"
                  },
                  "measurement_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_concept_id": {
                    "type": "boolean"
                  },
                  "value_source_value": {
                    "type": "boolean"
                  },
                  "measurement_event_id": {
                    "type": "boolean"
                  },
                  "meas_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "measurement_id",
                    "person_id",
                    "measurement_concept_id",
                    "measurement_date",
                    "measurement_datetime",
                    "measurement_time",
                    "measurement_type_concept_id",
                    "operator_concept_id",
                    "value_as_number",
                    "value_as_concept_id",
                    "unit_concept_id",
                    "range_low",
                    "range_high",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "measurement_source_value",
                    "measurement_source_concept_id",
                    "unit_source_value",
                    "unit_source_concept_id",
                    "value_source_value",
                    "measurement_event_id",
                    "meas_event_field_concept_id"
                  ],
                  "example": "measurement_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "measurement.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<measurement>"
      },
      "measurement.Filter1": {
        "type": "object",
        "title": "measurement.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "measurement.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "measurement_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "measurement_concept_id": {
                    "type": "boolean"
                  },
                  "measurement_date": {
                    "type": "boolean"
                  },
                  "measurement_datetime": {
                    "type": "boolean"
                  },
                  "measurement_time": {
                    "type": "boolean"
                  },
                  "measurement_type_concept_id": {
                    "type": "boolean"
                  },
                  "operator_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "range_low": {
                    "type": "boolean"
                  },
                  "range_high": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "measurement_source_value": {
                    "type": "boolean"
                  },
                  "measurement_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_concept_id": {
                    "type": "boolean"
                  },
                  "value_source_value": {
                    "type": "boolean"
                  },
                  "measurement_event_id": {
                    "type": "boolean"
                  },
                  "meas_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "measurement_id",
                    "person_id",
                    "measurement_concept_id",
                    "measurement_date",
                    "measurement_datetime",
                    "measurement_time",
                    "measurement_type_concept_id",
                    "operator_concept_id",
                    "value_as_number",
                    "value_as_concept_id",
                    "unit_concept_id",
                    "range_low",
                    "range_high",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "measurement_source_value",
                    "measurement_source_concept_id",
                    "unit_source_value",
                    "unit_source_concept_id",
                    "value_source_value",
                    "measurement_event_id",
                    "meas_event_field_concept_id"
                  ],
                  "example": "measurement_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "measurement.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<measurement>"
      },
      "metadata.Filter": {
        "type": "object",
        "title": "metadata.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "metadata_id": {
                    "type": "boolean"
                  },
                  "metadata_concept_id": {
                    "type": "boolean"
                  },
                  "metadata_type_concept_id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "value_as_string": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "metadata_date": {
                    "type": "boolean"
                  },
                  "metadata_datetime": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metadata_id",
                    "metadata_concept_id",
                    "metadata_type_concept_id",
                    "name",
                    "value_as_string",
                    "value_as_concept_id",
                    "value_as_number",
                    "metadata_date",
                    "metadata_datetime"
                  ],
                  "example": "metadata_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "metadata.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<metadata>"
      },
      "metadata.Filter1": {
        "type": "object",
        "title": "metadata.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "metadata.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "metadata_id": {
                    "type": "boolean"
                  },
                  "metadata_concept_id": {
                    "type": "boolean"
                  },
                  "metadata_type_concept_id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "value_as_string": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "metadata_date": {
                    "type": "boolean"
                  },
                  "metadata_datetime": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "metadata_id",
                    "metadata_concept_id",
                    "metadata_type_concept_id",
                    "name",
                    "value_as_string",
                    "value_as_concept_id",
                    "value_as_number",
                    "metadata_date",
                    "metadata_datetime"
                  ],
                  "example": "metadata_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "metadata.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<metadata>"
      },
      "note.Filter": {
        "type": "object",
        "title": "note.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "note_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "note_date": {
                    "type": "boolean"
                  },
                  "note_datetime": {
                    "type": "boolean"
                  },
                  "note_type_concept_id": {
                    "type": "boolean"
                  },
                  "note_class_concept_id": {
                    "type": "boolean"
                  },
                  "note_title": {
                    "type": "boolean"
                  },
                  "note_text": {
                    "type": "boolean"
                  },
                  "encoding_concept_id": {
                    "type": "boolean"
                  },
                  "language_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "note_source_value": {
                    "type": "boolean"
                  },
                  "note_event_id": {
                    "type": "boolean"
                  },
                  "note_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "note_id",
                    "person_id",
                    "note_date",
                    "note_datetime",
                    "note_type_concept_id",
                    "note_class_concept_id",
                    "note_title",
                    "note_text",
                    "encoding_concept_id",
                    "language_concept_id",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "note_source_value",
                    "note_event_id",
                    "note_event_field_concept_id"
                  ],
                  "example": "note_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "note.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<note>"
      },
      "note.Filter1": {
        "type": "object",
        "title": "note.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "note.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "note_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "note_date": {
                    "type": "boolean"
                  },
                  "note_datetime": {
                    "type": "boolean"
                  },
                  "note_type_concept_id": {
                    "type": "boolean"
                  },
                  "note_class_concept_id": {
                    "type": "boolean"
                  },
                  "note_title": {
                    "type": "boolean"
                  },
                  "note_text": {
                    "type": "boolean"
                  },
                  "encoding_concept_id": {
                    "type": "boolean"
                  },
                  "language_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "note_source_value": {
                    "type": "boolean"
                  },
                  "note_event_id": {
                    "type": "boolean"
                  },
                  "note_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "note_id",
                    "person_id",
                    "note_date",
                    "note_datetime",
                    "note_type_concept_id",
                    "note_class_concept_id",
                    "note_title",
                    "note_text",
                    "encoding_concept_id",
                    "language_concept_id",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "note_source_value",
                    "note_event_id",
                    "note_event_field_concept_id"
                  ],
                  "example": "note_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "note.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<note>"
      },
      "note_nlp.Filter": {
        "type": "object",
        "title": "note_nlp.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "note_nlp_id": {
                    "type": "boolean"
                  },
                  "note_id": {
                    "type": "boolean"
                  },
                  "section_concept_id": {
                    "type": "boolean"
                  },
                  "snippet": {
                    "type": "boolean"
                  },
                  "offset": {
                    "type": "boolean"
                  },
                  "lexical_variant": {
                    "type": "boolean"
                  },
                  "note_nlp_concept_id": {
                    "type": "boolean"
                  },
                  "note_nlp_source_concept_id": {
                    "type": "boolean"
                  },
                  "nlp_system": {
                    "type": "boolean"
                  },
                  "nlp_date": {
                    "type": "boolean"
                  },
                  "nlp_datetime": {
                    "type": "boolean"
                  },
                  "term_exists": {
                    "type": "boolean"
                  },
                  "term_temporal": {
                    "type": "boolean"
                  },
                  "term_modifiers": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "note_nlp_id",
                    "note_id",
                    "section_concept_id",
                    "snippet",
                    "offset",
                    "lexical_variant",
                    "note_nlp_concept_id",
                    "note_nlp_source_concept_id",
                    "nlp_system",
                    "nlp_date",
                    "nlp_datetime",
                    "term_exists",
                    "term_temporal",
                    "term_modifiers"
                  ],
                  "example": "note_nlp_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "note_nlp.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<note_nlp>"
      },
      "note_nlp.Filter1": {
        "type": "object",
        "title": "note_nlp.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "note_nlp.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "note_nlp_id": {
                    "type": "boolean"
                  },
                  "note_id": {
                    "type": "boolean"
                  },
                  "section_concept_id": {
                    "type": "boolean"
                  },
                  "snippet": {
                    "type": "boolean"
                  },
                  "offset": {
                    "type": "boolean"
                  },
                  "lexical_variant": {
                    "type": "boolean"
                  },
                  "note_nlp_concept_id": {
                    "type": "boolean"
                  },
                  "note_nlp_source_concept_id": {
                    "type": "boolean"
                  },
                  "nlp_system": {
                    "type": "boolean"
                  },
                  "nlp_date": {
                    "type": "boolean"
                  },
                  "nlp_datetime": {
                    "type": "boolean"
                  },
                  "term_exists": {
                    "type": "boolean"
                  },
                  "term_temporal": {
                    "type": "boolean"
                  },
                  "term_modifiers": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "note_nlp_id",
                    "note_id",
                    "section_concept_id",
                    "snippet",
                    "offset",
                    "lexical_variant",
                    "note_nlp_concept_id",
                    "note_nlp_source_concept_id",
                    "nlp_system",
                    "nlp_date",
                    "nlp_datetime",
                    "term_exists",
                    "term_temporal",
                    "term_modifiers"
                  ],
                  "example": "note_nlp_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "note_nlp.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<note_nlp>"
      },
      "observation.Filter": {
        "type": "object",
        "title": "observation.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "observation_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "observation_concept_id": {
                    "type": "boolean"
                  },
                  "observation_date": {
                    "type": "boolean"
                  },
                  "observation_datetime": {
                    "type": "boolean"
                  },
                  "observation_type_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "value_as_string": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "qualifier_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "observation_source_value": {
                    "type": "boolean"
                  },
                  "observation_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "qualifier_source_value": {
                    "type": "boolean"
                  },
                  "value_source_value": {
                    "type": "boolean"
                  },
                  "observation_event_id": {
                    "type": "boolean"
                  },
                  "obs_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "observation_id",
                    "person_id",
                    "observation_concept_id",
                    "observation_date",
                    "observation_datetime",
                    "observation_type_concept_id",
                    "value_as_number",
                    "value_as_string",
                    "value_as_concept_id",
                    "qualifier_concept_id",
                    "unit_concept_id",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "observation_source_value",
                    "observation_source_concept_id",
                    "unit_source_value",
                    "qualifier_source_value",
                    "value_source_value",
                    "observation_event_id",
                    "obs_event_field_concept_id"
                  ],
                  "example": "observation_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "observation.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<observation>"
      },
      "observation.Filter1": {
        "type": "object",
        "title": "observation.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "observation.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "observation_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "observation_concept_id": {
                    "type": "boolean"
                  },
                  "observation_date": {
                    "type": "boolean"
                  },
                  "observation_datetime": {
                    "type": "boolean"
                  },
                  "observation_type_concept_id": {
                    "type": "boolean"
                  },
                  "value_as_number": {
                    "type": "boolean"
                  },
                  "value_as_string": {
                    "type": "boolean"
                  },
                  "value_as_concept_id": {
                    "type": "boolean"
                  },
                  "qualifier_concept_id": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "observation_source_value": {
                    "type": "boolean"
                  },
                  "observation_source_concept_id": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "qualifier_source_value": {
                    "type": "boolean"
                  },
                  "value_source_value": {
                    "type": "boolean"
                  },
                  "observation_event_id": {
                    "type": "boolean"
                  },
                  "obs_event_field_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "observation_id",
                    "person_id",
                    "observation_concept_id",
                    "observation_date",
                    "observation_datetime",
                    "observation_type_concept_id",
                    "value_as_number",
                    "value_as_string",
                    "value_as_concept_id",
                    "qualifier_concept_id",
                    "unit_concept_id",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "observation_source_value",
                    "observation_source_concept_id",
                    "unit_source_value",
                    "qualifier_source_value",
                    "value_source_value",
                    "observation_event_id",
                    "obs_event_field_concept_id"
                  ],
                  "example": "observation_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "observation.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<observation>"
      },
      "observation_period.Filter": {
        "type": "object",
        "title": "observation_period.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "observation_period_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "observation_period_start_date": {
                    "type": "boolean"
                  },
                  "observation_period_end_date": {
                    "type": "boolean"
                  },
                  "period_type_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "observation_period_id",
                    "person_id",
                    "observation_period_start_date",
                    "observation_period_end_date",
                    "period_type_concept_id"
                  ],
                  "example": "observation_period_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "observation_period.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<observation_period>"
      },
      "observation_period.Filter1": {
        "type": "object",
        "title": "observation_period.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "observation_period.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "observation_period_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "observation_period_start_date": {
                    "type": "boolean"
                  },
                  "observation_period_end_date": {
                    "type": "boolean"
                  },
                  "period_type_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "observation_period_id",
                    "person_id",
                    "observation_period_start_date",
                    "observation_period_end_date",
                    "period_type_concept_id"
                  ],
                  "example": "observation_period_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "observation_period.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<observation_period>"
      },
      "payer_plan_period.Filter": {
        "type": "object",
        "title": "payer_plan_period.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "payer_plan_period_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "payer_plan_period_start_date": {
                    "type": "boolean"
                  },
                  "payer_plan_period_end_date": {
                    "type": "boolean"
                  },
                  "payer_concept_id": {
                    "type": "boolean"
                  },
                  "payer_source_value": {
                    "type": "boolean"
                  },
                  "payer_source_concept_id": {
                    "type": "boolean"
                  },
                  "plan_concept_id": {
                    "type": "boolean"
                  },
                  "plan_source_value": {
                    "type": "boolean"
                  },
                  "plan_source_concept_id": {
                    "type": "boolean"
                  },
                  "sponsor_concept_id": {
                    "type": "boolean"
                  },
                  "sponsor_source_value": {
                    "type": "boolean"
                  },
                  "sponsor_source_concept_id": {
                    "type": "boolean"
                  },
                  "family_source_value": {
                    "type": "boolean"
                  },
                  "stop_reason_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason_source_value": {
                    "type": "boolean"
                  },
                  "stop_reason_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "payer_plan_period_id",
                    "person_id",
                    "payer_plan_period_start_date",
                    "payer_plan_period_end_date",
                    "payer_concept_id",
                    "payer_source_value",
                    "payer_source_concept_id",
                    "plan_concept_id",
                    "plan_source_value",
                    "plan_source_concept_id",
                    "sponsor_concept_id",
                    "sponsor_source_value",
                    "sponsor_source_concept_id",
                    "family_source_value",
                    "stop_reason_concept_id",
                    "stop_reason_source_value",
                    "stop_reason_source_concept_id"
                  ],
                  "example": "payer_plan_period_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "payer_plan_period.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<payer_plan_period>"
      },
      "payer_plan_period.Filter1": {
        "type": "object",
        "title": "payer_plan_period.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "payer_plan_period.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "payer_plan_period_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "payer_plan_period_start_date": {
                    "type": "boolean"
                  },
                  "payer_plan_period_end_date": {
                    "type": "boolean"
                  },
                  "payer_concept_id": {
                    "type": "boolean"
                  },
                  "payer_source_value": {
                    "type": "boolean"
                  },
                  "payer_source_concept_id": {
                    "type": "boolean"
                  },
                  "plan_concept_id": {
                    "type": "boolean"
                  },
                  "plan_source_value": {
                    "type": "boolean"
                  },
                  "plan_source_concept_id": {
                    "type": "boolean"
                  },
                  "sponsor_concept_id": {
                    "type": "boolean"
                  },
                  "sponsor_source_value": {
                    "type": "boolean"
                  },
                  "sponsor_source_concept_id": {
                    "type": "boolean"
                  },
                  "family_source_value": {
                    "type": "boolean"
                  },
                  "stop_reason_concept_id": {
                    "type": "boolean"
                  },
                  "stop_reason_source_value": {
                    "type": "boolean"
                  },
                  "stop_reason_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "payer_plan_period_id",
                    "person_id",
                    "payer_plan_period_start_date",
                    "payer_plan_period_end_date",
                    "payer_concept_id",
                    "payer_source_value",
                    "payer_source_concept_id",
                    "plan_concept_id",
                    "plan_source_value",
                    "plan_source_concept_id",
                    "sponsor_concept_id",
                    "sponsor_source_value",
                    "sponsor_source_concept_id",
                    "family_source_value",
                    "stop_reason_concept_id",
                    "stop_reason_source_value",
                    "stop_reason_source_concept_id"
                  ],
                  "example": "payer_plan_period_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "payer_plan_period.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<payer_plan_period>"
      },
      "person.Filter": {
        "type": "object",
        "title": "person.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "person_id": {
                    "type": "boolean"
                  },
                  "gender_concept_id": {
                    "type": "boolean"
                  },
                  "year_of_birth": {
                    "type": "boolean"
                  },
                  "month_of_birth": {
                    "type": "boolean"
                  },
                  "day_of_birth": {
                    "type": "boolean"
                  },
                  "birth_datetime": {
                    "type": "boolean"
                  },
                  "race_concept_id": {
                    "type": "boolean"
                  },
                  "ethnicity_concept_id": {
                    "type": "boolean"
                  },
                  "location_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "person_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_concept_id": {
                    "type": "boolean"
                  },
                  "race_source_value": {
                    "type": "boolean"
                  },
                  "race_source_concept_id": {
                    "type": "boolean"
                  },
                  "ethnicity_source_value": {
                    "type": "boolean"
                  },
                  "ethnicity_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "person_id",
                    "gender_concept_id",
                    "year_of_birth",
                    "month_of_birth",
                    "day_of_birth",
                    "birth_datetime",
                    "race_concept_id",
                    "ethnicity_concept_id",
                    "location_id",
                    "provider_id",
                    "care_site_id",
                    "person_source_value",
                    "gender_source_value",
                    "gender_source_concept_id",
                    "race_source_value",
                    "race_source_concept_id",
                    "ethnicity_source_value",
                    "ethnicity_source_concept_id"
                  ],
                  "example": "person_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "person.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<person>"
      },
      "person.Filter1": {
        "type": "object",
        "title": "person.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "person.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "person_id": {
                    "type": "boolean"
                  },
                  "gender_concept_id": {
                    "type": "boolean"
                  },
                  "year_of_birth": {
                    "type": "boolean"
                  },
                  "month_of_birth": {
                    "type": "boolean"
                  },
                  "day_of_birth": {
                    "type": "boolean"
                  },
                  "birth_datetime": {
                    "type": "boolean"
                  },
                  "race_concept_id": {
                    "type": "boolean"
                  },
                  "ethnicity_concept_id": {
                    "type": "boolean"
                  },
                  "location_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "person_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_concept_id": {
                    "type": "boolean"
                  },
                  "race_source_value": {
                    "type": "boolean"
                  },
                  "race_source_concept_id": {
                    "type": "boolean"
                  },
                  "ethnicity_source_value": {
                    "type": "boolean"
                  },
                  "ethnicity_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "person_id",
                    "gender_concept_id",
                    "year_of_birth",
                    "month_of_birth",
                    "day_of_birth",
                    "birth_datetime",
                    "race_concept_id",
                    "ethnicity_concept_id",
                    "location_id",
                    "provider_id",
                    "care_site_id",
                    "person_source_value",
                    "gender_source_value",
                    "gender_source_concept_id",
                    "race_source_value",
                    "race_source_concept_id",
                    "ethnicity_source_value",
                    "ethnicity_source_concept_id"
                  ],
                  "example": "person_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "person.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<person>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "procedure_occurrence.Filter": {
        "type": "object",
        "title": "procedure_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "procedure_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "procedure_concept_id": {
                    "type": "boolean"
                  },
                  "procedure_date": {
                    "type": "boolean"
                  },
                  "procedure_datetime": {
                    "type": "boolean"
                  },
                  "procedure_end_date": {
                    "type": "boolean"
                  },
                  "procedure_end_datetime": {
                    "type": "boolean"
                  },
                  "procedure_type_concept_id": {
                    "type": "boolean"
                  },
                  "modifier_concept_id": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "procedure_source_value": {
                    "type": "boolean"
                  },
                  "procedure_source_concept_id": {
                    "type": "boolean"
                  },
                  "modifier_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "procedure_occurrence_id",
                    "person_id",
                    "procedure_concept_id",
                    "procedure_date",
                    "procedure_datetime",
                    "procedure_end_date",
                    "procedure_end_datetime",
                    "procedure_type_concept_id",
                    "modifier_concept_id",
                    "quantity",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "procedure_source_value",
                    "procedure_source_concept_id",
                    "modifier_source_value"
                  ],
                  "example": "procedure_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "procedure_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<procedure_occurrence>"
      },
      "procedure_occurrence.Filter1": {
        "type": "object",
        "title": "procedure_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "procedure_occurrence.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "procedure_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "procedure_concept_id": {
                    "type": "boolean"
                  },
                  "procedure_date": {
                    "type": "boolean"
                  },
                  "procedure_datetime": {
                    "type": "boolean"
                  },
                  "procedure_end_date": {
                    "type": "boolean"
                  },
                  "procedure_end_datetime": {
                    "type": "boolean"
                  },
                  "procedure_type_concept_id": {
                    "type": "boolean"
                  },
                  "modifier_concept_id": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "procedure_source_value": {
                    "type": "boolean"
                  },
                  "procedure_source_concept_id": {
                    "type": "boolean"
                  },
                  "modifier_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "procedure_occurrence_id",
                    "person_id",
                    "procedure_concept_id",
                    "procedure_date",
                    "procedure_datetime",
                    "procedure_end_date",
                    "procedure_end_datetime",
                    "procedure_type_concept_id",
                    "modifier_concept_id",
                    "quantity",
                    "provider_id",
                    "visit_occurrence_id",
                    "visit_detail_id",
                    "procedure_source_value",
                    "procedure_source_concept_id",
                    "modifier_source_value"
                  ],
                  "example": "procedure_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "procedure_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<procedure_occurrence>"
      },
      "provider.Filter": {
        "type": "object",
        "title": "provider.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "boolean"
                  },
                  "provider_name": {
                    "type": "boolean"
                  },
                  "npi": {
                    "type": "boolean"
                  },
                  "dea": {
                    "type": "boolean"
                  },
                  "specialty_concept_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "year_of_birth": {
                    "type": "boolean"
                  },
                  "gender_concept_id": {
                    "type": "boolean"
                  },
                  "provider_source_value": {
                    "type": "boolean"
                  },
                  "specialty_source_value": {
                    "type": "boolean"
                  },
                  "specialty_source_concept_id": {
                    "type": "boolean"
                  },
                  "gender_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "provider_id",
                    "provider_name",
                    "npi",
                    "dea",
                    "specialty_concept_id",
                    "care_site_id",
                    "year_of_birth",
                    "gender_concept_id",
                    "provider_source_value",
                    "specialty_source_value",
                    "specialty_source_concept_id",
                    "gender_source_value",
                    "gender_source_concept_id"
                  ],
                  "example": "provider_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "provider.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<provider>"
      },
      "provider.Filter1": {
        "type": "object",
        "title": "provider.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "provider.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "boolean"
                  },
                  "provider_name": {
                    "type": "boolean"
                  },
                  "npi": {
                    "type": "boolean"
                  },
                  "dea": {
                    "type": "boolean"
                  },
                  "specialty_concept_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "year_of_birth": {
                    "type": "boolean"
                  },
                  "gender_concept_id": {
                    "type": "boolean"
                  },
                  "provider_source_value": {
                    "type": "boolean"
                  },
                  "specialty_source_value": {
                    "type": "boolean"
                  },
                  "specialty_source_concept_id": {
                    "type": "boolean"
                  },
                  "gender_source_value": {
                    "type": "boolean"
                  },
                  "gender_source_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "provider_id",
                    "provider_name",
                    "npi",
                    "dea",
                    "specialty_concept_id",
                    "care_site_id",
                    "year_of_birth",
                    "gender_concept_id",
                    "provider_source_value",
                    "specialty_source_value",
                    "specialty_source_concept_id",
                    "gender_source_value",
                    "gender_source_concept_id"
                  ],
                  "example": "provider_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "provider.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<provider>"
      },
      "relationship.Filter": {
        "type": "object",
        "title": "relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "relationship_id": {
                    "type": "boolean"
                  },
                  "relationship_name": {
                    "type": "boolean"
                  },
                  "is_hierarchical": {
                    "type": "boolean"
                  },
                  "defines_ancestry": {
                    "type": "boolean"
                  },
                  "reverse_relationship_id": {
                    "type": "boolean"
                  },
                  "relationship_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "relationship_id",
                    "relationship_name",
                    "is_hierarchical",
                    "defines_ancestry",
                    "reverse_relationship_id",
                    "relationship_concept_id"
                  ],
                  "example": "relationship_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<relationship>"
      },
      "relationship.Filter1": {
        "type": "object",
        "title": "relationship.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "relationship.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "relationship_id": {
                    "type": "boolean"
                  },
                  "relationship_name": {
                    "type": "boolean"
                  },
                  "is_hierarchical": {
                    "type": "boolean"
                  },
                  "defines_ancestry": {
                    "type": "boolean"
                  },
                  "reverse_relationship_id": {
                    "type": "boolean"
                  },
                  "relationship_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "relationship_id",
                    "relationship_name",
                    "is_hierarchical",
                    "defines_ancestry",
                    "reverse_relationship_id",
                    "relationship_concept_id"
                  ],
                  "example": "relationship_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "relationship.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<relationship>"
      },
      "ScanRequest.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "ScanRequest.ScopeFilter"
      },
      "ScanRequest.IncludeFilter.Items": {
        "title": "ScanRequest.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/ScanRequest.ScopeFilter"
          }
        }
      },
      "ScanRequest.Filter": {
        "type": "object",
        "title": "ScanRequest.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "dataSourceConfig": {
                    "type": "boolean"
                  },
                  "scanParameters": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "dataSourceConfig",
                    "scanParameters"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ScanRequest.Fields"
          },
          "include": {
            "title": "ScanRequest.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ScanRequest.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ScanRequest>"
      },
      "ScanRequest.Filter1": {
        "type": "object",
        "title": "ScanRequest.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ScanRequest.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "dataSourceConfig": {
                    "type": "boolean"
                  },
                  "scanParameters": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "dataSourceConfig",
                    "scanParameters"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ScanRequest.Fields"
          },
          "include": {
            "title": "ScanRequest.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ScanRequest.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ScanRequest>"
      },
      "source_to_concept_map.Filter": {
        "type": "object",
        "title": "source_to_concept_map.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "source_code": {
                    "type": "boolean"
                  },
                  "source_concept_id": {
                    "type": "boolean"
                  },
                  "source_vocabulary_id": {
                    "type": "boolean"
                  },
                  "source_code_description": {
                    "type": "boolean"
                  },
                  "target_concept_id": {
                    "type": "boolean"
                  },
                  "target_vocabulary_id": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "source_code",
                    "source_concept_id",
                    "source_vocabulary_id",
                    "source_code_description",
                    "target_concept_id",
                    "target_vocabulary_id",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "source_code"
                },
                "uniqueItems": true
              }
            ],
            "title": "source_to_concept_map.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<source_to_concept_map>"
      },
      "source_to_concept_map.Filter1": {
        "type": "object",
        "title": "source_to_concept_map.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "source_to_concept_map.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "source_code": {
                    "type": "boolean"
                  },
                  "source_concept_id": {
                    "type": "boolean"
                  },
                  "source_vocabulary_id": {
                    "type": "boolean"
                  },
                  "source_code_description": {
                    "type": "boolean"
                  },
                  "target_concept_id": {
                    "type": "boolean"
                  },
                  "target_vocabulary_id": {
                    "type": "boolean"
                  },
                  "valid_start_date": {
                    "type": "boolean"
                  },
                  "valid_end_date": {
                    "type": "boolean"
                  },
                  "invalid_reason": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "source_code",
                    "source_concept_id",
                    "source_vocabulary_id",
                    "source_code_description",
                    "target_concept_id",
                    "target_vocabulary_id",
                    "valid_start_date",
                    "valid_end_date",
                    "invalid_reason"
                  ],
                  "example": "source_code"
                },
                "uniqueItems": true
              }
            ],
            "title": "source_to_concept_map.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<source_to_concept_map>"
      },
      "specimen.Filter": {
        "type": "object",
        "title": "specimen.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "specimen_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "specimen_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_type_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_date": {
                    "type": "boolean"
                  },
                  "specimen_datetime": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "anatomic_site_concept_id": {
                    "type": "boolean"
                  },
                  "disease_status_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_source_id": {
                    "type": "boolean"
                  },
                  "specimen_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "anatomic_site_source_value": {
                    "type": "boolean"
                  },
                  "disease_status_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "specimen_id",
                    "person_id",
                    "specimen_concept_id",
                    "specimen_type_concept_id",
                    "specimen_date",
                    "specimen_datetime",
                    "quantity",
                    "unit_concept_id",
                    "anatomic_site_concept_id",
                    "disease_status_concept_id",
                    "specimen_source_id",
                    "specimen_source_value",
                    "unit_source_value",
                    "anatomic_site_source_value",
                    "disease_status_source_value"
                  ],
                  "example": "specimen_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "specimen.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<specimen>"
      },
      "specimen.Filter1": {
        "type": "object",
        "title": "specimen.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "specimen.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "specimen_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "specimen_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_type_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_date": {
                    "type": "boolean"
                  },
                  "specimen_datetime": {
                    "type": "boolean"
                  },
                  "quantity": {
                    "type": "boolean"
                  },
                  "unit_concept_id": {
                    "type": "boolean"
                  },
                  "anatomic_site_concept_id": {
                    "type": "boolean"
                  },
                  "disease_status_concept_id": {
                    "type": "boolean"
                  },
                  "specimen_source_id": {
                    "type": "boolean"
                  },
                  "specimen_source_value": {
                    "type": "boolean"
                  },
                  "unit_source_value": {
                    "type": "boolean"
                  },
                  "anatomic_site_source_value": {
                    "type": "boolean"
                  },
                  "disease_status_source_value": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "specimen_id",
                    "person_id",
                    "specimen_concept_id",
                    "specimen_type_concept_id",
                    "specimen_date",
                    "specimen_datetime",
                    "quantity",
                    "unit_concept_id",
                    "anatomic_site_concept_id",
                    "disease_status_concept_id",
                    "specimen_source_id",
                    "specimen_source_value",
                    "unit_source_value",
                    "anatomic_site_source_value",
                    "disease_status_source_value"
                  ],
                  "example": "specimen_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "specimen.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<specimen>"
      },
      "trips.Filter": {
        "type": "object",
        "title": "trips.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tpep_pickup_datetime": {
                    "type": "boolean"
                  },
                  "tpep_dropoff_datetime": {
                    "type": "boolean"
                  },
                  "trip_distance": {
                    "type": "boolean"
                  },
                  "fare_amount": {
                    "type": "boolean"
                  },
                  "pickup_zip": {
                    "type": "boolean"
                  },
                  "dropoff_zip": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tpep_pickup_datetime",
                    "tpep_dropoff_datetime",
                    "trip_distance",
                    "fare_amount",
                    "pickup_zip",
                    "dropoff_zip"
                  ],
                  "example": "tpep_pickup_datetime"
                },
                "uniqueItems": true
              }
            ],
            "title": "trips.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<trips>"
      },
      "trips.Filter1": {
        "type": "object",
        "title": "trips.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "trips.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tpep_pickup_datetime": {
                    "type": "boolean"
                  },
                  "tpep_dropoff_datetime": {
                    "type": "boolean"
                  },
                  "trip_distance": {
                    "type": "boolean"
                  },
                  "fare_amount": {
                    "type": "boolean"
                  },
                  "pickup_zip": {
                    "type": "boolean"
                  },
                  "dropoff_zip": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "tpep_pickup_datetime",
                    "tpep_dropoff_datetime",
                    "trip_distance",
                    "fare_amount",
                    "pickup_zip",
                    "dropoff_zip"
                  ],
                  "example": "tpep_pickup_datetime"
                },
                "uniqueItems": true
              }
            ],
            "title": "trips.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<trips>"
      },
      "visit_detail.Filter": {
        "type": "object",
        "title": "visit_detail.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "visit_detail_concept_id": {
                    "type": "boolean"
                  },
                  "visit_detail_start_date": {
                    "type": "boolean"
                  },
                  "visit_detail_start_datetime": {
                    "type": "boolean"
                  },
                  "visit_detail_end_date": {
                    "type": "boolean"
                  },
                  "visit_detail_end_datetime": {
                    "type": "boolean"
                  },
                  "visit_detail_type_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "visit_detail_source_value": {
                    "type": "boolean"
                  },
                  "visit_detail_source_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_concept_id": {
                    "type": "boolean"
                  },
                  "preceding_visit_detail_id": {
                    "type": "boolean"
                  },
                  "parent_visit_detail_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "visit_detail_id",
                    "person_id",
                    "visit_detail_concept_id",
                    "visit_detail_start_date",
                    "visit_detail_start_datetime",
                    "visit_detail_end_date",
                    "visit_detail_end_datetime",
                    "visit_detail_type_concept_id",
                    "provider_id",
                    "care_site_id",
                    "visit_detail_source_value",
                    "visit_detail_source_concept_id",
                    "admitted_from_concept_id",
                    "admitted_from_source_value",
                    "discharged_to_source_value",
                    "discharged_to_concept_id",
                    "preceding_visit_detail_id",
                    "parent_visit_detail_id",
                    "visit_occurrence_id"
                  ],
                  "example": "visit_detail_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "visit_detail.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<visit_detail>"
      },
      "visit_detail.Filter1": {
        "type": "object",
        "title": "visit_detail.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "visit_detail.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "visit_detail_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "visit_detail_concept_id": {
                    "type": "boolean"
                  },
                  "visit_detail_start_date": {
                    "type": "boolean"
                  },
                  "visit_detail_start_datetime": {
                    "type": "boolean"
                  },
                  "visit_detail_end_date": {
                    "type": "boolean"
                  },
                  "visit_detail_end_datetime": {
                    "type": "boolean"
                  },
                  "visit_detail_type_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "visit_detail_source_value": {
                    "type": "boolean"
                  },
                  "visit_detail_source_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_concept_id": {
                    "type": "boolean"
                  },
                  "preceding_visit_detail_id": {
                    "type": "boolean"
                  },
                  "parent_visit_detail_id": {
                    "type": "boolean"
                  },
                  "visit_occurrence_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "visit_detail_id",
                    "person_id",
                    "visit_detail_concept_id",
                    "visit_detail_start_date",
                    "visit_detail_start_datetime",
                    "visit_detail_end_date",
                    "visit_detail_end_datetime",
                    "visit_detail_type_concept_id",
                    "provider_id",
                    "care_site_id",
                    "visit_detail_source_value",
                    "visit_detail_source_concept_id",
                    "admitted_from_concept_id",
                    "admitted_from_source_value",
                    "discharged_to_source_value",
                    "discharged_to_concept_id",
                    "preceding_visit_detail_id",
                    "parent_visit_detail_id",
                    "visit_occurrence_id"
                  ],
                  "example": "visit_detail_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "visit_detail.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<visit_detail>"
      },
      "visit_occurrence.Filter": {
        "type": "object",
        "title": "visit_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "visit_concept_id": {
                    "type": "boolean"
                  },
                  "visit_start_date": {
                    "type": "boolean"
                  },
                  "visit_start_datetime": {
                    "type": "boolean"
                  },
                  "visit_end_date": {
                    "type": "boolean"
                  },
                  "visit_end_datetime": {
                    "type": "boolean"
                  },
                  "visit_type_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "visit_source_value": {
                    "type": "boolean"
                  },
                  "visit_source_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_concept_id": {
                    "type": "boolean"
                  },
                  "discharged_to_source_value": {
                    "type": "boolean"
                  },
                  "preceding_visit_occurrence_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "visit_occurrence_id",
                    "person_id",
                    "visit_concept_id",
                    "visit_start_date",
                    "visit_start_datetime",
                    "visit_end_date",
                    "visit_end_datetime",
                    "visit_type_concept_id",
                    "provider_id",
                    "care_site_id",
                    "visit_source_value",
                    "visit_source_concept_id",
                    "admitted_from_concept_id",
                    "admitted_from_source_value",
                    "discharged_to_concept_id",
                    "discharged_to_source_value",
                    "preceding_visit_occurrence_id"
                  ],
                  "example": "visit_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "visit_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<visit_occurrence>"
      },
      "visit_occurrence.Filter1": {
        "type": "object",
        "title": "visit_occurrence.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "visit_occurrence.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "visit_occurrence_id": {
                    "type": "boolean"
                  },
                  "person_id": {
                    "type": "boolean"
                  },
                  "visit_concept_id": {
                    "type": "boolean"
                  },
                  "visit_start_date": {
                    "type": "boolean"
                  },
                  "visit_start_datetime": {
                    "type": "boolean"
                  },
                  "visit_end_date": {
                    "type": "boolean"
                  },
                  "visit_end_datetime": {
                    "type": "boolean"
                  },
                  "visit_type_concept_id": {
                    "type": "boolean"
                  },
                  "provider_id": {
                    "type": "boolean"
                  },
                  "care_site_id": {
                    "type": "boolean"
                  },
                  "visit_source_value": {
                    "type": "boolean"
                  },
                  "visit_source_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_concept_id": {
                    "type": "boolean"
                  },
                  "admitted_from_source_value": {
                    "type": "boolean"
                  },
                  "discharged_to_concept_id": {
                    "type": "boolean"
                  },
                  "discharged_to_source_value": {
                    "type": "boolean"
                  },
                  "preceding_visit_occurrence_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "visit_occurrence_id",
                    "person_id",
                    "visit_concept_id",
                    "visit_start_date",
                    "visit_start_datetime",
                    "visit_end_date",
                    "visit_end_datetime",
                    "visit_type_concept_id",
                    "provider_id",
                    "care_site_id",
                    "visit_source_value",
                    "visit_source_concept_id",
                    "admitted_from_concept_id",
                    "admitted_from_source_value",
                    "discharged_to_concept_id",
                    "discharged_to_source_value",
                    "preceding_visit_occurrence_id"
                  ],
                  "example": "visit_occurrence_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "visit_occurrence.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<visit_occurrence>"
      },
      "vocabulary.Filter": {
        "type": "object",
        "title": "vocabulary.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "vocabulary_id": {
                    "type": "boolean"
                  },
                  "vocabulary_name": {
                    "type": "boolean"
                  },
                  "vocabulary_reference": {
                    "type": "boolean"
                  },
                  "vocabulary_version": {
                    "type": "boolean"
                  },
                  "vocabulary_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "vocabulary_id",
                    "vocabulary_name",
                    "vocabulary_reference",
                    "vocabulary_version",
                    "vocabulary_concept_id"
                  ],
                  "example": "vocabulary_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "vocabulary.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<vocabulary>"
      },
      "vocabulary.Filter1": {
        "type": "object",
        "title": "vocabulary.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "vocabulary.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "vocabulary_id": {
                    "type": "boolean"
                  },
                  "vocabulary_name": {
                    "type": "boolean"
                  },
                  "vocabulary_reference": {
                    "type": "boolean"
                  },
                  "vocabulary_version": {
                    "type": "boolean"
                  },
                  "vocabulary_concept_id": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "vocabulary_id",
                    "vocabulary_name",
                    "vocabulary_reference",
                    "vocabulary_version",
                    "vocabulary_concept_id"
                  ],
                  "example": "vocabulary_id"
                },
                "uniqueItems": true
              }
            ],
            "title": "vocabulary.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<vocabulary>"
      }
    }
  }
}